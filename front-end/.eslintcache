[{"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\index.tsx":"1","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\App.tsx":"3","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\LoggedInUser.tsx":"4","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\ViewProfilePage.tsx":"5","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditTeacherInfo.tsx":"6","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\DisableOrDeleteAccountPage.tsx":"7","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\CreateAccountPage.tsx":"8","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentPage.tsx":"9","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInCoursePage.tsx":"10","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageCoursePage.tsx":"11","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageLessonPage.tsx":"12","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentInCoursePage.tsx":"13","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\home_page\\HomePage.tsx":"14","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInExaminationPage.tsx":"15","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExaminationInCoursePage.tsx":"16","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\select_role_page\\SelectRolePage.tsx":"17","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherDashboardPage.tsx":"18","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\log_in_page\\LogInPage.tsx":"19","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentDashboardPage.tsx":"20","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExamQuestionInExaminationPage.tsx":"21","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonDetailPage.tsx":"22","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\sign_up_page\\SignUpPage.tsx":"23","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\contact_us_page\\ContactPage.tsx":"24","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonListlPage.tsx":"25","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\CourseDetailPage.tsx":"26","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\ManageExamQuestionPage.tsx":"27","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ProfilePage.tsx":"28","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ProtectedRoute.tsx":"29","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\Header.tsx":"30","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ModalDialog.tsx":"31","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PageHeader.tsx":"32","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\HomePageHeader.tsx":"33","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\PersistedStateHook.tsx":"34","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeGuard.tsx":"35","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LogOutAPI.tsx":"36","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeConvert.tsx":"37","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\DetailPage.tsx":"38","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditStudentInfo.tsx":"39","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminConsolePage.tsx":"40","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageTeacherPage.tsx":"41","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\User.tsx":"42","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RoleAPI.tsx":"43","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PagingSection.tsx":"44","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseAPI.tsx":"45","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RegisterFormAPI.tsx":"46","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseLevelAPI.tsx":"47","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseTypeAPI.tsx":"48","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Course.tsx":"49","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LocalStorageService.tsx":"50","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Quiz.tsx":"51","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\InputValidate.tsx":"52","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\QuestionOption.tsx":"53","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\QuizAPI.tsx":"54","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\MultipleChoiceQuestion.tsx":"55","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LessonAPI.tsx":"56","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationAPI.tsx":"57","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Lesson.tsx":"58","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\RegisterForm.tsx":"59","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\UserAPI.tsx":"60","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\student_sidebar\\StudentSidebar.tsx":"61","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\teacher_sidebar\\TeacherSidebar.tsx":"62","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx":"63","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ErrorHandle.tsx":"64","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Examination.tsx":"65","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseType.tsx":"66","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseLevel.tsx":"67","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ShowAllExamPage.tsx":"68","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\TakeExamPage.tsx":"69","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationSessionAPI.tsx":"70","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ShowExamScorePage.tsx":"71","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\StudentScore.tsx":"72","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\HomeWork.tsx":"73","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\ClassSession.tsx":"74","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Slot.tsx":"75","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherClassPage.tsx":"76","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminSpareTimePage.tsx":"77","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminClassPage.tsx":"78","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentClassPage.tsx":"79","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\SpareTimePage.tsx":"80","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ClassAPI.tsx":"81","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TeacherSpareTimeAPI.tsx":"82","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\Chart.tsx":"83"},{"size":664,"mtime":1619741526250,"results":"84","hashOfConfig":"85"},{"size":446,"mtime":1619741526938,"results":"86","hashOfConfig":"85"},{"size":17665,"mtime":1620236363842,"results":"87","hashOfConfig":"85"},{"size":543,"mtime":1619741526314,"results":"88","hashOfConfig":"85"},{"size":5807,"mtime":1619741526444,"results":"89","hashOfConfig":"85"},{"size":11771,"mtime":1619741526418,"results":"90","hashOfConfig":"85"},{"size":11226,"mtime":1620236363895,"results":"91","hashOfConfig":"85"},{"size":15573,"mtime":1620236363890,"results":"92","hashOfConfig":"85"},{"size":10092,"mtime":1620236363903,"results":"93","hashOfConfig":"85"},{"size":6807,"mtime":1620236363907,"results":"94","hashOfConfig":"85"},{"size":32420,"mtime":1620236378342,"results":"95","hashOfConfig":"85"},{"size":36622,"mtime":1620142359273,"results":"96","hashOfConfig":"85"},{"size":21207,"mtime":1619741526554,"results":"97","hashOfConfig":"85"},{"size":2923,"mtime":1619753400004,"results":"98","hashOfConfig":"85"},{"size":8285,"mtime":1619755251016,"results":"99","hashOfConfig":"85"},{"size":41641,"mtime":1619741526521,"results":"100","hashOfConfig":"85"},{"size":2885,"mtime":1619741526829,"results":"101","hashOfConfig":"85"},{"size":4283,"mtime":1620236378346,"results":"102","hashOfConfig":"85"},{"size":9250,"mtime":1620162990879,"results":"103","hashOfConfig":"85"},{"size":6825,"mtime":1620236378343,"results":"104","hashOfConfig":"85"},{"size":35390,"mtime":1619741526506,"results":"105","hashOfConfig":"85"},{"size":4071,"mtime":1619753400014,"results":"106","hashOfConfig":"85"},{"size":16184,"mtime":1620236363908,"results":"107","hashOfConfig":"85"},{"size":1789,"mtime":1619753399994,"results":"108","hashOfConfig":"85"},{"size":3915,"mtime":1619753400018,"results":"109","hashOfConfig":"85"},{"size":3971,"mtime":1619753400011,"results":"110","hashOfConfig":"85"},{"size":62337,"mtime":1619741526912,"results":"111","hashOfConfig":"85"},{"size":21185,"mtime":1619753400022,"results":"112","hashOfConfig":"85"},{"size":5256,"mtime":1619741525805,"results":"113","hashOfConfig":"85"},{"size":2983,"mtime":1619753399841,"results":"114","hashOfConfig":"85"},{"size":3948,"mtime":1619753399836,"results":"115","hashOfConfig":"85"},{"size":2133,"mtime":1619753399838,"results":"116","hashOfConfig":"85"},{"size":5068,"mtime":1619753399845,"results":"117","hashOfConfig":"85"},{"size":956,"mtime":1619741526108,"results":"118","hashOfConfig":"85"},{"size":5793,"mtime":1620162990873,"results":"119","hashOfConfig":"85"},{"size":1278,"mtime":1619741526106,"results":"120","hashOfConfig":"85"},{"size":538,"mtime":1619741526154,"results":"121","hashOfConfig":"85"},{"size":7708,"mtime":1619753399909,"results":"122","hashOfConfig":"85"},{"size":10604,"mtime":1619753399923,"results":"123","hashOfConfig":"85"},{"size":9174,"mtime":1620236378340,"results":"124","hashOfConfig":"85"},{"size":23160,"mtime":1619753399980,"results":"125","hashOfConfig":"85"},{"size":2071,"mtime":1619741526381,"results":"126","hashOfConfig":"85"},{"size":1853,"mtime":1619741526142,"results":"127","hashOfConfig":"85"},{"size":4350,"mtime":1619741525793,"results":"128","hashOfConfig":"85"},{"size":7337,"mtime":1620236363852,"results":"129","hashOfConfig":"85"},{"size":4887,"mtime":1620236363856,"results":"130","hashOfConfig":"85"},{"size":2035,"mtime":1619741526042,"results":"131","hashOfConfig":"85"},{"size":1937,"mtime":1619741526054,"results":"132","hashOfConfig":"85"},{"size":1405,"mtime":1619741526262,"results":"133","hashOfConfig":"85"},{"size":302,"mtime":1619753399887,"results":"134","hashOfConfig":"85"},{"size":1348,"mtime":1620162990876,"results":"135","hashOfConfig":"85"},{"size":2693,"mtime":1619741526092,"results":"136","hashOfConfig":"85"},{"size":1015,"mtime":1619741526338,"results":"137","hashOfConfig":"85"},{"size":7255,"mtime":1619741526119,"results":"138","hashOfConfig":"85"},{"size":1113,"mtime":1619741526325,"results":"139","hashOfConfig":"85"},{"size":6682,"mtime":1619753399885,"results":"140","hashOfConfig":"85"},{"size":10425,"mtime":1619755250874,"results":"141","hashOfConfig":"85"},{"size":1305,"mtime":1619741526303,"results":"142","hashOfConfig":"85"},{"size":1028,"mtime":1619741526361,"results":"143","hashOfConfig":"85"},{"size":19490,"mtime":1620236363865,"results":"144","hashOfConfig":"85"},{"size":5563,"mtime":1619755250849,"results":"145","hashOfConfig":"85"},{"size":1805,"mtime":1619741526025,"results":"146","hashOfConfig":"85"},{"size":554,"mtime":1620236363843,"results":"147","hashOfConfig":"85"},{"size":2180,"mtime":1619755250864,"results":"148","hashOfConfig":"85"},{"size":1387,"mtime":1619755250935,"results":"149","hashOfConfig":"85"},{"size":211,"mtime":1619741526287,"results":"150","hashOfConfig":"85"},{"size":381,"mtime":1619741526275,"results":"151","hashOfConfig":"85"},{"size":12640,"mtime":1620162990881,"results":"152","hashOfConfig":"85"},{"size":31243,"mtime":1620153142744,"results":"153","hashOfConfig":"85"},{"size":9855,"mtime":1620162990872,"results":"154","hashOfConfig":"85"},{"size":3346,"mtime":1620162990882,"results":"155","hashOfConfig":"85"},{"size":623,"mtime":1620162990878,"results":"156","hashOfConfig":"85"},{"size":533,"mtime":1620162990875,"results":"157","hashOfConfig":"85"},{"size":663,"mtime":1620162990874,"results":"158","hashOfConfig":"85"},{"size":205,"mtime":1620162990877,"results":"159","hashOfConfig":"85"},{"size":9614,"mtime":1620236363926,"results":"160","hashOfConfig":"85"},{"size":17916,"mtime":1620236363885,"results":"161","hashOfConfig":"85"},{"size":4562,"mtime":1620236363876,"results":"162","hashOfConfig":"85"},{"size":3403,"mtime":1620236363913,"results":"163","hashOfConfig":"85"},{"size":18335,"mtime":1620236378345,"results":"164","hashOfConfig":"85"},{"size":5705,"mtime":1620236363847,"results":"165","hashOfConfig":"85"},{"size":8051,"mtime":1620236363861,"results":"166","hashOfConfig":"85"},{"size":2161,"mtime":1620236378339,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1y059bp",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"170"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"170"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"170"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"170"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\index.tsx",[],["361","362"],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\App.tsx",["363","364","365","366"],"/* eslint-disable @typescript-eslint/no-array-constructor */\r\n// Import package members section:\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { PageHeader } from \"./common/component/PageHeader\";\r\nimport { ModalDialog, DialogControl } from \"./common/component/ModalDialog\";\r\n// import { InfoPage } from \"./page/student/InfoPage\";\r\nimport { TeacherSpareTimePage } from \"./page/teacher/SpareTimePage\";\r\nimport 'antd/dist/antd.css';\r\nimport { AdminClassPage } from \"./page/admin/AdminClassPage\";\r\nimport { TeacherClassPage } from \"./page/teacher/TeacherClassPage\";\r\nimport { StudentClassPage } from \"./page/student/StudentClassPage\";\r\nimport { AdminSpareTimePage } from \"./page/admin/AdminSpareTimePage\";\r\nimport {\r\n  HomePageHeader\r\n} from './common/component/home_page_header/HomePageHeader';\r\nimport {\r\n  ProtectedRoute\r\n  , SecurityContext\r\n} from './common/component/ProtectedRoute';\r\nimport { LogOutAPI } from './common/service/LogOutAPI';\r\nimport { TypeGuard } from './common/service/TypeGuard';\r\nimport { LoggedInUser } from './model/LoggedInUser';\r\nimport { AdminConsolePage } from './page/admin/AdminConsolePage';\r\nimport { CreateAccountPage } from './page/admin/CreateAccountPage';\r\nimport { HomePage } from './page/home_page/HomePage';\r\nimport { EditStudentInfo } from './page/EditStudentInfo';\r\nimport { LogInPage } from './page/log_in_page/LogInPage';\r\nimport { SelectRolePage } from './page/select_role_page/SelectRolePage';\r\nimport { SignUpPage } from './page/sign_up_page/SignUpPage';\r\nimport { History } from '../node_modules/@types/history';\r\nimport {\r\n  DisableOrDeleteAccountPage\r\n} from './page/admin/DisableOrDeleteAccountPage';\r\nimport { ManageCoursePage } from './page/admin/ManageCoursePage';\r\nimport {\r\n  ManageStudentInCoursePage\r\n} from './page/admin/ManageStudentInCoursePage';\r\nimport { ManageStudentPage } from './page/admin/ManageStudentPage';\r\nimport { TeacherDashboardPage } from './page/teacher/TeacherDashboardPage';\r\nimport { StudentDashboardPage } from './page/student/StudentDashboardPage';\r\nimport { EditTeacherInfo } from './page/EditTeacherInfo';\r\nimport { ViewProfilePage } from './page/ViewProfilePage';\r\nimport { DetailPage } from './page/DetailPage';\r\nimport { LessonDetailPage } from './page/student/LessonDetailPage';\r\nimport { ManageExamQuestionPage } from './page/teacher/ManageExamQuestionPage';\r\nimport { \r\n  ManageThingsInCoursePage \r\n} from './page/admin/ManageThingsInCoursePage';\r\nimport { \r\n  ManageExaminationInCoursePage \r\n} from './page/admin/ManageExaminationInCoursePage';\r\nimport { ManageLessonPage } from './page/admin/ManageLessonPage';\r\nimport { TypeConvert } from './common/service/TypeConvert';\r\nimport { \r\n  ManageThingsInExaminationPage \r\n} from './page/admin/ManageThingsInExaminationPage';\r\nimport { \r\n  ManageExamQuestionInExaminationPage \r\n} from './page/admin/ManageExamQuestionInExaminationPage';\r\nimport { LessonListPage } from './page/student/LessonListlPage';\r\nimport { CourseDetailPage } from './page/student/CourseDetailPage';\r\nimport { ProfilePage } from './page/student/ProfilePage';\r\nimport { ManageTeacherPage } from './page/admin/ManageTeacherPage';\r\nimport { ContactUs } from './page/contact_us_page/ContactPage';\r\nimport { Header } from './common/component/home_page_header/Header';\r\nimport { useSessionState } from './common/service/PersistedStateHook';\r\nimport { ShowAllExamPage } from './page/student/ShowAllExamPage';\r\nimport { TakeExamPage } from './page/student/TakeExamPage';\r\nimport { ShowExamScorePage } from './page/student/ShowExamScorePage';\r\n\r\nexport interface DataPage<T> {\r\n  totalRowCount: number;\r\n  pageDataHolder: T[];\r\n}\r\n\r\nexport function App(): ReactElement {\r\n  // Variables declaration:\r\n  let [showDialog, setShowDialog] = useState<boolean>(false);\r\n  let [dialogTitle, setDialogTitle] = useState<string>(\"\");\r\n  let [dialogBody, setDialogBody] = useState<string>(\"\");\r\n  let [dialogType, setDialogType] = useState<string>(\"\");\r\n  let modalDialog: ReactElement | undefined;\r\n  let [isAuthenticated, setIsAuthenticated] = useSessionState<boolean>(\r\n    \"isAuthenticated\",\r\n    false\r\n  );\r\n  let [loggedInUser, setLoggedInUser] = useSessionState<LoggedInUser>(\r\n    \"loggedInUser\",\r\n    new LoggedInUser()\r\n  );\r\n  let dialogController: DialogControl | undefined;\r\n  let acceptableRoleNameHolder: string[] | undefined;\r\n  let adminPageSecurity: SecurityContext | undefined;\r\n  let selectRolePageSecurity: SecurityContext | undefined;\r\n  let teacherPageSecurity: SecurityContext | undefined;  \r\n  let studentPageSecurity: SecurityContext | undefined;\r\n  let history: History<unknown>;\r\n  let [dialogIsConfirmed, setDialogIsConfirmed] = useState<boolean>(false);\r\n  let [typeGuardian] = useState<TypeGuard>(new TypeGuard());\r\n  let [typeConverter] = useState<TypeConvert>(new TypeConvert());\r\n\r\n  let [logOutAPI] = useState<LogOutAPI>(new LogOutAPI());\r\n  history = useHistory();\r\n\r\n  function handleCloseDialog(): void {\r\n    setShowDialog(false);\r\n  }\r\n\r\n  function handleConfirmDialog(): void {\r\n    setDialogIsConfirmed(true);\r\n    setShowDialog(false);\r\n  }\r\n\r\n  modalDialog = (\r\n    <ModalDialog\r\n      showDialog={showDialog}\r\n      dialogTitle={dialogTitle}\r\n      dialogBody={dialogBody}\r\n      dialogType={dialogType}\r\n      handleCloseDialog={handleCloseDialog}\r\n      handleConfirmDialog={handleConfirmDialog}\r\n    />\r\n  );\r\n  dialogController = new DialogControl(\r\n    setShowDialog,\r\n    setDialogTitle,\r\n    setDialogBody,\r\n    setDialogType,\r\n    setDialogIsConfirmed,\r\n    dialogIsConfirmed\r\n  );\r\n  acceptableRoleNameHolder = new Array(\"ROLE_ADMIN\");\r\n  adminPageSecurity = new SecurityContext(\r\n    isAuthenticated,\r\n    loggedInUser,\r\n    acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array(\"ROLE_TEACHER\");\r\n  teacherPageSecurity = new SecurityContext(\r\n    isAuthenticated,\r\n    loggedInUser,\r\n    acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array(\"ROLE_STUDENT\");\r\n  studentPageSecurity = new SecurityContext(\r\n    isAuthenticated\r\n    , loggedInUser\r\n    , acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array (\r\n    \"ROLE_ADMIN\"\r\n    , \"ROLE_TEACHER\"\r\n    , \"ROLE_STUDENT\"\r\n  );\r\n  selectRolePageSecurity = new SecurityContext(\r\n    isAuthenticated,\r\n    loggedInUser,\r\n    acceptableRoleNameHolder\r\n  );\r\n\r\n  async function logOut(): Promise<void> {\r\n    try {\r\n      await logOutAPI.logOut();\r\n      history.push(\"/\");\r\n      setIsAuthenticated(false);\r\n      setLoggedInUser(new LoggedInUser());\r\n    } catch (apiError: unknown) {\r\n      if (typeGuardian.isAxiosError(apiError)) {\r\n        if (typeof apiError.code === \"string\") {\r\n          setDialogTitle(`${apiError.code}: ${apiError.name}`);\r\n        } else {\r\n          setDialogTitle(apiError.name);\r\n        }\r\n        setDialogBody(apiError.message);\r\n        setDialogType(\"error\");\r\n        setShowDialog(true);\r\n      } else {\r\n        throw new Error(\"This api error is not valid !\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/admin-console/editStudentInfo/:studentID\">\r\n        <EditStudentInfo />\r\n      </Route>\r\n      <Route exact={true} path=\"/\">\r\n        <HomePageHeader />\r\n        <HomePage modalDialog={modalDialog} />\r\n      </Route>\r\n      <Route path = \"/admin-console/manage-teacher-page\">\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/manage-student-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageStudentPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <Route exact path=\"/editStudentInfo/studentID\">\r\n        <EditStudentInfo />\r\n      </Route>\r\n\r\n      <Route path=\"/admin-console/view-student-detail\">\r\n        <ViewProfilePage />\r\n      </Route>\r\n\r\n      {/* <Route path = \"/admin-console/manage-teacher-page\">\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage />\r\n      </Route> */}\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/manage-teacher-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage/>\r\n      </ProtectedRoute>\r\n\r\n      <Route path=\"/sign-up-page\">\r\n        <SignUpPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </Route>\r\n\r\n      <Route path=\"/log-in-page\">\r\n        <LogInPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          setIsAuthenticated={setIsAuthenticated}\r\n          setLoggedInUser={setLoggedInUser}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </Route>\r\n\r\n      <Route path=\"/contact-us\">\r\n        <Header />\r\n        <ContactUs\r\n          modalDialog = {modalDialog}\r\n        />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/managa-teacher-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <DisableOrDeleteAccountPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <Route exact path=\"/editTeacherInfo/:teacherID\">\r\n        <EditTeacherInfo />\r\n      </Route>\r\n\r\n      <Route path=\"/user_view\">\r\n        <ViewProfilePage />\r\n      </Route>\r\n\r\n      <Route path=\"/user_detail/:studentID\">\r\n        <DetailPage />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/create-account-request-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <CreateAccountPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/disable-or-delete-account-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <DisableOrDeleteAccountPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path={\r\n          \"/admin-console/manage-things-in-course-page\" +\r\n          \"/courses/:courseID/students\"\r\n        }\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageStudentInCoursePage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path={\r\n          \"/admin-console/manage-things-in-course-page\" +\r\n          \"/courses/:courseID/examinations\"\r\n        }\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageExaminationInCoursePage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n          typeConverter={typeConverter}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/manage-things-in-course-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageThingsInCoursePage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path={\r\n          \"/admin-console/manage-things-in-examination-page\" +\r\n          \"/examinations/:examID/exam-questions\"\r\n        }\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageExamQuestionInExaminationPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/manage-things-in-examination-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageThingsInExaminationPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/manage-course-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageCoursePage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console/class-page\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <AdminClassPage />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin-console\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <AdminConsolePage modalDialog={modalDialog} />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/admin/spare-time-management\"\r\n        securityContext={adminPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <AdminSpareTimePage\r\n          modalDialog={modalDialog}\r\n          dialogController={dialogController}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/select-role-page\"\r\n        securityContext={selectRolePageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <SelectRolePage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/teacher-dashboard/manage-exam-question-page\"\r\n        securityContext={teacherPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ManageExamQuestionPage\r\n          dialogController={dialogController}\r\n          modalDialog={modalDialog}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/teacher-dashboard\"\r\n        securityContext={teacherPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <TeacherDashboardPage modalDialog={modalDialog} />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/teacher/class-page\"\r\n        securityContext={teacherPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <TeacherClassPage />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/teacher/spare-time-management\"\r\n        securityContext={teacherPageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <TeacherSpareTimePage\r\n          modalDialog={modalDialog}\r\n          dialogController={dialogController}\r\n          typeGuardian={typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path = \"/show-exam-score-page\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <ShowExamScorePage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = \"/student-dashboard/show-all-exam-page\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ShowAllExamPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <Route path=\"/student-dashboard\">\r\n        <PageHeader logOut={logOut} />\r\n        <StudentDashboardPage modalDialog={modalDialog} />\r\n      </Route>\r\n      <Route path=\"/student-dashboard-course/:courseID\">\r\n        <PageHeader logOut={logOut} />\r\n        <CourseDetailPage modalDialog={modalDialog} />\r\n      </Route>\r\n      <Route path=\"/student-dashboard-lesson/:courseName/:lessonID\">\r\n        <PageHeader logOut={logOut} />\r\n        <LessonDetailPage modalDialog={modalDialog} />\r\n      </Route>\r\n      {/* <Route path=\"/student\">\r\n        <PageHeader logOut={logOut} />\r\n        <InfoPage modalDialog={modalDialog} />\r\n      </Route> */}\r\n      <Route path=\"/student-class-page\">\r\n        <PageHeader logOut={logOut} />\r\n        <StudentClassPage />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\LoggedInUser.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\ViewProfilePage.tsx",["367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, {\r\n    ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, FormControl, Nav, Navbar, Row, Table\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\nimport './ViewProfilePage.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction renderUserTable (\r\n    user: User\r\n    , index: number\r\n): ReactElement {\r\n    return (\r\n        <tr key={user.userID}>\r\n            <td>\r\n                {index + 1}\r\n            </td>\r\n            <td>\r\n                {user.firstName}\r\n            </td>\r\n            <td>\r\n                {user.middleName}\r\n            </td>\r\n            <td>\r\n                {user.lastName}\r\n            </td>\r\n            <td>\r\n                {user.phoneNumber}\r\n            </td>\r\n            <td>\r\n                {user.dob}\r\n            </td>\r\n            <td>\r\n                {user.email}\r\n            </td>\r\n            <td>\r\n                {user.gender}\r\n            </td>\r\n            <td>\r\n                {user.job}\r\n            </td>\r\n            <td>\r\n                {user.selfDescription}\r\n            </td>\r\n            <td>\r\n                {user.accountStatus}\r\n            </td>\r\n            <td>\r\n                {user.dateCreated}\r\n            </td>\r\n            <td>\r\n                {user.lastLogin}\r\n            </td>\r\n            <td>\r\n                {user.lastModified}\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nexport function ViewProfilePage (): ReactElement {\r\n\r\n    let [user, getUser] = useState<User>(new User());\r\n    let userID: number;\r\n    let showUser: User | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let match = useRouteMatch();\r\n    let param: any = useParams();\r\n    let studentID: number;\r\n    let [student, setStudent] = useState<User[]>([]);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.viewStudent(param.studentID).then(\r\n            (res) => {\r\n                setStudent(res.data);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(param.studentID);\r\n\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <Row className=\"bg-white\">\r\n                        <Col>\r\n                            <Table responsive=\"md\" hover={true}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            #\r\n                                            </th>\r\n                                        <th>\r\n                                            First Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Middle Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Phone Number\r\n                                            </th>\r\n                                        <th>\r\n                                            Date of birth\r\n                                            </th>\r\n                                        <th>\r\n                                            Email\r\n                                            </th>\r\n                                        <th>\r\n                                            Gender\r\n                                            </th>\r\n                                        <th>\r\n                                            Job\r\n                                            </th>\r\n                                        <th>\r\n                                            Description\r\n                                            </th>\r\n                                        <th>\r\n                                            Status\r\n                                            </th>\r\n                                        <th>\r\n                                            Date Created\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Login\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Modifiled\r\n                                            </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {student.map(\r\n                                        (\r\n                                            user\r\n                                            , index\r\n                                        ) => renderUserTable(\r\n                                            user\r\n                                            , index\r\n                                        )\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditTeacherInfo.tsx",["381","382","383"],"import React, {\r\n    ChangeEvent, FormEvent, ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, Row\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\n\r\nexport function EditTeacherInfo (): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let param: any = useParams();\r\n    let [teacher, setTeacher] = useState<User>(new User());\r\n    \r\n    useEffect (() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayTeacher(param.teacherID).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n    );\r\n    }, []);\r\n\r\n    \r\n    function handleUserChange (\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ){\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateTeacher (event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(user, userID);\r\n        console.log(userID);\r\n    }\r\n \r\n    console.log(param.teacherID);\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <h1>{param.teacherID}</h1>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form\r\n                                noValidate={false}\r\n                                onSubmit={(event) => {\r\n                                    updateTeacher(event, param.teacherID);\r\n                                }}\r\n                            >\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        User Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"userName\"\r\n                                        id=\"userName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        value = {user.userName}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        First Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"firstName\"\r\n                                        id=\"firstName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        value={user.firstName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Middle Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"middleName\"\r\n                                        id=\"middleName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        value={user.middleName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Last Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"lastName\"\r\n                                        id=\"lastName\"\r\n                                        pattern=\"^[a-z0-9_-]{1,15}$\"\r\n                                        value={user.lastName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Email:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        value={user.email}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        DOB:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Phone:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        value={user.phoneNumber}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Gender\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"gender\"\r\n                                        id=\"gender\"\r\n                                        value={user.gender}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Password:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        autoFocus={false}\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Your new password\"\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Account Status\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"accountStatus\"\r\n                                        id=\"accountStatus\"\r\n                                        value={user.accountStatus}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button\r\n                                    variant=\"success\"\r\n                                    type=\"submit\"\r\n                                    block = {true}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\DisableOrDeleteAccountPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\CreateAccountPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentPage.tsx",["384","385"],"/* eslint-disable max-len */\r\nimport React, { ReactElement, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataPage } from \"../../App\";\r\nimport { DialogControl } from \"../../common/component/ModalDialog\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User } from \"../../model/User\";\r\nimport './ManageStudentPage.css';\r\n\r\ninterface ManageStudentPageProps {\r\n    dialogController: DialogControl;\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ManageStudentPage (props: ManageStudentPageProps): ReactElement {\r\n    let userAPI: UserAPI = new UserAPI();\r\n    let typeGuardian: TypeGuard;\r\n    let studentDataPage: DataPage<User> | undefined;\r\n    let [totalPageCount, setTotalPageCount] = useState<number>(0);\r\n    let [studentHolder, setStudentHolder] = useState<User[]>([]);\r\n    let [pageIndex] = useState<number>(0);\r\n    let [pageSize] = useState<number>(10);\r\n    // useEffect(() => {\r\n    //     userAPI.listUsers().then(\r\n    //         (res) => {\r\n    //             setUser(res.data);\r\n    //         }\r\n    //     )\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }, []);\r\n\r\n    async function loadStudentTable (): Promise<void> {\r\n        try {\r\n            studentDataPage = await userAPI.getAllStudents(\r\n                pageIndex\r\n                , pageSize\r\n            );\r\n            setTotalPageCount(studentDataPage.totalRowCount);\r\n            setStudentHolder(studentDataPage.pageDataHolder);\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        (): void => {\r\n            loadStudentTable().catch(\r\n                (error: unknown) => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n        }\r\n        , []\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\" id=\"grid\">\r\n            <div className=\"text-center\">\r\n                <h1>Manage All Students</h1>\r\n                <hr />\r\n            </div>\r\n            <div className=\"row\">\r\n                {/* <div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\"> */}\r\n                    {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                        <span className=\r\n                            \"fa fa-plus mr-5\">\r\n                        </span>\r\n                                Thêm học viên\r\n                </button> */}\r\n                    <div className=\"row mt-15\" id=\"table-cover\">\r\n                        <div className=\r\n                            \"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <table className=\r\n                                \"table table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"text-center\">ID</th>\r\n                                        <th className=\"text-center\">\r\n                                            User Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            First Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Middle Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Last Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Email\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Phone\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Status\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Actions\r\n                                                </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {/* <tr>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"form-control\">\r\n                                                <option value=\"-1\">\r\n                                                    Tất Cả\r\n                                                        </option>\r\n                                                <option value=\"0\">\r\n                                                    Ẩn\r\n                                                        </option>\r\n                                                <option value=\"1\">\r\n                                                    Kích Hoạt\r\n                                                        </option>\r\n                                            </select>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr> */}\r\n                                    {studentHolder.map((item, index) => <tr key={index}>\r\n                                        <td>{item[\"userID\"]}</td>\r\n                                        <td>{item[\"userName\"]}</td>\r\n                                        <td>{item[\"firstName\"]}</td>\r\n                                        <td>{item[\"middleName\"]}</td>\r\n                                        <td>{item[\"lastName\"]}</td>\r\n                                        <td>{item[\"email\"]}</td>\r\n                                        <td>{item[\"phoneNumber\"]}</td>\r\n                                        <td className=\"text-center\">\r\n                                            <span\r\n                                                className=\"label label-success\">\r\n                                                {item[\"accountStatus\"]}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"text-center\" id=\"action\">\r\n                                            <Link to={`/user_detail/${item[\"userID\"]}`}>\r\n                                                <button type=\"button\"\r\n                                                    className=\"btn btn-primary\" id=\"btn_details\">\r\n                                                    <span className=\r\n                                                        \"fa fa-pencil mr-5\">\r\n                                                            Details\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Link>\r\n                                        &nbsp;\r\n                                            <Link to=\"/editStudentInfo/studentID\">\r\n                                                <button type=\"button\"\r\n                                                    className=\"btn btn-success\" id=\"btn_edit\">\r\n                                                    <span className=\r\n                                                        \"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                    )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        // </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageLessonPage.tsx",["386"],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\home_page\\HomePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInExaminationPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExaminationInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\select_role_page\\SelectRolePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherDashboardPage.tsx",["387","388","389"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Accordion, Card, Button } from \"react-bootstrap\";\r\nimport { TeacherSidebar } from \"../../common/component/teacher_sidebar/TeacherSidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { ChartAPI } from \"../../common/service/Chart\";\r\n\r\ninterface TeacherDashboardPageProps {\r\n  modalDialog: ReactElement;\r\n}\r\n\r\nexport function TeacherDashboardPage(\r\n  props: TeacherDashboardPageProps\r\n): ReactElement {\r\n  let chartAPI: ChartAPI | undefined;\r\n  const [data, setDataChart] = useState([]);\r\n\r\n  const config = {\r\n    data,\r\n    height: 400,\r\n    xField: \"valueX\",\r\n    yField: \"valueY\",\r\n    point: {\r\n      size: 5,\r\n      shape: \"diamond\",\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: \"#aaa\",\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataChart();\r\n  }, []);\r\n\r\n  function getDataChart() {\r\n    chartAPI = new ChartAPI();\r\n\r\n    chartAPI.getDataChart().then((res) => {\r\n      const newValue = res.map((e: any, index: number) => {\r\n        return {\r\n          valueX: e.valueX.toString(),\r\n          valueY: e.valueY,\r\n        };\r\n      });\r\n      setDataChart(newValue);\r\n    });\r\n  }\r\n  return (\r\n    <div style={{paddingLeft: '15px', paddingRight: '15px'}}>\r\n      {props.modalDialog}\r\n      <TeacherSidebar />\r\n      <main style={{ background: \"#fff\" }}>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                    Spare Time Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/teacher\" + \"/spare-time-management\"}\r\n                      >\r\n                        Spare Time\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                    Class Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"3\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/teacher\" + \"/class-page\"}\r\n                      >\r\n                        Class\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n          <div style={{ marginTop: \"30px\", paddingBottom: \"30px\" }}>\r\n            <Line {...config} />\r\n          </div>\r\n        </Container>\r\n      </main>\r\n      <footer className=\"bg-dark text-center text-white\">\r\n        <div className=\"container p-4\">\r\n          <section className=\"\">\r\n            <form action=\"\">\r\n              <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                  <p className=\"pt-2\">\r\n                    <strong>Sign up for our newsletter</strong>\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12\">\r\n                  <div className=\"form-outline form-white mb-4\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"form5Example2\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button type=\"submit\" className=\"btn btn-outline-light mb-4\">\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </section>\r\n          <section className=\"mb-4\">\r\n            <p>FPT University</p>\r\n          </section>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\log_in_page\\LogInPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentDashboardPage.tsx",["390","391","392","393","394","395","396","397","398","399"],"// Import package members section:\r\nimport React, { ReactElement, useState, useEffect } from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Breadcrumb,\r\n  Accordion,\r\n} from \"react-bootstrap\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { values } from \"lodash\";\r\nimport { LocalStorageService } from \"../../common/service/LocalStorageService\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { ChartAPI } from \"../../common/service/Chart\";\r\n\r\ninterface StudentDashboardPageProps {\r\n  modalDialog: ReactElement;\r\n  // LoginUser: any;\r\n}\r\n\r\nexport function StudentDashboardPage(props: any): ReactElement {\r\n  let [course, setCourse] = useState<Course>(new Course());\r\n  let [courseList, setCourseList] = useState<Course[]>([]);\r\n  let [myCourseList, setMyCourseList] = useState<Course[]>([]);\r\n  let courseAPI = new CourseAPI();\r\n  let param: any = useParams();\r\n  let localStorageService = new LocalStorageService();\r\n  const user = sessionStorage.getItem(\"loggedInUser\");\r\n  let idUser = user ? JSON.parse(user).id : 0;\r\n\r\n  let chartAPI: ChartAPI | undefined;\r\n  const [data, setDataChart] = useState([]);\r\n\r\n  const config = {\r\n    data,\r\n    height: 400,\r\n    xField: \"valueX\",\r\n    yField: \"valueY\",\r\n    point: {\r\n      size: 5,\r\n      shape: \"diamond\",\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: \"#aaa\",\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataChart();\r\n  }, []);\r\n\r\n  function getDataChart() {\r\n    chartAPI = new ChartAPI();\r\n\r\n    chartAPI.getDataChart(idUser).then((res) => {\r\n      const newValue = res.map((e: any, index: number) => {\r\n        return {\r\n          valueX: e.valueX.toString(),\r\n          valueY: e.valueY,\r\n        };\r\n      });\r\n      setDataChart(newValue);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const name = localStorageService.getLoggedUserName();\r\n    courseAPI.getAllCoursesByCurrentUser(name).then((res) => {\r\n      setMyCourseList(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}>\r\n      {props.modalDialog}\r\n      <main style={{ background: \"#fff\" }}>\r\n        <StudentSidebar />\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/\" }}>\r\n                  Home\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item active={true}>\r\n                  Student Dashboard\r\n                </Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <Row>\r\n                {myCourseList.map((course) => {\r\n                  return (\r\n                    <Col md={3}>\r\n                      <Card className=\"mb-3\">\r\n                        <Card.Body>\r\n                          <Card.Title>\r\n                            {course.courseName}\r\n                            {/* {i.name} */}\r\n                          </Card.Title>\r\n                          <Card.Text>\r\n                            {course.description}\r\n                            {/* {i.age} */}\r\n                          </Card.Text>\r\n                          <Row>\r\n                            <Col>\r\n                              <Button\r\n                                style={{\r\n                                  alignItems: \"stretch\",\r\n                                  backgroundColor: \"blueviolet\",\r\n                                  borderColor: \"blueviolet\",\r\n                                }}\r\n                                block={true}\r\n                                size=\"sm\"\r\n                                as={Link}\r\n                                to={\"/course-detail/\" + course.courseID}\r\n                              >\r\n                                Detail\r\n                              </Button>\r\n                            </Col>\r\n                            <Col>\r\n                              <Button\r\n                                as={Link}\r\n                                to={\"/student-dashboards/\" + course.courseID}\r\n                                style={{ alignItems: \"stretch\" }}\r\n                                size=\"sm\"\r\n                                block\r\n                              >\r\n                                Learn\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                    Student Class Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"3\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/student-class-page\"}\r\n                      >\r\n                        Student Class\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n          <div style={{ marginTop: \"30px\", paddingBottom: \"30px\" }}>\r\n            <Line {...config} />\r\n          </div>\r\n        </Container>\r\n      </main>\r\n      <footer className=\"bg-dark text-center text-white\">\r\n        <div className=\"container p-4\">\r\n          <section className=\"\">\r\n            <form action=\"\">\r\n              <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                  <p className=\"pt-2\">\r\n                    <strong>Sign up for our newsletter</strong>\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12\">\r\n                  <div className=\"form-outline form-white mb-4\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"form5Example2\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button type=\"submit\" className=\"btn btn-outline-light mb-4\">\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </section>\r\n          <section className=\"mb-4\">\r\n            <p>FPT University</p>\r\n          </section>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExamQuestionInExaminationPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonDetailPage.tsx",["400","401"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { LessonAPI } from \"../../common/service/LessonAPI\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { Lesson } from \"../../model/Lesson\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function LessonDetailPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let param: any = useParams();\r\n    let [lesson, setLesson] = useState<Lesson>(new Lesson());\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n    let lessonAPI: LessonAPI | undefined;\r\n    let courseAPI: CourseAPI | undefined;\r\n\r\n    useEffect(() => {\r\n        lessonAPI = new LessonAPI();\r\n        courseAPI = new CourseAPI();\r\n        lessonAPI.getOne(param.lessonID).then(\r\n            (res) => {\r\n                setLesson(res.data);\r\n                console.log(res);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n\r\n        courseAPI.getCourseByName(param.courseName).then(\r\n            (res) => {\r\n                console.log(\"data: \", res.data);\r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboards/\" + course.courseID }}>\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active={true}>\r\n                                    {lesson.lessonName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Row style={{backgroundColor: 'white', borderRadius:10 + 'px'}}>\r\n                                <Col sm={8}>\r\n                                    <ReactPlayer\r\n                                        controls\r\n                                        url={lesson.contentURI}\r\n                                    />\r\n                                </Col>\r\n                                <Col sm={3}>\r\n                                    <div>\r\n                                        <br/>\r\n                                        <h4>Description</h4>\r\n                                        <p>{lesson.description}</p>\r\n                                        <h5>Time</h5>\r\n                                        {lesson.duration} minutes\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\sign_up_page\\SignUpPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\contact_us_page\\ContactPage.tsx",["402","403","404"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport { Col, Container, Jumbotron, Media, Row } from \"react-bootstrap\";\r\n\r\ninterface ContactUsProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ContactUs (props: ContactUsProps): ReactElement {\r\n    return (\r\n        <Container fluid = {true}>\r\n            {props.modalDialog}\r\n            <main>\r\n                <Container \r\n                    fluid = {true} \r\n                    className = \"px-0\"\r\n                    style={{backgroundColor:'silver'}}\r\n                >\r\n                    <Row>\r\n                        <Col>\r\n                            <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1478.0640045030577!2d105.52627793336553!3d21.013154039142645!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31345b465a4e65fb%3A0xaae6040cfabe8fe!2zVHLGsOG7nW5nIMSQ4bqhaSBI4buNYyBGUFQ!5e0!3m2!1svi!2s!4v1619044601505!5m2!1svi!2s\" width=\"700\" height=\"500\" style={{border:0}}  loading=\"lazy\"></iframe>\r\n                        </Col>\r\n                        <Col style={{marginTop:50}}>\r\n                            <h1>Language Center LCS</h1><br/>\r\n                            <p>Address: FPT University, Hoa Lac High Tech Park, Hanoi, Vietnam</p>\r\n                            <p>Tel: (+84) 0946531195</p>\r\n                            <p>Mail: <a href=\"mailto:languagecenter_lcs@gmail.com\">languagecenter_lcs@gmail.com</a></p>\r\n                            <b>Office Hours</b>\r\n                            <p>Monday- Friday: 8.00 a.m to 5.30 p.m (Hanoi time, GMT +7)</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonListlPage.tsx",["405","406"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, ListGroup, Row, Tab } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { LessonAPI } from \"../../common/service/LessonAPI\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { Lesson } from \"../../model/Lesson\";\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function LessonListPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let param: any = useParams();\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n    let [lessonList, setLessonList] = useState<Lesson[]>([]);\r\n    let lessonAPI: LessonAPI | undefined;\r\n    let courseAPI: CourseAPI | undefined;\r\n\r\n    useEffect(() => {\r\n        lessonAPI = new LessonAPI();\r\n        courseAPI = new CourseAPI();\r\n        lessonAPI.getAllLessonByCourse(param.courseID).then(\r\n            (res) => {\r\n                setLessonList(res.data);\r\n                // console.log(student.userName);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n        courseAPI.getOneCourse(param.courseID).then(\r\n            (res) => {\r\n                console.log(\"course\", res.data);\r\n                \r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [param.courseID]);\r\n\r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active={true}>\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Tab.Container id=\"list-group-tabs-example\">\r\n                            {lessonList.map((lesson) => {\r\n                                return (\r\n\r\n                                        <ListGroup className=\"my-2\">\r\n                                            <ListGroup.Item action \r\n                                                            as = {Link}\r\n                                                            to = {\r\n                                                                \"/student-dashboardz/\" + course.courseName + \"/\" + lesson.lessonID\r\n                                                            }\r\n                                            >\r\n                                                {lesson.lessonName}\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                )\r\n                                })}                      \r\n                            </Tab.Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\CourseDetailPage.tsx",["407","408"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, Image, Row, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { Course } from \"../../model/Course\";\r\n\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function CourseDetailPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let courseAPI: CourseAPI | undefined;\r\n    let param: any = useParams();\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n\r\n    const options = {\r\n        style:\"currency\",\r\n        currency: \"VND\"\r\n    }\r\n    \r\n    useEffect(() => {\r\n        courseAPI = new CourseAPI();\r\n        courseAPI.getOneCourse(param.courseID).then(\r\n            (res) => {\r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col style={{backgroundColor: 'white'}}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    active={true}\r\n                                >\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Course Name:</th>\r\n                                        <th>{course.courseName}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Description:</td>\r\n                                        <td>{course.description}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Course Type:</td>\r\n                                        <td>{course.courseType.typeName}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Course Level:</td>\r\n                                        <td>{course.courseLevel.levelName}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Tuition Fee:</td>                     \r\n                                        <td>{course.tuitionFee.toLocaleString(\"de-DE\", options)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\ManageExamQuestionPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ProfilePage.tsx",["409","410"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Button, Col, Container, Form, Image, Modal, Row, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { LocalStorageService } from \"../../common/service/LocalStorageService\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User, UserIndexSignature } from \"../../model/User\";\r\nimport AboutUs from './sda.png'\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ProfilePage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let localStorageService = new LocalStorageService();\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const name = localStorageService.getLoggedUserName();\r\n\r\n    const date = new Date(user.dob);\r\n    const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n    const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\r\n    const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayProfile(name).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateMyProfile(event: FormEvent<HTMLFormElement>, userName: any) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.updateProfile(user, userName);\r\n    }\r\n\r\n    return (\r\n        <Container id=\"ProfilePage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col style={{ backgroundColor: 'white' }}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    active={true}\r\n                                >\r\n                                    Profile\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <h1 style={{ textAlign: 'center' }}>My Profile</h1>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Image src={AboutUs}\r\n                                                rounded\r\n                                                style={{ width: 280, height: 250, borderStyle: \"groove\" }} />\r\n                                        </Col>\r\n                                        <Col sm=\"12\" md={{ offset: 3 }}>\r\n                                            <Button style={{ marginTop: 20 }} onClick={handleShow}>Edit Profile</Button>\r\n\r\n                                            <Modal show={show} onHide={handleClose} size=\"lg\">\r\n                                                <Form\r\n                                                    noValidate={false}\r\n                                                    onSubmit={(event) => {\r\n                                                        updateMyProfile(event, name);\r\n                                                    }}\r\n                                                    className=\"wrapper\"\r\n                                                    \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                User Name:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={true}\r\n                                                                name=\"userName\"\r\n                                                                id=\"userName\"\r\n                                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                value={user.userName}\r\n                                                                required={true}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Row>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    First Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"firstName\"\r\n                                                                    id=\"firstName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.firstName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    Middle Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"middleName\"\r\n                                                                    id=\"middleName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.middleName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    // value = {user.userName}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    Last Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"lastName\"\r\n                                                                    id=\"lastName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.lastName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    // value = {user.userName}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                        </Form.Row>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Email:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"email\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"email\"\r\n                                                                id=\"email\"\r\n                                                                value={user.email}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                DOB:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"date\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"dob\"\r\n                                                                id=\"dob\"\r\n                                                                value={user.dob.toString()}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Phone:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"phoneNumber\"\r\n                                                                id=\"phoneNumber\"\r\n                                                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                                                value={user.phoneNumber}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Gender\r\n                                                        </Form.Label>\r\n                                                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                                                <option value=\"Male\">Male</option>\r\n                                                                <option value=\"Female\">Female</option>\r\n                                                                <option value=\"Bisexual\">Bisexual</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Job:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"job\"\r\n                                                                id=\"job\"\r\n                                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                value={user.job}\r\n                                                                required={true}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"primary\" onClick={handleClose} block={true} type=\"submit\">\r\n                                                            Save Changes\r\n                                                        </Button>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose} block={true}>\r\n                                                            Close\r\n                                                        </Button>\r\n                                                    </Modal.Footer>\r\n                                                </Form>\r\n                                            </Modal>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>User Name:</th>\r\n                                                <th>{user.userName}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>First Name:</td>\r\n                                                <td>{user.firstName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Middle Name:</td>\r\n                                                <td>{user.middleName}</td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Last Name:</td>\r\n                                                <td>{user.lastName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>DOB:</td>\r\n                                                <td>{day}-{month}-{year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email:</td>\r\n                                                <td>{user.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Phone Number:</td>\r\n                                                <td>{user.phoneNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender:</td>\r\n                                                <td>{user.gender}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Job:</td>\r\n                                                <td>{user.job}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Description</td>\r\n                                                <td>{user.selfDescription}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ProtectedRoute.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\Header.tsx",["411"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport {\r\n    Button, Card, Container, Form, FormControl, Nav, Navbar\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel1 from './Carousel-1.jpg';\r\nimport { textSpanEnd } from \"typescript\";\r\n\r\nexport function Header(): ReactElement {\r\n    return (\r\n        <Container\r\n            fluid={true}\r\n        >\r\n            <header>\r\n                <Card className=\"bg-dark text-white\">\r\n                    <Card.Img src={Carousel1} alt=\"Card image\" style={{height:300, opacity:0.3, borderStyle:'none'}}/>\r\n                    <Card.ImgOverlay>\r\n                        <Card.Title style={{fontSize:55, marginTop:80, marginLeft:50}}>Contact</Card.Title>\r\n                        <Card.Text style={{fontSize:25, marginLeft:50}}>\r\n                            Language Center LCS was established in 2021\r\n                        </Card.Text>\r\n                    </Card.ImgOverlay>\r\n                </Card>\r\n            </header>\r\n            <nav>\r\n                <Navbar\r\n                    bg=\"none\"\r\n                    fixed=\"top\"\r\n                    expand=\"md\"\r\n                    className=\"w-100 px-5\"\r\n                >\r\n                    <Navbar.Brand as={Link} to=\"/\"\r\n                        className=\"py-4\"\r\n                        style={{\r\n                            fontFamily: 'Calibri',\r\n                            fontWeight: 'bold',\r\n                            color: 'white',\r\n                        }}\r\n                    >\r\n                        <span style={{ fontSize: 40 + 'px', verticalAlign: 'top' }} >LCS</span>\r\n                        {/* <span style={{fontSize:10}}>Language Center System</span> */}\r\n\r\n                    </Navbar.Brand>\r\n                    <Nav\r\n                        id=\"NavLinkSection\"\r\n                        className={\r\n                            `d-md-inline-flex \r\n                            justify-content-around \r\n                            container-fluid`\r\n                        }\r\n                    >\r\n                        <Nav.Link as={Link} to=\"/sign-up-page\">\r\n                            Sign up\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/log-in-page\">\r\n                            Log in\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/contact-us\">\r\n                            Contact us\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Form className=\"d-md-inline-flex\">\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            className=\"mr-md-2\"\r\n                        />\r\n                        <Button variant=\"success\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </nav>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ModalDialog.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PageHeader.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\HomePageHeader.tsx",["412"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport { \r\n    Button, Carousel, Container, Form, FormControl, Nav, Navbar \r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePageHeader.css';\r\nimport Carousel1 from './Carousel-1.jpg';\r\nimport Carousel2 from './Carousel-2.jpg';\r\nimport Carousel3 from './Carousel-3.jpg';\r\nimport { textSpanEnd } from \"typescript\";\r\n\r\nexport function HomePageHeader (): ReactElement {\r\n    return (\r\n        <Container \r\n            fluid = {true}\r\n        >\r\n            <header>\r\n                <Carousel id = \"HeaderCarousel\">\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel1}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1>Welcome to Language Center</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            LCS has a mission to help improve and improve foreign languages for employees, \r\n                            students easily get job opportunities and deeply integrate in the knowledge economy.\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel2}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1 style={{textAlign:'left'}}>Career Skills - Soft skills develop themselves at work</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            Giving learners 5 essential and important soft skills for employees: Study skills; \r\n                            Personal development skills; Communication skills; Speech skills; Leadership skills\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel3}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1 style={{textAlign:'left'}}>JLPT certified Japanese for student and employee</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            Expand your opportunities for personal development by Japanese-Language Proficiency Test - JLPT\r\n                            with a commitment to meeting the output standards with a minimum of N4\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </header>\r\n            <nav>\r\n                <Navbar \r\n                    bg = \"none\" \r\n                    fixed=\"top\"\r\n                    expand = \"md\"\r\n                    className = \"w-100 px-5\"\r\n                >\r\n                    <Navbar.Brand as = {Link} to = \"/\" \r\n                                className = \"py-4\" \r\n                                style={{fontFamily: 'Calibri', \r\n                                        fontWeight: 'bold',\r\n                                        color: 'white',\r\n                                    }}\r\n                    >\r\n                        <span style={{fontSize: 40 + 'px', verticalAlign: 'top'}} >LCS</span>\r\n                        {/* <span style={{fontSize:10}}>Language Center System</span> */}\r\n                        \r\n                    </Navbar.Brand>\r\n                    <Nav \r\n                        id = \"NavLinkSection\" \r\n                        className = {\r\n                            `d-md-inline-flex \r\n                            justify-content-around \r\n                            container-fluid`\r\n                        }\r\n                    >\r\n                        <Nav.Link as = {Link} to = \"/sign-up-page\">\r\n                            Sign up\r\n                        </Nav.Link>\r\n                        <Nav.Link as = {Link} to = \"/log-in-page\">\r\n                            Log in\r\n                        </Nav.Link>\r\n                        <Nav.Link as = {Link} to = \"/contact-us\">\r\n                            Contact us\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Form className = \"d-md-inline-flex\">\r\n                        <FormControl \r\n                            type = \"text\" \r\n                            placeholder = \"Search\" \r\n                            className = \"mr-md-2\" \r\n                        />\r\n                        <Button variant = \"success\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </nav>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\PersistedStateHook.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeGuard.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LogOutAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeConvert.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\DetailPage.tsx",["413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"/* eslint-disable prefer-template */\r\n/* eslint-disable max-len */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, {\r\n    ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, FormControl, Nav, Navbar, Row, Table\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\nimport './ViewProfilePage.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction renderUserTable (\r\n    user: User\r\n    // , index: number\r\n): ReactElement {\r\n    return (\r\n        <table key={user.userID} className=\"table table-bordered\">\r\n            <tr>\r\n                <th>Name</th>\r\n                <td>{user.firstName + \" \" + user.middleName + \" \" + user.lastName}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Phone</th>\r\n                <td>{user.phoneNumber}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>DoB</th>\r\n                <td>{user.dob.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Email</th>\r\n                <td>{user.email}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Gender</th>\r\n                <td>{user.gender}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Job</th>\r\n                <td>{user.job}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Self Description</th>\r\n                <td>{user.selfDescription}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Account Status</th>\r\n                <td>{user.accountStatus}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Date Created</th>\r\n                <td>{user.dateCreated.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Last Login</th>\r\n                <td>{user.lastLogin.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Last Modified</th>\r\n                <td>{user.lastModified.toString()}</td>\r\n            </tr>\r\n        </table>\r\n    );\r\n}\r\nexport function DetailPage (): ReactElement {\r\n\r\n    let [user, getUser] = useState<User>(new User());\r\n    let userID: number;\r\n    let showUser: User | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let match = useRouteMatch();\r\n    let param: any = useParams();\r\n    let studentID: number;\r\n    let [student, setStudent] = useState<User>(new User());\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayStudentbyID(param.studentID).then(\r\n            (res) => {\r\n                console.log(res);\r\n                setStudent(res.data);\r\n                console.log(student);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(param.studentID);\r\n\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <Row className=\"bg-white\">\r\n                        <Col>\r\n                            <div className=\"student-profile py-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-lg-4\">\r\n                                            <div className=\"card shadow-sm\">\r\n                                                <div className=\"card-header bg-transparent text-center\">\r\n                                                    <img key={user.userID} className=\"profile_img\" src=\"{user.photoURI}\" alt=\"\" />\r\n                                                    <h3>{user.firstName + \" \" + user.middleName + \" \" + user.lastName}</h3>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Student ID:</strong>{user.userID + 1}</p>\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Class:</strong>5</p>\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Section:</strong>A</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card shadow-sm\">\r\n                                                <div className=\"card-header bg-transparent border-0\">\r\n                                                    <h3 className=\"mb-0\"><i className=\"far fa-clone pr-1\"></i>General Information</h3>\r\n                                                </div>\r\n                                                <div className=\"card-body pt-0\">\r\n                                                    <>\r\n                                                        {\r\n                                                            renderUserTable(student)\r\n                                                            // student.map((item, index) => (\r\n                                                            //     <li key={index}>{item}</li>\r\n                                                            // ))\r\n                                                        }\r\n                                                    </>\r\n                                                    {/* {student.map(\r\n                                                        (\r\n                                                            user\r\n                                                            , index\r\n                                                        ) => renderUserTable(\r\n                                                            user\r\n                                                            , index\r\n                                                        )\r\n                                                    )} */}\r\n                                                </div>\r\n                                                &nbsp;\r\n                                                    <Link to={\"/admin-console/manage-teacher-page\"}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-primary\" style={{\r\n                                                        marginLeft: '900px'\r\n                                                    }}>\r\n                                                        <span className=\"fa fa-pencil mr-5 text-center\" style={{\r\n                                                        marginLeft: '35px'\r\n                                                        }}>\r\n                                                            Close\r\n                                                            </span>\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditStudentInfo.tsx",["427","428","429","430","431"],"import React, {\r\n    ChangeEvent, FormEvent, ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, Modal, Row\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\n\r\nexport function EditStudentInfo(): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let param: any = useParams();\r\n    let [student, setStudent] = useState<User>(new User());\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayStudent(param.studentID).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n                // console.log(student.userName);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateStudent(event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(user, userID);\r\n    }\r\n    // console.log(student.userName);\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form\r\n                    noValidate={false}\r\n                    onSubmit={(event) => {\r\n                        updateStudent(event, param.userID);\r\n                    }}\r\n                    className=\"wrapper\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                User Name:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"userName\"\r\n                                id=\"userName\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                value={user.userName}\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                // value = {student.userName}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    First Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.firstName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    Middle Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.middleName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    Last Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.lastName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Email:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                value={user.email}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                DOB:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"dob\"\r\n                                id=\"dob\"\r\n                                value={user.dob.toString()}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Phone:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"phoneNumber\"\r\n                                id=\"phoneNumber\"\r\n                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                value={user.phoneNumber}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Gender\r\n                                                        </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Bisexual\">Bisexual</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Job:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"job\"\r\n                                id=\"job\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                value={user.job}\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={handleClose} block={true}>\r\n                            Save Changes\r\n                                                        </Button>\r\n                        <Button variant=\"secondary\" onClick={handleClose} type=\"submit\" block={true}>\r\n                            Close\r\n                                                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminConsolePage.tsx",["432","433","434","435","436"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport {\r\n  Accordion,\r\n  Breadcrumb,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ChartAPI } from \"../../common/service/Chart\";\r\n\r\ninterface AdminConsolePageProps {\r\n  modalDialog: ReactElement;\r\n}\r\n\r\nexport function AdminConsolePage(props: AdminConsolePageProps): ReactElement {\r\n  let chartAPI: ChartAPI | undefined;\r\n  const [data, setDataChart] = useState([]);\r\n\r\n  const config = {\r\n    data,\r\n    height: 400,\r\n    xField: \"valueX\",\r\n    yField: \"valueY\",\r\n    point: {\r\n      size: 5,\r\n      shape: \"diamond\",\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: \"#aaa\",\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataChart();\r\n  }, []);\r\n\r\n  function getDataChart() {\r\n    chartAPI = new ChartAPI();\r\n\r\n    chartAPI.getDataChart().then((res) => {\r\n      const newValue = res.map((e: any, index: number) => {\r\n        return {\r\n          valueX: e.valueX.toString(),\r\n          valueY: e.valueY,\r\n        };\r\n      });\r\n      setDataChart(newValue);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      {props.modalDialog}\r\n      <main style={{ background: \"#fff\" }}>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/\" }}>\r\n                  Home\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item active={true}>Admin Console</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <Accordion>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                    User Account Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\r\n                          \"/admin-console\" +\r\n                          // eslint-disable-next-line max-len\r\n                          \"/create-account-request-page\"\r\n                        }\r\n                      >\r\n                        Accept Create-Account-Requests\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\r\n                          \"/admin-console\" +\r\n                          // eslint-disable-next-line max-len\r\n                          \"/disable-or-delete-account-page\"\r\n                        }\r\n                      >\r\n                        Disable Or Delete User Account\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                    Student\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/admin-console/manage-student-page\"}\r\n                      >\r\n                        Manage Student\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                    Course\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/admin-console\" + \"/manage-course-page\"}\r\n                      >\r\n                        Manage Course\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\r\n                          \"/admin-console\" +\r\n                          // eslint-disable-next-line max-len\r\n                          \"/manage-things-in-course-page\"\r\n                        }\r\n                      >\r\n                        Manage Things In Course\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                    Teacher\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"3\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/admin-console\" + \"/manage-teacher-page\"}\r\n                      >\r\n                        Manage Teacher\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"4\">\r\n                    Examination\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"4\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\r\n                          \"/admin-console\" +\r\n                          // eslint-disable-next-line max-len\r\n                          \"/manage-things-in-examination-page\"\r\n                        }\r\n                      >\r\n                        Manage Things In Examination\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"5\">\r\n                    Spare Time Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"5\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/admin\" + \"/spare-time-management\"}\r\n                      >\r\n                        List Spare Time\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"6\">\r\n                    Class Management\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"6\">\r\n                    <Card.Body>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        block={true}\r\n                        as={Link}\r\n                        to={\"/admin-console\" + \"/class-page\"}\r\n                      >\r\n                        Class\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n          <div style={{ marginTop: \"30px\", paddingBottom: \"30px\" }}>\r\n            <Line {...config} />\r\n          </div>\r\n        </Container>\r\n      </main>\r\n      <footer className=\"bg-dark text-center text-white\">\r\n        <div className=\"container p-4\">\r\n          <section className=\"\">\r\n            <form action=\"\">\r\n              <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                  <p className=\"pt-2\">\r\n                    <strong>Sign up for our newsletter</strong>\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12\">\r\n                  <div className=\"form-outline form-white mb-4\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"form5Example2\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <button type=\"submit\" className=\"btn btn-outline-light mb-4\">\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </section>\r\n          <section className=\"mb-4\">\r\n            <p>\r\n            FPT University\r\n            </p>\r\n          </section>\r\n        </div>\r\n      </footer>\r\n    </Container>\r\n    //   </main>\r\n    //   <footer></footer>\r\n    // </Container>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageTeacherPage.tsx",["437","438","439","440"],"/* eslint-disable no-await-in-loop */\r\n// Import package members section:\r\nimport React, {\r\n    ChangeEvent,\r\n    FormEvent,\r\n    ReactElement\r\n    , useEffect\r\n    , useState\r\n} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User, UserIndexSignature } from \"../../model/User\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.scss';\r\nimport './ManageTeacherPage.css';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Pagination\r\n} from \"react-bootstrap\";\r\nimport { PagingSection } from \"../../common/component/PagingSection\";\r\n\r\nexport function ManageTeacherPage(): ReactElement {\r\n\r\n    let [pageIndex, setPageIndex] = useState<number>(0);\r\n    let [pageSize] = useState<number>(5);\r\n    let [totalRowCount, setTotalRowCount] = useState<number>(0);\r\n\r\n    let [user, setUser] = useState<User[]>([]);\r\n    let [teacher, setTeacher] = useState<User>(new User());\r\n    let userAPI: UserAPI | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let param: any = useParams();\r\n    let updatedUser: User | undefined;\r\n    let [item, setItem] = useState<User>(new User());\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item: any) => {\r\n        setShow(true);\r\n        setItem(item);\r\n        setTeacher(item);\r\n    }\r\n\r\n    totalRowCount = user.length;\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.viewTeacher().then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        )\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [refreshKey]);\r\n\r\n    // function displayTeacherEdit() {\r\n    //     userAPI = new UserAPI();\r\n    //     userAPI.displayStudent(param.studentID).then(\r\n    //         (res) => {\r\n    //             setTeacher(res.data);\r\n    //             // console.log(student.userName);\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    function goToPage(destinationPageIndex: number): void {\r\n        setPageIndex(destinationPageIndex);\r\n    }\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(teacher);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setTeacher(updatedUser);\r\n    }\r\n\r\n    function updateStudent(event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(teacher, userID).then((res: any) => {\r\n            setRefreshKey((number) => number + 1);\r\n        });\r\n    }\r\n    // function deleteTeacher(event: React.MouseEvent<HTMLButtonElement, MouseEvent>, userID: number) {\r\n    //     event.buttons;\r\n    //     userAPI = new UserAPI();\r\n    //     userAPI.deleteAnotherUser(userID);\r\n    //     console.log(userID);\r\n    // }\r\n\r\n    // console.log(param.userID);\r\n    return (\r\n\r\n        <div className=\"max-width\" id=\"grid\">\r\n\r\n            <div className=\"text-center\">\r\n                <h1>Manage teacher</h1>\r\n                <hr />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div>\r\n                    {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                        <span className=\"fa fa-plus mr-5 \">\r\n                        </span>\r\n                                Add teacher\r\n                </button> */}\r\n                    <div className=\"row mt-15\" id=\"table-cover\" style={{\r\n                        marginLeft: '300px'\r\n                    }}>\r\n\r\n                        <div className=\r\n                            \"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <table className=\"table table-responsive table-fit table-light table-striped table-bordered table-hover\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            ID\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            User name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            First name\r\n                                        </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Middle name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Last name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Phone\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Account status\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Action\r\n                                    </th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody >\r\n\r\n                                    {user.map((item) => {\r\n                                        return (\r\n                                            <tr className=\"text-center text-nowrap\">\r\n\r\n                                                <td>\r\n                                                    {item.userID}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.userName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.firstName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.middleName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.lastName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.phoneNumber}\r\n                                                </td>\r\n\r\n                                                <td className=\"text-center\">\r\n                                                    <span className=\"label label-success\">\r\n                                                        {item.accountStatus}\r\n                                                    </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"text-center text-nowrap\" id=\"action\">\r\n                                                    <Link to={\"/user_detail/\" + item.userID}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                                            <span className=\"fa fa-pencil mr-5 text-center text-nowrap\">\r\n                                                                Detail\r\n                                                            </span>\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                    &nbsp;\r\n                                                    {/* <Link to={\"/admin-console/editStudentInfo/\" + item.userID}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-primary\">\r\n                                                        <span className=\"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                            </span>\r\n                                                    </button>\r\n\r\n                                                    </Link> */}\r\n                                                    <Button variant=\"primary\" onClick={() => handleShow(item)} >\r\n                                                        Edit\r\n                                                    </Button>\r\n\r\n                                                    {/* <button type=\"button\" className=\"btn btn-outline-primary\" href={item.userID} onClick={handleShow}>\r\n                                                        <span className=\"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                            </span>\r\n                                                    </button> */}\r\n\r\n                                                    {/* &nbsp; */}\r\n                                                    {/* <Link to=\"/editTeacherInfo/:teacherID\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-danger\">\r\n                                                            <span className=\r\n                                                                \"fa fa-pencil mr-5\">\r\n                                                                Delete\r\n                                                    </span>\r\n                                                        </button>\r\n                                                    </Link> */}\r\n                                                    {/* <button type=\"button\" className=\"btn btn-outline-danger\"\r\n                                                        onClick={(event) => {\r\n                                                            deleteTeacher(event, param.userID);\r\n                                                        }}>\r\n                                                        <span className=\r\n                                                            \"fa fa-pencil mr-5\">\r\n                                                            Delete\r\n                                                    </span>\r\n                                                    </button> */}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                            <Modal show={show} onHide={handleClose}>\r\n                                <Form\r\n                                    noValidate={false}\r\n                                    onSubmit={(event) => {\r\n                                        updateStudent(event, item.userID);\r\n                                    }}\r\n                                    className=\"wrapper\"\r\n                                >\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                User Name:\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={true}\r\n                                                name=\"userName\"\r\n                                                id=\"userName\"\r\n                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                defaultValue={item.userName}\r\n                                                required={true}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    First Name:\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"firstName\"\r\n                                                    id=\"firstName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.firstName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Middle Name:\r\n                                                                        </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"middleName\"\r\n                                                    id=\"middleName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.middleName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Last Name:\r\n                                                                        </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"lastName\"\r\n                                                    id=\"lastName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.lastName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Email:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"email\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                defaultValue={item.email}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                DOB:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"dob\"\r\n                                                id=\"dob\"\r\n                                                defaultValue={item.dob.toString()}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Phone:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"phoneNumber\"\r\n                                                id=\"phoneNumber\"\r\n                                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                                defaultValue={item.phoneNumber}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Gender\r\n                                                                    </Form.Label>\r\n                                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Bisexual\">Bisexual</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Job:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"job\"\r\n                                                id=\"job\"\r\n                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                defaultValue={item.job}\r\n                                                required={true}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"primary\" onClick={handleClose} type=\"submit\" block={true}>\r\n                                            Save Changes\r\n                                                                </Button>\r\n                                        <Button variant=\"secondary\" onClick={handleClose} block={true}>\r\n                                            Close\r\n                                                                </Button>\r\n                                    </Modal.Footer>\r\n                                </Form>\r\n                            </Modal>\r\n                            <div>\r\n                                <Form.Group>\r\n                                    <Form.Row\r\n                                        className=\"justify-content-md-center\"\r\n                                    >\r\n                                        <PagingSection\r\n                                            pageIndex={pageIndex}\r\n                                            pageSize={pageSize}\r\n                                            totalRowCount={totalRowCount}\r\n                                            goToPage={goToPage}\r\n                                        />\r\n                                    </Form.Row>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\User.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RoleAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PagingSection.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RegisterFormAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseLevelAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseTypeAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Course.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LocalStorageService.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Quiz.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\InputValidate.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\QuestionOption.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\QuizAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\MultipleChoiceQuestion.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LessonAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Lesson.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\RegisterForm.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\UserAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\student_sidebar\\StudentSidebar.tsx",["441"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n// Import package members section:\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Accordion, Button, Card, ListGroup } from \"react-bootstrap\";\r\nimport './StudentSidebar.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { CourseAPI } from \"../../service/CourseAPI\";\r\nimport { Course } from \"../../../model/Course\";\r\nimport { LocalStorageService } from \"../../service/LocalStorageService\";\r\nimport { UserAPI } from \"../../service/UserAPI\";\r\nimport { User } from \"../../../model/User\";\r\n\r\nexport function StudentSidebar(): ReactElement {\r\n\r\n    // Variables declaration:\r\n    let courseAPI = new CourseAPI();\r\n    let userAPI = new UserAPI();\r\n    let [user, setUser] = useState<User>(new User());\r\n    let [sideBarActivated, setSideBarActivated]\r\n        = useState<string>(\"\");\r\n    let localStorageService = new LocalStorageService();\r\n    let [myCourseList, setMyCourseList] = useState<Course[]>([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const name = localStorageService.getLoggedUserName();\r\n        courseAPI.getAllCoursesByCurrentUser(name).then(\r\n            (res) => {\r\n                setMyCourseList(res.data);\r\n            }\r\n        )\r\n        userAPI.displayProfile(name).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        ) \r\n    }, []);\r\n\r\n\r\n    function toggleSideBar(): void {\r\n        if (sideBarActivated !== \"activated\") {\r\n            setSideBarActivated(\"activated\");\r\n        }\r\n        else {\r\n            setSideBarActivated(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id=\"SideBarButton\"\r\n                className={\r\n                    `Side_Bar_Button_Z_Index \r\n                    ${sideBarActivated}`\r\n                }\r\n                onClick={toggleSideBar}\r\n            >\r\n                <div id=\"Top\"></div>\r\n                <div id=\"Middle\"></div>\r\n                <div id=\"Bottom\"></div>\r\n            </div>\r\n            <nav\r\n                id=\"SideBar\"\r\n                className={`Side_Bar_Z_Index ${sideBarActivated}`}\r\n            >\r\n                <span style={{color:'white', textAlign:'start'}}>Hi {user.userName}!</span>\r\n                <ListGroup >\r\n                    <ListGroup.Item action={true} \r\n                                    as = {Link}\r\n                                    to = {\r\n                                        \"/student-dashboard\"\r\n                                    }\r\n                                    style={{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                                    className=\"btt\"\r\n                    >\r\n                        Dashboard\r\n                    </ListGroup.Item >\r\n                    <Accordion style={{backgroundColor: '#242424'}}>\r\n                        <Card style={{backgroundColor: '#242424'}} className=\"btt\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{color:'#e6ccb3'}}>\r\n                                Course\r\n                            </Accordion.Toggle>\r\n                            {myCourseList.map((course) => {\r\n                                return (\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body>\r\n                                            <Button\r\n                                                className=\"btt\"\r\n                                                as = {Link}\r\n                                                size=\"sm\"\r\n                                                to = {\r\n                                                    \"/student-dashboards/\" + course.courseID\r\n                                                }\r\n                                                style={{backgroundColor: \"#242424\",\r\n                                                        borderColor: \"#242424\",\r\n                                                        padding: \"0 30 0 30\",\r\n                                                        \r\n                                                        }}\r\n                                            >\r\n                                                {course.courseName}\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                )\r\n                            })}\r\n                        </Card>\r\n                    </Accordion>\r\n                    <ListGroup.Item action={true} \r\n                                    as = {Link}\r\n                                    to = {\r\n                                        \"/student-dashboardx/profile/\" + user.userID\r\n                                    }\r\n                                    style={{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                                    className=\"btt\"\r\n                    >\r\n                        Profile\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item \r\n                        action = {true}\r\n                        style = {{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                        className = \"btt\"\r\n                        as = {Link}\r\n                        to = {\"/student-dashboard/show-all-exam-page\"}\r\n                    >\r\n                        Your Examination\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </nav>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\teacher_sidebar\\TeacherSidebar.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ErrorHandle.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Examination.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseType.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseLevel.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ShowAllExamPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\TakeExamPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationSessionAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ShowExamScorePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\StudentScore.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\HomeWork.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\ClassSession.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Slot.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherClassPage.tsx",["442","443","444","445"],"// Import package members section:\r\nimport { Class } from \"@material-ui/icons\";\r\nimport { Table, Tag, Button, notification, Modal, Row, Col, Input } from \"antd\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClassAPI } from \"../../common/service/ClassAPI\";\r\n\r\ninterface TeacherClassPageProps {}\r\n\r\nexport function TeacherClassPage(props: TeacherClassPageProps): ReactElement {\r\n  let classAPI: ClassAPI | undefined;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [listClass, setListClass] = useState([]);\r\n  const [listStudent, setListStudent] = useState<any>([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [searchParam, setSearchParam] = useState(\"\");\r\n  const [classIDComment, setClassIDComment] = useState(0);\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n  const user = sessionStorage.getItem(\"loggedInUser\");\r\n  let idUser = user ? JSON.parse(user).id : 0;\r\n\r\n  useEffect(() => {\r\n    getListClass();\r\n  }, [pageNumber]);\r\n\r\n  function getListClass() {\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI\r\n      .getListClass(pageNumber, pageSize, searchParam, idUser, \"ROLE_TEACHER\")\r\n      .then((res) => {\r\n        setTotalRowCount(res.totalRowCount);\r\n        setListClass(res.pageDataHolder);\r\n      });\r\n  }\r\n\r\n  const cancelClass = (id: number) => {\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI.cancelClass(id).then((res) => {\r\n      notification.success({ message: \"Cancel Success\" });\r\n      getListClass();\r\n    });\r\n  };\r\n\r\n  const getAllStudent = (id: number) => {\r\n    setClassIDComment(id);\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI.getAllOFClass(0, 100, id).then((res) => {\r\n      setListStudent(res.pageDataHolder);\r\n      setVisible(true);\r\n    });\r\n  };\r\n\r\n  const searchName = () => {\r\n    getListClass();\r\n  };\r\n\r\n  const commentForTeacher = (item: any) => {\r\n    classAPI = new ClassAPI();\r\n    classAPI\r\n      .createComment(classIDComment, item.userID, item.commentOfClass)\r\n      .then((res) => {\r\n        notification.success({ message: \"Success\" });\r\n        setVisible(false);\r\n      });\r\n  };\r\n\r\n  const handleChangeComment = (value: string, id: number) => {\r\n    const newList = listStudent.map((el: any) => {\r\n      if (el.userID === id) {\r\n        el.commentOfClass = value;\r\n      }\r\n      return el;\r\n    });\r\n\r\n    setListStudent(newList);\r\n  };\r\n\r\n  const columnsStudent: any = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"userID\",\r\n      key: \"userID\",\r\n      width: \"10%\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return <span>{index + 1}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Student Name\",\r\n      dataIndex: \"firstName\",\r\n      key: \"firstName\",\r\n      align: \"center\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return (\r\n          <span>{`${item.firstName} ${item.middleName} ${item.lastName}`}</span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Comment\",\r\n      dataIndex: \"userID\",\r\n      key: \"userID\",\r\n      align: \"center\",\r\n      render: (value: any, item: any, record: any) => {\r\n        return (\r\n          <span style={{ display: \"flex\" }}>\r\n            <Input\r\n              value={item.commentOfClass}\r\n              onChange={(e) => handleChangeComment(e.target.value, item.userID)}\r\n            />\r\n\r\n            <Button type=\"primary\" onClick={() => commentForTeacher(item)}>\r\n              Save\r\n            </Button>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"classID\",\r\n      key: \"classID\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return <span>{index + 1}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Course Name\",\r\n      dataIndex: \"courseID\",\r\n      key: \"courseID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (courseID: any) => {\r\n        return <span>{courseID.courseName}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Teacher Name\",\r\n      dataIndex: \"teacherID\",\r\n      key: \"teacherID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (teacherID: any) => {\r\n        return <span>{teacherID.userName}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Slot\",\r\n      dataIndex: \"slot\",\r\n      key: \"slot\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (slot: any) => {\r\n        return (\r\n          <span>\r\n            <Tag color=\"#87d068\">{slot.slotName}</Tag>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (status: any) => {\r\n        return (\r\n          <span>\r\n            {status === 1 && <div style={{ color: \"green\" }}>Active</div>}\r\n            {status === 0 && <div style={{ color: \"red\" }}>In-Active</div>}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"All Student\",\r\n      dataIndex: \"classID\",\r\n      key: \"classID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (classID: number, record: any) => {\r\n        return (\r\n          <span>\r\n            {record.status === 1 && (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  getAllStudent(classID);\r\n                }}\r\n              >\r\n                Show All Student\r\n              </Button>\r\n            )}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"classID\",\r\n      key: \"classID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (classID: number, record: any) => (\r\n        <div>\r\n          {record.status === 1 && (\r\n            <div\r\n              className=\"cursor-pointer\"\r\n              onClick={() => {\r\n                Modal.confirm({\r\n                  title: \"Are you sure you want to cancel?\",\r\n                  onOk: () => {\r\n                    cancelClass(classID);\r\n                  },\r\n                  okText: \"Confirm\",\r\n                });\r\n              }}\r\n            >\r\n              <Button type=\"primary\" danger>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Container fluid={true}>\r\n      <main>\r\n        <Container>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card shadow-sm mt-5\">\r\n              <div className=\"card-header bg-transparent border-0\">\r\n                <h3 className=\"mb-0\">\r\n                  <i className=\"far fa-clone pr-1\">Teacher Class Management</i>\r\n                </h3>\r\n              </div>\r\n              <div className=\"mb-3 col-lg-12\">\r\n                <Input\r\n                  placeholder=\"Search\"\r\n                  style={{ width: \"500px\" }}\r\n                  value={searchParam}\r\n                  onChange={(e) => setSearchParam(e.target.value)}\r\n                  onPressEnter={searchName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"card-body pt-0\">\r\n                <Table\r\n                  className=\"table-custom\"\r\n                  bordered={true}\r\n                  // @ts-ignore\r\n                  dataSource={listClass}\r\n                  // loading={loading}\r\n                  // @ts-ignore\r\n                  //   rowKey={classID}\r\n                  columns={columns}\r\n                  pagination={{\r\n                    position: [\"bottomCenter\"],\r\n                    current: pageNumber,\r\n                    total: totalRowCount,\r\n                    pageSize: pageSize,\r\n                    onChange: (page: number) => setPageNumber(page),\r\n                    showSizeChanger: false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Modal\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            closable={false}\r\n            maskClosable={false}\r\n            title={null}\r\n            footer={null}\r\n            width={800}\r\n            bodyStyle={{ padding: 16, paddingLeft: 24, paddingRight: 24 }}\r\n          >\r\n            <Row\r\n              justify=\"space-between\"\r\n              className=\"border-black-8 border-b pb-2 mb-4\"\r\n            >\r\n              <Col>\r\n                <h3>List Student</h3>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <Table\r\n                className=\"table-custom\"\r\n                bordered={true}\r\n                // @ts-ignore\r\n                dataSource={listStudent}\r\n                // @ts-ignore\r\n                //   rowKey={classID}\r\n                columns={columnsStudent}\r\n                pagination={false}\r\n                // pagination={{\r\n                //   position: [\"bottomCenter\"],\r\n                //   current: page,\r\n                //   total: data?.categories?.meta?.totalRecord,\r\n                //   pageSize: data?.categories?.meta?.limit,\r\n                //   onChange: (page: number) => onChangePage(page),\r\n                //   showSizeChanger: false,\r\n                // }}\r\n              />\r\n            </div>\r\n            <Row justify=\"center\" gutter={[12, 0]}>\r\n              <Col className=\"mt-4\">\r\n                <Button className=\"px-12\" onClick={() => setVisible(false)}>\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Modal>\r\n        </Container>\r\n      </main>\r\n      <footer></footer>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminSpareTimePage.tsx",["446","447","448","449","450","451","452","453","454","455"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState, ReactNode } from \"react\";\r\n\r\nimport { TeacherSidebar } from \"../../common/component/teacher_sidebar/TeacherSidebar\";\r\nimport { TeacherSpareTimeAPI } from \"../../common/service/TeacherSpareTimeAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SpareTime } from \"../../model/SpareTime\";\r\nimport { DialogControl } from \"../../common/component/ModalDialog\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\nimport { CourseType } from \"../../model/CourseType\";\r\nimport { CourseTypeAPI } from \"../../common/service/CourseTypeAPI\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  Tag,\r\n} from \"antd\";\r\n\r\ninterface AdminSpareTimePageProps {\r\n  modalDialog: ReactElement;\r\n  dialogController: DialogControl;\r\n  typeGuardian: TypeGuard;\r\n}\r\n\r\nexport function AdminSpareTimePage(\r\n  props: AdminSpareTimePageProps\r\n): ReactElement {\r\n  let sprareTimeAPI: TeacherSpareTimeAPI | undefined;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [listSpareTime, setListSpareTime] = useState([]);\r\n  const [spareTimeID, setSpareTimeID] = useState<number>(0);\r\n  let [courseTypeAPI] = useState<CourseTypeAPI>(new CourseTypeAPI());\r\n  const [visibleModalCreate, setVisibleModalCreate] = useState(false);\r\n  const { Option } = Select;\r\n  const [listCourse, setListCourse] = useState<CourseType[]>([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [idEdit, setIdEdit] = useState<number>(0);\r\n  const [selectedCourse, setSelectedCourse] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState([]);\r\n  const [searchParam, setSearchParam] = useState(\"\");\r\n  const history = useHistory();\r\n  const [visibleModalApprove, setVisibleModalApprove] = useState(false);\r\n  const [listCourseForClass, setListCourseForClass] = useState([]);\r\n  const [listSlotForClass, setListSlotForClass] = useState([]);\r\n  const [courseValueForClass, setCourseValueForClass] = useState(\"\");\r\n  const [slotValueForClass, setSlotValueForClass] = useState(\"\");\r\n  const [approveID, setApproveID] = useState(0);\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n  const listSlot = [\r\n    {\r\n      name: \"M1\",\r\n      value: 1,\r\n    },\r\n    {\r\n      name: \"M2\",\r\n      value: 2,\r\n    },\r\n    {\r\n      name: \"M3\",\r\n      value: 3,\r\n    },\r\n    {\r\n      name: \"M4\",\r\n      value: 4,\r\n    },\r\n    {\r\n      name: \"M5\",\r\n      value: 5,\r\n    },\r\n    {\r\n      name: \"E1\",\r\n      value: 6,\r\n    },\r\n    {\r\n      name: \"E2\",\r\n      value: 7,\r\n    },\r\n    {\r\n      name: \"E3\",\r\n      value: 8,\r\n    },\r\n    {\r\n      name: \"E4\",\r\n      value: 9,\r\n    },\r\n    {\r\n      name: \"E5\",\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getListTeacherSpareTime();\r\n  }, [pageNumber]);\r\n\r\n  function getListTeacherSpareTime() {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI\r\n      .getListTeacherSpareTime(pageNumber, pageSize, searchParam)\r\n      .then((res) => {\r\n        setTotalRowCount(res.totalRowCount);\r\n        setListSpareTime(res.pageDataHolder);\r\n      });\r\n  }\r\n  const searchName = () => {\r\n    getListTeacherSpareTime();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListCourse();\r\n  }, []);\r\n\r\n  function getListCourse() {\r\n    courseTypeAPI.getAllCourseTypeInTheSystem().then((res) => {\r\n      setListCourse(res);\r\n    });\r\n  }\r\n\r\n  const handleChangeSelectCourse = (value: any) => {\r\n    setSelectedCourse(value);\r\n  };\r\n\r\n  const handleChangeSelectSlot = (value: any) => {\r\n    setSelectedSlot(value);\r\n  };\r\n\r\n  const rejectSpareTime = (record: any) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.rejectSpareTime(record.spareTimeID).then((res) => {\r\n      notification.success({ message: \"Reject thành công\" });\r\n      getListTeacherSpareTime();\r\n    });\r\n  };\r\n\r\n  const getListCourseForClass = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.getListCourseForClass(0, 100, id).then((res) => {\r\n      setListCourseForClass(res.pageDataHolder);\r\n    });\r\n  };\r\n\r\n  const getListSlotForClass = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.getListSlotForClass(id).then((res) => {\r\n      setListSlotForClass(res);\r\n    });\r\n  };\r\n\r\n  const approveSpareTime = (record: any) => {\r\n    getListCourseForClass(record.spareTimeID);\r\n    getListSlotForClass(record.spareTimeID);\r\n    setApproveID(record.spareTimeID);\r\n    setVisibleModalApprove(true);\r\n  };\r\n  const approveClass = () => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    let slot: any = listSlotForClass.find((x: any) => {\r\n      if (x.slotName === slotValueForClass) return x.slotID;\r\n    });\r\n\r\n    let course: any = listCourseForClass.find((x: any) => {\r\n      if (x.courseName === courseValueForClass) return x.courseID;\r\n    });\r\n\r\n    sprareTimeAPI\r\n      .approveClass(slot?.slotID, course?.courseID, approveID)\r\n      .then((res) => {\r\n        setVisibleModalApprove(false);\r\n        notification.success({ message: \"Approved\" });\r\n        getListTeacherSpareTime();\r\n        setCourseValueForClass(\"\");\r\n        setSlotValueForClass(\"\");\r\n      })\r\n      .catch((error) => {\r\n        notification.error({message: error.response.data.message});\r\n        console.log(error, \"error\");\r\n      });\r\n  };\r\n\r\n  const saveForm = () => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n    let courseIds = [];\r\n    let slotIds = [];\r\n\r\n    courseIds = selectedCourse.map((e1) => {\r\n      const index = listCourse.findIndex((x) => x.typeName === e1);\r\n      return listCourse[index].typeID;\r\n    });\r\n\r\n    slotIds = selectedSlot.map((e1) => {\r\n      const index = listSlot.findIndex((x) => x.name === e1);\r\n      return listSlot[index].value;\r\n    });\r\n\r\n    if (isEdit) {\r\n      sprareTimeAPI.editSpareTime(idEdit, courseIds, slotIds).then((res) => {\r\n        history.push(\"/teacher/spare-time-management\");\r\n        notification.success({\r\n          message: \"Sửa thành công\",\r\n        });\r\n        getListTeacherSpareTime();\r\n        setVisibleModalCreate(false);\r\n        setSelectedCourse([]);\r\n        setSelectedSlot([]);\r\n      });\r\n    } else {\r\n      sprareTimeAPI\r\n        .createSpareTime(courseIds, slotIds)\r\n        .then((res) => {\r\n          history.push(\"/teacher/spare-time-management\");\r\n          notification.success({\r\n            message: \"Tạo thành công\",\r\n          });\r\n          getListTeacherSpareTime();\r\n          setVisibleModalCreate(false);\r\n          setSelectedCourse([]);\r\n          setSelectedSlot([]);\r\n        })\r\n        .catch((error) => {\r\n          setVisibleModalCreate(false);\r\n          setSelectedCourse([]);\r\n          setSelectedSlot([]);\r\n          notification.error({ message: error.massage });\r\n        });\r\n    }\r\n  };\r\n\r\n  const deteleSpareTime = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.deleteSpareTime(id).then((res) => {\r\n      notification.success({\r\n        message: \"Xóa thành công\",\r\n      });\r\n      getListTeacherSpareTime();\r\n      history.push(\"/teacher/spare-time-management\");\r\n    });\r\n  };\r\n\r\n  const editSpareTime = (record: any) => {\r\n    // @ts-ignore\r\n    let nameCourseType = [];\r\n    // @ts-ignore\r\n    let nameSlot = [];\r\n    record.courseTypeList.map((el: any) => {\r\n      return nameCourseType.push(el.typeName);\r\n    });\r\n\r\n    record.slotList.map((el: any) => {\r\n      return nameSlot.push(el.slotName);\r\n    });\r\n    // @ts-ignore\r\n    setSelectedCourse(nameCourseType);\r\n    // @ts-ignore\r\n    setSelectedSlot(nameSlot);\r\n    setVisibleModalCreate(true);\r\n    setIsEdit(true);\r\n    setIdEdit(record.spareTimeID);\r\n  };\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"spareTimeID\",\r\n      key: \"spareTimeID\",\r\n      width: \"10%\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return <span>{index + 1}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Teacher Name\",\r\n      dataIndex: \"userID\",\r\n      key: \"userID\",\r\n      width: \"10%\",\r\n      align: \"center\",\r\n      render: (userID: any) => {\r\n        return <span>{userID.userName}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Course\",\r\n      dataIndex: \"courseTypeList\",\r\n      key: \"typeName\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (courseTypeList: any) => {\r\n        return (\r\n          <span>\r\n            {courseTypeList.map((item: any, i: any) => {\r\n              return (\r\n                <span key={i}>\r\n                  <Tag color=\"#2db7f5\">{item.typeName}</Tag>\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Slot\",\r\n      dataIndex: \"slotList\",\r\n      key: \"slotList\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (slotList: any) => {\r\n        return (\r\n          <span>\r\n            {slotList.map((item: any, i: any) => {\r\n              return (\r\n                <span key={i}>\r\n                  <Tag color=\"#87d068\">{item.slotName}</Tag>\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"15%\",\r\n      align: \"center\",\r\n      render: (status: any, record: any) => {\r\n        return (\r\n          <div>\r\n            {status === 2 && <div style={{ color: \"green\" }}>APPROVED</div>}\r\n            {status === 3 && <div style={{ color: \"red\" }}>REJECTED</div>}\r\n            {status === 1 && (\r\n              <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"mr-2\"\r\n                    onClick={() => {\r\n                      approveSpareTime(record);\r\n                    }}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                </div>\r\n                <div\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => {\r\n                    Modal.confirm({\r\n                      title: \"Are you sure you want to reject?\",\r\n                      onOk: () => {\r\n                        rejectSpareTime(record);\r\n                      },\r\n                      okText: \"Confirm\",\r\n                    });\r\n                  }}\r\n                >\r\n                  <Button danger>Reject</Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const listOptionCourse = listCourse?.map((item) => {\r\n    return item.typeName;\r\n  });\r\n\r\n  const listOptionSlot = listSlot?.map((item) => {\r\n    return item.name;\r\n  });\r\n\r\n  return (\r\n    <div className=\"col-lg-12 bg-transparent border-0\">\r\n      <TeacherSidebar />\r\n      <main>\r\n        {/* <Container> */}\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card shadow-sm mt-5\">\r\n            <div className=\"card-header bg-transparent border-0\">\r\n              <h3 className=\"mb-0\">\r\n                <i className=\"far fa-clone pr-1\">Spare Time Management</i>\r\n              </h3>\r\n            </div>\r\n            <div className=\"mb-3 col-lg-12\">\r\n              <Input\r\n                placeholder=\"Search\"\r\n                style={{ width: \"500px\" }}\r\n                value={searchParam}\r\n                onChange={(e) => setSearchParam(e.target.value)}\r\n                onPressEnter={searchName}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"card-body pt-0\">\r\n              <Table\r\n                className=\"table-custom\"\r\n                bordered={true}\r\n                // @ts-ignore\r\n                dataSource={listSpareTime}\r\n                // loading={loading}\r\n                // @ts-ignore\r\n                rowKey={spareTimeID}\r\n                columns={columns}\r\n                // pagination={false}\r\n                pagination={{\r\n                  position: [\"bottomCenter\"],\r\n                  current: pageNumber,\r\n                  total: totalRowCount,\r\n                  pageSize: pageSize,\r\n                  onChange: (page: number) => setPageNumber(page),\r\n                  showSizeChanger: false,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </Container> */}\r\n      </main>\r\n      <footer></footer>\r\n\r\n      <Modal\r\n        visible={visibleModalCreate}\r\n        onCancel={() => setVisibleModalCreate(false)}\r\n        closable={false}\r\n        maskClosable={false}\r\n        title={null}\r\n        footer={null}\r\n        width={800}\r\n        bodyStyle={{ padding: 16, paddingLeft: 24, paddingRight: 24 }}\r\n      >\r\n        <Row\r\n          justify=\"space-between\"\r\n          className=\"border-black-8 border-b pb-2 mb-4\"\r\n        >\r\n          <Col>\r\n            <h3>Create Teacher Spare Time</h3>\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={4}>Course Type</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={selectedCourse}\r\n                onChange={handleChangeSelectCourse}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listOptionCourse.map((item, index) => {\r\n                  return (\r\n                    <Option value={item} key={index}>\r\n                      {item}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>Slot</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={selectedSlot}\r\n                onChange={handleChangeSelectSlot}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listOptionSlot.map((item, index) => {\r\n                  return (\r\n                    <Option value={item} key={index}>\r\n                      {item}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" gutter={[12, 0]}>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                className=\"px-12\"\r\n                onClick={() => setVisibleModalCreate(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"px-12\"\r\n                disabled={\r\n                  selectedSlot.length === 0 || selectedCourse.length === 0\r\n                }\r\n                onClick={() => saveForm()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visibleModalApprove}\r\n        onCancel={() => setVisibleModalApprove(false)}\r\n        closable={false}\r\n        maskClosable={false}\r\n        title={null}\r\n        footer={null}\r\n        width={800}\r\n        bodyStyle={{ padding: 16, paddingLeft: 24, paddingRight: 24 }}\r\n      >\r\n        <Row\r\n          justify=\"space-between\"\r\n          className=\"border-black-8 border-b pb-2 mb-4\"\r\n        >\r\n          <Col>\r\n            <h3>Approve Spare Time</h3>\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={4}>Course</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={courseValueForClass}\r\n                onChange={(value) => setCourseValueForClass(value)}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listCourseForClass &&\r\n                  listCourseForClass.map((item: any) => {\r\n                    return (\r\n                      <Option value={item.courseName} key={item.courseID}>\r\n                        {item.courseName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>Slot</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={slotValueForClass}\r\n                onChange={(value) => {\r\n                  setSlotValueForClass(value);\r\n                }}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listSlotForClass &&\r\n                  listSlotForClass.map((item: any) => {\r\n                    return (\r\n                      <Option value={item.slotName} key={item.slotID}>\r\n                        {item.slotName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" gutter={[12, 0]}>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                className=\"px-12\"\r\n                onClick={() => { \r\n                  setVisibleModalApprove(false)\r\n                  setCourseValueForClass(\"\");\r\n                  setSlotValueForClass(\"\");\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"px-12\"\r\n                disabled={!courseValueForClass || !slotValueForClass}\r\n                onClick={() => approveClass()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminClassPage.tsx",["456","457","458","459"],"// Import package members section:\r\nimport { Class } from \"@material-ui/icons\";\r\nimport { Table, Tag, Button, Modal, Input } from \"antd\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClassAPI } from \"../../common/service/ClassAPI\";\r\n\r\ninterface AdminClassPageProps {}\r\n\r\nexport function AdminClassPage(props: AdminClassPageProps): ReactElement {\r\n  let classAPI: ClassAPI | undefined;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [listClass, setListClass] = useState([]);\r\n  const [searchParam, setSearchParam] = useState(\"\");\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getListClass();\r\n  }, [pageNumber]);\r\n\r\n  function getListClass() {\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI.getListClass(pageNumber, pageSize, searchParam).then((res) => {\r\n      setTotalRowCount(res.totalRecord);\r\n      setListClass(res.pageDataHolder);\r\n    });\r\n  }\r\n\r\n  const deleteClass = (id: number) => {\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI?.deleteClass(id).then((res) => {\r\n      getListClass();\r\n    });\r\n  };\r\n\r\n  const searchName = () => {\r\n    getListClass();\r\n  };\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"classID\",\r\n      key: \"classID\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return <span>{index + 1}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Course Name\",\r\n      dataIndex: \"courseID\",\r\n      key: \"courseID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (courseID: any) => {\r\n        return <span>{courseID.courseName}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Teacher Name\",\r\n      dataIndex: \"teacherID\",\r\n      key: \"teacherID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (teacherID: any) => {\r\n        return <span>{teacherID.userName}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Slot\",\r\n      dataIndex: \"slot\",\r\n      key: \"slot\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (slot: any) => {\r\n        return (\r\n          <span>\r\n            <Tag color=\"#87d068\">{slot.slotName}</Tag>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"classID\",\r\n      key: \"classID\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (classID: number) => (\r\n        <div\r\n          className=\"cursor-pointer\"\r\n          onClick={() => {\r\n            Modal.confirm({\r\n              title: \"Are you sure you want to delete?\",\r\n              onOk: () => {\r\n                deleteClass(classID);\r\n              },\r\n              okText: \"Confirm\",\r\n            });\r\n          }}\r\n        >\r\n          <Button type=\"primary\" danger>\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Container fluid={true}>\r\n      <main>\r\n        <Container>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card shadow-sm mt-5\">\r\n              <div className=\"card-header bg-transparent border-0\">\r\n                <h3 className=\"mb-0\">\r\n                  <i className=\"far fa-clone pr-1\">Admin Class Management</i>\r\n                </h3>\r\n              </div>\r\n              <div className=\"mb-3 col-lg-12\">\r\n                <Input\r\n                  placeholder=\"Search\"\r\n                  style={{ width: \"500px\" }}\r\n                  value={searchParam}\r\n                  onChange={(e) => setSearchParam(e.target.value)}\r\n                  onPressEnter={searchName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"card-body pt-0\">\r\n                <Table\r\n                  className=\"table-custom\"\r\n                  bordered={true}\r\n                  // @ts-ignore\r\n                  dataSource={listClass}\r\n                  // loading={loading}\r\n                  // @ts-ignore\r\n                  //   rowKey={classID}\r\n                  columns={columns}\r\n                  pagination={{\r\n                    position: [\"bottomCenter\"],\r\n                    current: pageNumber,\r\n                    total: totalRowCount,\r\n                    pageSize: pageSize,\r\n                    onChange: (page: number) => setPageNumber(page),\r\n                    showSizeChanger: false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </main>\r\n      <footer></footer>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentClassPage.tsx",["460","461","462","463"],"// Import package members section:\r\nimport { Class } from \"@material-ui/icons\";\r\nimport { Table } from \"antd\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClassAPI } from \"../../common/service/ClassAPI\";\r\n\r\ninterface StudentClassPageProps {}\r\n\r\nexport function StudentClassPage(props: StudentClassPageProps): ReactElement {\r\n  let classAPI: ClassAPI | undefined;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [listClass, setListClass] = useState([]);\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n  const user = sessionStorage.getItem('loggedInUser');\r\n  let idUser = user ? JSON.parse(user).id : 0;\r\n\r\n  useEffect(() => {\r\n    getListClass();\r\n  },[pageNumber])\r\n\r\n  function getListClass() {\r\n    classAPI = new ClassAPI();\r\n\r\n    classAPI.getListClass(pageNumber, pageSize, '', idUser, 'ROLE_STUDENT').then((res) => {\r\n      setTotalRowCount(res.totalRowCount)\r\n      setListClass(res.pageDataHolder);\r\n    });\r\n  }\r\n\r\n  const columns: any = [\r\n    {\r\n        title: \"#\",\r\n        dataIndex: \"classID\",\r\n        key: \"classID\",\r\n        render: (value: any, item: any, index: number) => {\r\n          return <span>{index + 1}</span>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Course Name\",\r\n        dataIndex: \"courseID\",\r\n        key: \"courseID\",\r\n        width: \"30%\",\r\n        align: \"center\",\r\n        render: (courseID: any) => {\r\n          return <span>{courseID.courseName}</span>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Teacher Name\",\r\n        dataIndex: \"teacherID\",\r\n        key: \"teacherID\",\r\n        width: \"30%\",\r\n        align: \"center\",\r\n        render: (teacherID: any) => {\r\n          return <span>{teacherID.userName}</span>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Slot\",\r\n        dataIndex: \"slot\",\r\n        key: \"slot\",\r\n        width: \"30%\",\r\n        align: \"center\",\r\n        render: (slot: any) => {\r\n          return <span>{slot.slotName}</span>;\r\n        },\r\n      },\r\n  ];\r\n  return (\r\n    <Container>\r\n      <main>\r\n        <Container>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card shadow-sm mt-5\">\r\n              <div className=\"card-header bg-transparent border-0\">\r\n                <h3 className=\"mb-0\">\r\n                  <i className=\"far fa-clone pr-1\">Student Class Management</i>\r\n                </h3>\r\n              </div>\r\n\r\n              <div className=\"card-body pt-0\">\r\n                <Table\r\n                  className=\"table-custom\"\r\n                  bordered={true}\r\n                  // @ts-ignore\r\n                  dataSource={listClass}\r\n                  // loading={loading}\r\n                  // @ts-ignore\r\n                //   rowKey={classID}\r\n                  columns={columns}\r\n                  pagination={{\r\n                    position: [\"bottomCenter\"],\r\n                    current: pageNumber,\r\n                    total: totalRowCount,\r\n                    pageSize: pageSize,\r\n                    onChange: (page: number) => setPageNumber(page),\r\n                    showSizeChanger: false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </main>\r\n      <footer></footer>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\SpareTimePage.tsx",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState, ReactNode } from \"react\";\r\n\r\nimport { TeacherSidebar } from \"../../common/component/teacher_sidebar/TeacherSidebar\";\r\nimport { TeacherSpareTimeAPI } from \"../../common/service/TeacherSpareTimeAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SpareTime } from \"../../model/SpareTime\";\r\nimport { DialogControl } from \"../../common/component/ModalDialog\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\nimport { CourseType } from \"../../model/CourseType\";\r\nimport { CourseTypeAPI } from \"../../common/service/CourseTypeAPI\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  Tag,\r\n} from \"antd\";\r\n\r\ninterface TeacherSpareTimePageProps {\r\n  modalDialog: ReactElement;\r\n  dialogController: DialogControl;\r\n  typeGuardian: TypeGuard;\r\n}\r\n\r\nexport function TeacherSpareTimePage(\r\n  props: TeacherSpareTimePageProps\r\n): ReactElement {\r\n  let sprareTimeAPI: TeacherSpareTimeAPI | undefined;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [listSpareTime, setListSpareTime] = useState([]);\r\n  const [spareTimeID, setSpareTimeID] = useState<number>(0);\r\n  let [courseTypeAPI] = useState<CourseTypeAPI>(new CourseTypeAPI());\r\n  const [visibleModalCreate, setVisibleModalCreate] = useState(false);\r\n  const { Option } = Select;\r\n  const [listCourse, setListCourse] = useState<CourseType[]>([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [idEdit, setIdEdit] = useState<number>(0);\r\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\r\n  const [selectedSlot, setSelectedSlot] = useState([]);\r\n  const [searchParam, setSearchParam] = useState(\"\");\r\n  const history = useHistory();\r\n  const [visibleModalApprove, setVisibleModalApprove] = useState(false);\r\n  const [listCourseForClass, setListCourseForClass] = useState([]);\r\n  const [listSlotForClass, setListSlotForClass] = useState([]);\r\n  const [courseValueForClass, setCourseValueForClass] = useState(\"\");\r\n  const [slotValueForClass, setSlotValueForClass] = useState(\"\");\r\n  const [approveID, setApproveID] = useState(0);\r\n  const [totalRowCount, setTotalRowCount] = useState(0);\r\n  const user = sessionStorage.getItem(\"loggedInUser\");\r\n  let idUser = user ? JSON.parse(user).id : 0;\r\n  const listSlot = [\r\n    {\r\n      name: \"M1\",\r\n      value: 1,\r\n    },\r\n    {\r\n      name: \"M2\",\r\n      value: 2,\r\n    },\r\n    {\r\n      name: \"M3\",\r\n      value: 3,\r\n    },\r\n    {\r\n      name: \"M4\",\r\n      value: 4,\r\n    },\r\n    {\r\n      name: \"M5\",\r\n      value: 5,\r\n    },\r\n    {\r\n      name: \"E1\",\r\n      value: 6,\r\n    },\r\n    {\r\n      name: \"E2\",\r\n      value: 7,\r\n    },\r\n    {\r\n      name: \"E3\",\r\n      value: 8,\r\n    },\r\n    {\r\n      name: \"E4\",\r\n      value: 9,\r\n    },\r\n    {\r\n      name: \"E5\",\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getListTeacherSpareTime();\r\n  }, [pageNumber]);\r\n\r\n  function getListTeacherSpareTime() {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.getListTeacherSpareTime(pageNumber, pageSize, undefined, idUser).then((res) => {\r\n      setTotalRowCount(res.totalRowCount)\r\n      setListSpareTime(res.pageDataHolder);\r\n    });\r\n  }\r\n  const searchName = () => {\r\n    getListTeacherSpareTime();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListCourse();\r\n  }, []);\r\n\r\n  function getListCourse() {\r\n    courseTypeAPI.getAllCourseTypeInTheSystem().then((res) => {\r\n      setListCourse(res);\r\n    });\r\n  }\r\n\r\n  const handleChangeSelectCourse = (value: any) => {\r\n    setSelectedCourse(value);\r\n  };\r\n\r\n  const handleChangeSelectSlot = (value: any) => {\r\n    setSelectedSlot(value);\r\n  };\r\n\r\n  const rejectSpareTime = (record: any) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.rejectSpareTime(record.spareTimeID).then((res) => {\r\n      notification.success({ message: \"Reject thành công\" });\r\n      getListTeacherSpareTime();\r\n    });\r\n  };\r\n\r\n  const getListCourseForClass = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.getListCourseForClass(0, 100, id).then((res) => {\r\n      setListCourseForClass(res.pageDataHolder);\r\n    });\r\n  };\r\n\r\n  const getListSlotForClass = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.getListSlotForClass(id).then((res) => {\r\n      setListSlotForClass(res);\r\n    });\r\n  };\r\n\r\n  const approveSpareTime = (record: any) => {\r\n    getListCourseForClass(record.spareTimeID);\r\n    getListSlotForClass(record.spareTimeID);\r\n    setApproveID(record.spareTimeID);\r\n    setVisibleModalApprove(true);\r\n  };\r\n  const approveClass = () => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    let slot: any = listSlotForClass.find((x: any) => {\r\n      if (x.slotName === slotValueForClass) return x.slotID;\r\n    });\r\n\r\n    let course: any = listCourseForClass.find((x: any) => {\r\n      if (x.courseName === courseValueForClass) return x.courseID;\r\n    });\r\n\r\n    sprareTimeAPI\r\n      .approveClass(slot?.slotID, course?.courseID, approveID)\r\n      .then((res) => {\r\n        setVisibleModalApprove(false);\r\n        notification.success({ message: \"Approved\" });\r\n        getListTeacherSpareTime();\r\n        setCourseValueForClass(\"\");\r\n        setSlotValueForClass(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, \"error\");\r\n      });\r\n  };\r\n\r\n  const saveForm = () => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    let slotIds = selectedSlot.map((e1) => {\r\n      const index = listSlot.findIndex((x) => x.name === e1);\r\n      return listSlot[index].value;\r\n    });\r\n\r\n    let courseIds: any = listCourse.find((x: any) => {\r\n      if (x.typeName === selectedCourse) return x.typeID;\r\n    });\r\n\r\n    if (isEdit) {\r\n      sprareTimeAPI\r\n        .editSpareTime(idEdit, courseIds?.typeID, slotIds)\r\n        .then((res) => {\r\n          history.push(\"/teacher/spare-time-management\");\r\n          notification.success({\r\n            message: \"Sửa thành công\",\r\n          });\r\n          getListTeacherSpareTime();\r\n          setVisibleModalCreate(false);\r\n          setSelectedCourse(\"\");\r\n          setSelectedSlot([]);\r\n          setIsEdit(false);\r\n          setIdEdit(0);\r\n        }).catch((error) => {\r\n        notification.error({ message: error.response.data.message });\r\n        setVisibleModalCreate(false);\r\n        setSelectedCourse(\"\");\r\n        setSelectedSlot([]);\r\n      });;\r\n    } else {\r\n      sprareTimeAPI\r\n        .createSpareTime(courseIds?.typeID, slotIds)\r\n        .then((res) => {\r\n          history.push(\"/teacher/spare-time-management\");\r\n          notification.success({\r\n            message: \"Tạo thành công\",\r\n          });\r\n          getListTeacherSpareTime();\r\n          setVisibleModalCreate(false);\r\n          setSelectedCourse(\"\");\r\n          setSelectedSlot([]);\r\n        })\r\n        .catch((error) => {\r\n          notification.error({ message: error.response.data.message });\r\n          setVisibleModalCreate(false);\r\n          setSelectedCourse(\"\");\r\n          setSelectedSlot([]);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deteleSpareTime = (id: number) => {\r\n    sprareTimeAPI = new TeacherSpareTimeAPI();\r\n\r\n    sprareTimeAPI.deleteSpareTime(id).then((res) => {\r\n      notification.success({\r\n        message: \"Xóa thành công\",\r\n      });\r\n      getListTeacherSpareTime();\r\n      history.push(\"/teacher/spare-time-management\");\r\n    });\r\n  };\r\n\r\n  const editSpareTime = (record: any) => {\r\n    // @ts-ignore\r\n    let nameCourseType = \"\";\r\n    // @ts-ignore\r\n    let nameSlot = [];\r\n    nameCourseType = record.courseTypeList.map((el: any) => {\r\n      return el.typeName;\r\n    });\r\n\r\n    record.slotList.map((el: any) => {\r\n      return nameSlot.push(el.slotName);\r\n    });\r\n    // @ts-ignore\r\n    setSelectedCourse(nameCourseType[0]);\r\n    // @ts-ignore\r\n    setSelectedSlot(nameSlot);\r\n    setVisibleModalCreate(true);\r\n    setIsEdit(true);\r\n    setIdEdit(record.spareTimeID);\r\n  };\r\n\r\n  const columns: any = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"spareTimeID\",\r\n      key: \"spareTimeID\",\r\n      width: \"10%\",\r\n      render: (value: any, item: any, index: number) => {\r\n        return <span>{index + 1}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Course\",\r\n      dataIndex: \"courseTypeList\",\r\n      key: \"typeName\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (courseTypeList: any) => {\r\n        return (\r\n          <span>\r\n            {courseTypeList.map((item: any, i: any) => {\r\n              return (\r\n                <span key={i}>\r\n                  <Tag color=\"#2db7f5\">{item.typeName}</Tag>\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Slot\",\r\n      dataIndex: \"slotList\",\r\n      key: \"slotList\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (slotList: any) => {\r\n        return (\r\n          <span>\r\n            {slotList.map((item: any, i: any) => {\r\n              return (\r\n                <span key={i}>\r\n                  <Tag color=\"#87d068\">{item.slotName}</Tag>\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: \"30%\",\r\n      align: \"center\",\r\n      render: (status: number) => {\r\n        return (\r\n          <span>\r\n            {status === 1 && <div style={{color: 'orange'}}>PENDING</div>}\r\n            {status === 2 && <div style={{color: 'green'}}>APPROVED</div>}\r\n            {status === 3 && <div style={{color: 'red'}}>REJECTED</div>}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"spareTimeID\",\r\n      key: \"spareTimeID\",\r\n      width: \"20%\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (spareTimeID: number, record: any) => (\r\n        <div className=\"view-icon\">\r\n          {record.status === 1 && (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"mr-2\"\r\n                onClick={() => {\r\n                  editSpareTime(record);\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <div\r\n                className=\"cursor-pointer\"\r\n                onClick={() => {\r\n                  Modal.confirm({\r\n                    title: \"Are you sure you want to delete?\",\r\n                    onOk: () => {\r\n                      deteleSpareTime(spareTimeID);\r\n                    },\r\n                    okText: \"Confirm\",\r\n                  });\r\n                }}\r\n              >\r\n                <Button type=\"primary\" danger>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const listOptionCourse = listCourse?.map((item) => {\r\n    return item.typeName;\r\n  });\r\n\r\n  const listOptionSlot = listSlot?.map((item) => {\r\n    return item.name;\r\n  });\r\n\r\n  return (\r\n    <div className=\"col-lg-12 bg-transparent border-0\">\r\n      <TeacherSidebar />\r\n      <main>\r\n        {/* <Container> */}\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card shadow-sm mt-5\">\r\n            <div className=\"card-header bg-transparent border-0\">\r\n              <h3 className=\"mb-0\">\r\n                <i className=\"far fa-clone pr-1\">Spare Time Management</i>\r\n              </h3>\r\n            </div>\r\n            <div className=\"mb-3 col-lg-12\">\r\n              <Button\r\n                className=\"float-right\"\r\n                type=\"primary\"\r\n                onClick={() => setVisibleModalCreate(true)}\r\n              >\r\n                + Add New\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"card-body pt-0\">\r\n              <Table\r\n                className=\"table-custom\"\r\n                bordered={true}\r\n                // @ts-ignore\r\n                dataSource={listSpareTime}\r\n                // loading={loading}\r\n                // @ts-ignore\r\n                rowKey={spareTimeID}\r\n                columns={columns}\r\n                // pagination={false}\r\n                pagination={{\r\n                  position: [\"bottomCenter\"],\r\n                  current: pageNumber,\r\n                  total: totalRowCount,\r\n                  pageSize: pageSize,\r\n                  onChange: (page: number) => setPageNumber(page),\r\n                  showSizeChanger: false,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </Container> */}\r\n      </main>\r\n      <footer></footer>\r\n\r\n      <Modal\r\n        visible={visibleModalCreate}\r\n        onCancel={() => {}}\r\n        destroyOnClose={true}\r\n        closable={false}\r\n        maskClosable={false}\r\n        title={null}\r\n        footer={null}\r\n        width={800}\r\n        bodyStyle={{ padding: 16, paddingLeft: 24, paddingRight: 24 }}\r\n      >\r\n        <Row\r\n          justify=\"space-between\"\r\n          className=\"border-black-8 border-b pb-2 mb-4\"\r\n        >\r\n          <Col>\r\n            <h3>{isEdit ? 'Edit' : 'Create'} Teacher Spare Time</h3>\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={4}>Course Type</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                // mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={selectedCourse}\r\n                onChange={handleChangeSelectCourse}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listOptionCourse.map((item, index) => {\r\n                  return (\r\n                    <Option value={item} key={index}>\r\n                      {item}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>Slot</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={selectedSlot}\r\n                onChange={handleChangeSelectSlot}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listOptionSlot.map((item, index) => {\r\n                  return (\r\n                    <Option value={item} key={index}>\r\n                      {item}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" gutter={[12, 0]}>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                className=\"px-12\"\r\n                onClick={() => {\r\n                  setVisibleModalCreate(false);\r\n                  getListTeacherSpareTime();\r\n                  setIsEdit(false);\r\n                  setIdEdit(0);\r\n                  setSelectedCourse(\"\");\r\n                  setSelectedSlot([]);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"px-12\"\r\n                disabled={\r\n                  selectedSlot.length === 0 || selectedCourse.length === 0\r\n                }\r\n                onClick={() => saveForm()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visibleModalApprove}\r\n        onCancel={() => setVisibleModalApprove(false)}\r\n        closable={false}\r\n        maskClosable={false}\r\n        title={null}\r\n        footer={null}\r\n        width={800}\r\n        bodyStyle={{ padding: 16, paddingLeft: 24, paddingRight: 24 }}\r\n      >\r\n        <Row\r\n          justify=\"space-between\"\r\n          className=\"border-black-8 border-b pb-2 mb-4\"\r\n        >\r\n          <Col>\r\n            <h3>Approve Spare Time</h3>\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={4}>Course Type</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={courseValueForClass}\r\n                onChange={(value) => setCourseValueForClass(value)}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listCourseForClass &&\r\n                  listCourseForClass.map((item: any) => {\r\n                    return (\r\n                      <Option value={item.courseName} key={item.courseID}>\r\n                        {item.courseName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>Slot</Col>\r\n            <Col span={20}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select\"\r\n                value={slotValueForClass}\r\n                onChange={(value) => {\r\n                  setSlotValueForClass(value);\r\n                }}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                {listSlotForClass &&\r\n                  listSlotForClass.map((item: any) => {\r\n                    return (\r\n                      <Option value={item.slotName} key={item.slotID}>\r\n                        {item.slotName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\" gutter={[12, 0]}>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                className=\"px-12\"\r\n                onClick={() => setVisibleModalApprove(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"mt-4\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"px-12\"\r\n                disabled={!courseValueForClass || !slotValueForClass}\r\n                onClick={() => approveClass()}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ClassAPI.tsx",["479"],"// Import package members section:\r\nimport axios, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\r\nimport { DataPage } from \"../../App\";\r\nimport { LoggedInUser } from \"../../model/LoggedInUser\";\r\nimport { SpareTime } from \"../../model/SpareTime\";\r\nimport { AxiosInstanceGet } from \"./AxiosInstanceGet\";\r\nimport { ErrorHandle } from \"./ErrorHandle\";\r\nimport { TypeGuard } from \"./TypeGuard\";\r\n\r\nexport class ClassAPI {\r\n  // Variables declaration:\r\n  private serverResponse: AxiosResponse<unknown> | undefined;\r\n  private axiosInstance: AxiosInstance;\r\n  private axiosInstanceGetter: AxiosInstanceGet | undefined;\r\n  private typeGuardian: TypeGuard;\r\n  private loggedInUser: LoggedInUser | undefined;\r\n  private axiosError: AxiosError<unknown> | undefined;\r\n  private errorHandler: ErrorHandle;\r\n  private requestParameterHolder: URLSearchParams | undefined;\r\n  private spareTimeHolder: SpareTime[] | undefined;\r\n  private spareTimeDataPage: DataPage<SpareTime> | undefined;\r\n\r\n  public constructor() {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    this.errorHandler = new ErrorHandle();\r\n    this.typeGuardian = new TypeGuard();\r\n  }\r\n\r\n  public async getListClass(\r\n    pageNumber: number,\r\n    pageSize: number,\r\n    searchParam?: string,\r\n    userID?: number,\r\n    role?: string\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    this.requestParameterHolder.set(\"pageNumber\", pageNumber.toString());\r\n    this.requestParameterHolder.set(\"pageSize\", pageSize.toString());\r\n    if (searchParam) {\r\n      this.requestParameterHolder.set(\"searchParam\", searchParam);\r\n    }\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        \"/class-sessions\",\r\n        { params: { pageNumber, pageSize, searchParam, userID, role } }\r\n      );\r\n      if (serverResponse?.data) {\r\n        if (serverResponse?.data)\r\n          console.log(\"serverResponse?.data\", serverResponse?.data);\r\n\r\n        return Promise.resolve<any>(serverResponse?.data);\r\n      } else {\r\n        // throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async cancelClass(classSessionID: number): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.patch(\r\n        `/class-sessions/${classSessionID}:cancel`\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n\r\n  public async deleteClass(classSessionID: number): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.delete(\r\n        `/class-sessions/${classSessionID}`\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n\r\n  public async getAllOFClass(\r\n    pageIndex: number,\r\n    pageSize: number,\r\n    classID: number\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    this.requestParameterHolder.set(\"pageIndex\", pageIndex.toString());\r\n    this.requestParameterHolder.set(\"pageSize\", pageSize.toString());\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        `/classes/${classID}/students`,\r\n        { params: { pageIndex, pageSize } }\r\n      );\r\n      if (serverResponse?.data) {\r\n        if (serverResponse?.data)\r\n          console.log(\"serverResponse?.data\", serverResponse?.data);\r\n\r\n        return Promise.resolve<any>(serverResponse?.data);\r\n      } else {\r\n        // throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n  public async createComment(\r\n    classID: number,\r\n    userID: number,\r\n    content: string\r\n  ): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.post(`/comments`, {\r\n        classID,\r\n        userID,\r\n        content,\r\n      });\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TeacherSpareTimeAPI.tsx",["480"],"// Import package members section:\r\nimport axios, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\r\nimport { DataPage } from \"../../App\";\r\nimport { LoggedInUser } from \"../../model/LoggedInUser\";\r\nimport { SpareTime } from \"../../model/SpareTime\";\r\nimport { AxiosInstanceGet } from \"./AxiosInstanceGet\";\r\nimport { ErrorHandle } from \"./ErrorHandle\";\r\nimport { TypeGuard } from \"./TypeGuard\";\r\n\r\nexport class TeacherSpareTimeAPI {\r\n  // Variables declaration:\r\n  private serverResponse: AxiosResponse<unknown> | undefined;\r\n  private axiosInstance: AxiosInstance;\r\n  private axiosInstanceGetter: AxiosInstanceGet | undefined;\r\n  private typeGuardian: TypeGuard;\r\n  private loggedInUser: LoggedInUser | undefined;\r\n  private axiosError: AxiosError<unknown> | undefined;\r\n  private errorHandler: ErrorHandle;\r\n  private requestParameterHolder: URLSearchParams | undefined;\r\n  private spareTimeHolder: SpareTime[] | undefined;\r\n  private spareTimeDataPage: DataPage<SpareTime> | undefined;\r\n\r\n  public constructor() {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    this.errorHandler = new ErrorHandle();\r\n    this.typeGuardian = new TypeGuard();\r\n  }\r\n\r\n  public async getListTeacherSpareTime(\r\n    pageNumber: number,\r\n    pageSize: number,\r\n    searchParam?: string,\r\n    teacherId?: number,\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    this.requestParameterHolder.set(\"pageNumber\", pageNumber.toString());\r\n    this.requestParameterHolder.set(\"pageSize\", pageSize.toString());\r\n    if(searchParam) {\r\n      this.requestParameterHolder.set(\"searchParam\", searchParam);\r\n    }\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        \"/spare-time-registers\",\r\n        { params: { pageNumber, pageSize, teacherId } }\r\n      );\r\n      if (this.typeGuardian.isDataPage<SpareTime>(serverResponse?.data)) {\r\n        this.spareTimeDataPage = serverResponse?.data;\r\n        if (this.spareTimeDataPage)\r\n          return Promise.resolve<DataPage<SpareTime>>(this.spareTimeDataPage);\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async deleteSpareTime(spareTimeID: number): Promise<void> {\r\n    try {\r\n      await this.axiosInstance.delete<undefined>(\r\n        `/spare-time-registers/${spareTimeID}`\r\n      );\r\n      return Promise.resolve<undefined>(undefined);\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async createSpareTime(\r\n    courseTypeId : any,\r\n    listSlotId: any[]\r\n  ): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.post(\r\n        \"/spare-time-registers\",\r\n        { courseTypeId, listSlotId }\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n\r\n  public async editSpareTime(\r\n    spareTimeRegisterId: number,\r\n    courseTypeId: any,\r\n    listSlotId: any[]\r\n  ): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.put(\r\n        \"/spare-time-registers\",\r\n        {spareTimeRegisterId, courseTypeId, listSlotId }\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n\r\n  public async rejectSpareTime(\r\n    spareTimeID: number\r\n  ): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.patch(\r\n        `/spare-time-registers/${spareTimeID}:reject`,\r\n\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n\r\n  public async getListCourseForClass(\r\n    pageIndex: number,\r\n    pageSize: number,\r\n    spareTimeId: number\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    this.requestParameterHolder.set(\"pageIndex\", pageIndex.toString());\r\n    this.requestParameterHolder.set(\"pageSize\", pageSize.toString());\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        \"/courses-for-create-class\",\r\n        { params: { pageIndex, pageSize, spareTimeId } }\r\n      );\r\n      if (this.typeGuardian.isDataPage<any>(serverResponse?.data)) {\r\n        this.spareTimeDataPage = serverResponse?.data;\r\n        if (this.spareTimeDataPage)\r\n          return Promise.resolve<DataPage<any>>(this.spareTimeDataPage);\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getListSlotForClass(\r\n    spareTimeId: number\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        \"/slots-for-create-class\",\r\n        { params: { spareTimeId } }\r\n      );\r\n\r\n      if (serverResponse?.data) {\r\n        if (serverResponse?.data)\r\n          return Promise.resolve<any>(serverResponse?.data);\r\n      } else {\r\n        // throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      // try {\r\n      //   this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n      //   // return Promise.reject(this.axiosError);\r\n      // } catch (apiError2: unknown) {\r\n      //   return Promise.reject(apiError2);\r\n      // }\r\n    }\r\n  }\r\n\r\n  public async approveClass(\r\n    slotID: any,\r\n    courseID: any,\r\n    spareTimeRegisterID: number\r\n  ): Promise<AxiosResponse> {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    try {\r\n      this.serverResponse = await this.axiosInstance.post(\r\n        \"/class-sessions\",\r\n        { slotID, courseID, spareTimeRegisterID }\r\n      );\r\n      this.typeGuardian = new TypeGuard();\r\n      if (this.typeGuardian.isAxiosResponse(this.serverResponse)) {\r\n        return this.serverResponse;\r\n      } else {\r\n        throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.toJSON());\r\n      return Promise.reject<AxiosResponse>(error);\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\Chart.tsx",["481"],"// Import package members section:\r\nimport axios, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\r\nimport { DataPage } from \"../../App\";\r\nimport { LoggedInUser } from \"../../model/LoggedInUser\";\r\nimport { SpareTime } from \"../../model/SpareTime\";\r\nimport { AxiosInstanceGet } from \"./AxiosInstanceGet\";\r\nimport { ErrorHandle } from \"./ErrorHandle\";\r\nimport { TypeGuard } from \"./TypeGuard\";\r\n\r\nexport class ChartAPI {\r\n  // Variables declaration:\r\n  private serverResponse: AxiosResponse<unknown> | undefined;\r\n  private axiosInstance: AxiosInstance;\r\n  private axiosInstanceGetter: AxiosInstanceGet | undefined;\r\n  private typeGuardian: TypeGuard;\r\n  private loggedInUser: LoggedInUser | undefined;\r\n  private axiosError: AxiosError<unknown> | undefined;\r\n  private errorHandler: ErrorHandle;\r\n  private requestParameterHolder: URLSearchParams | undefined;\r\n  private spareTimeHolder: SpareTime[] | undefined;\r\n  private spareTimeDataPage: DataPage<SpareTime> | undefined;\r\n\r\n  public constructor() {\r\n    this.axiosInstanceGetter = new AxiosInstanceGet();\r\n    this.axiosInstance = this.axiosInstanceGetter.getNewInstance();\r\n    this.errorHandler = new ErrorHandle();\r\n    this.typeGuardian = new TypeGuard();\r\n  }\r\n\r\n  public async getDataChart(\r\n    studentId?: number\r\n  ): Promise<any> {\r\n    this.requestParameterHolder = new URLSearchParams();\r\n    try {\r\n      const serverResponse = await this.axiosInstance.get<unknown>(\r\n        \"/examinations-score:forChart\",\r\n        { params: { studentId } }\r\n      );\r\n      console.log('serverResponse', serverResponse);\r\n      if (serverResponse?.data) {\r\n        if (serverResponse?.data)\r\n          console.log(\"serverResponse?.data\", serverResponse?.data);\r\n\r\n        return Promise.resolve<any>(serverResponse?.data);\r\n      } else {\r\n        // throw new Error(\"This server response is not valid !\");\r\n      }\r\n    } catch (apiError: unknown) {\r\n      try {\r\n        this.axiosError = await this.errorHandler.handleApiError(apiError);\r\n        return Promise.reject(this.axiosError);\r\n      } catch (apiError2: unknown) {\r\n        return Promise.reject(apiError2);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n",{"ruleId":"482","replacedBy":"483"},{"ruleId":"484","replacedBy":"485"},{"ruleId":"486","severity":1,"message":"487","line":54,"column":10,"nodeType":"488","messageId":"489","endLine":54,"endColumn":26},{"ruleId":"486","severity":1,"message":"490","line":62,"column":10,"nodeType":"488","messageId":"489","endLine":62,"endColumn":24},{"ruleId":"486","severity":1,"message":"491","line":64,"column":10,"nodeType":"488","messageId":"489","endLine":64,"endColumn":21},{"ruleId":"486","severity":1,"message":"492","line":70,"column":10,"nodeType":"488","messageId":"489","endLine":70,"endColumn":22},{"ruleId":"486","severity":1,"message":"493","line":6,"column":5,"nodeType":"488","messageId":"489","endLine":6,"endColumn":11},{"ruleId":"486","severity":1,"message":"494","line":6,"column":29,"nodeType":"488","messageId":"489","endLine":6,"endColumn":33},{"ruleId":"486","severity":1,"message":"495","line":6,"column":35,"nodeType":"488","messageId":"489","endLine":6,"endColumn":46},{"ruleId":"486","severity":1,"message":"496","line":6,"column":48,"nodeType":"488","messageId":"489","endLine":6,"endColumn":51},{"ruleId":"486","severity":1,"message":"497","line":6,"column":53,"nodeType":"488","messageId":"489","endLine":6,"endColumn":59},{"ruleId":"486","severity":1,"message":"498","line":9,"column":10,"nodeType":"488","messageId":"489","endLine":9,"endColumn":14},{"ruleId":"486","severity":1,"message":"499","line":10,"column":16,"nodeType":"488","messageId":"489","endLine":10,"endColumn":34},{"ruleId":"486","severity":1,"message":"500","line":67,"column":10,"nodeType":"488","messageId":"489","endLine":67,"endColumn":14},{"ruleId":"486","severity":1,"message":"501","line":67,"column":16,"nodeType":"488","messageId":"489","endLine":67,"endColumn":23},{"ruleId":"486","severity":1,"message":"502","line":68,"column":9,"nodeType":"488","messageId":"489","endLine":68,"endColumn":23},{"ruleId":"486","severity":1,"message":"503","line":69,"column":9,"nodeType":"488","messageId":"489","endLine":69,"endColumn":35},{"ruleId":"486","severity":1,"message":"504","line":71,"column":9,"nodeType":"488","messageId":"489","endLine":71,"endColumn":14},{"ruleId":"486","severity":1,"message":"505","line":73,"column":9,"nodeType":"488","messageId":"489","endLine":73,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":77,"column":19,"nodeType":"508","endLine":77,"endColumn":32},{"ruleId":"486","severity":1,"message":"509","line":18,"column":10,"nodeType":"488","messageId":"489","endLine":18,"endColumn":17},{"ruleId":"486","severity":1,"message":"510","line":18,"column":19,"nodeType":"488","messageId":"489","endLine":18,"endColumn":29},{"ruleId":"506","severity":1,"message":"507","line":21,"column":19,"nodeType":"508","endLine":21,"endColumn":32},{"ruleId":"486","severity":1,"message":"511","line":20,"column":10,"nodeType":"488","messageId":"489","endLine":20,"endColumn":24},{"ruleId":"506","severity":1,"message":"512","line":71,"column":11,"nodeType":"513","endLine":71,"endColumn":13,"suggestions":"514"},{"ruleId":"486","severity":1,"message":"511","line":104,"column":10,"nodeType":"488","messageId":"489","endLine":104,"endColumn":24},{"ruleId":"506","severity":1,"message":"515","line":37,"column":6,"nodeType":"513","endLine":37,"endColumn":8,"suggestions":"516"},{"ruleId":"517","severity":1,"message":"518","line":71,"column":40,"nodeType":"519","messageId":"520","endLine":71,"endColumn":41},{"ruleId":"517","severity":1,"message":"518","line":88,"column":40,"nodeType":"519","messageId":"520","endLine":88,"endColumn":41},{"ruleId":"486","severity":1,"message":"521","line":13,"column":16,"nodeType":"488","messageId":"489","endLine":13,"endColumn":27},{"ruleId":"486","severity":1,"message":"522","line":16,"column":10,"nodeType":"488","messageId":"489","endLine":16,"endColumn":16},{"ruleId":"486","severity":1,"message":"523","line":21,"column":11,"nodeType":"488","messageId":"489","endLine":21,"endColumn":36},{"ruleId":"486","severity":1,"message":"524","line":27,"column":8,"nodeType":"488","messageId":"489","endLine":27,"endColumn":14},{"ruleId":"486","severity":1,"message":"525","line":27,"column":16,"nodeType":"488","messageId":"489","endLine":27,"endColumn":25},{"ruleId":"486","severity":1,"message":"526","line":28,"column":8,"nodeType":"488","messageId":"489","endLine":28,"endColumn":18},{"ruleId":"486","severity":1,"message":"527","line":28,"column":20,"nodeType":"488","messageId":"489","endLine":28,"endColumn":33},{"ruleId":"486","severity":1,"message":"528","line":31,"column":7,"nodeType":"488","messageId":"489","endLine":31,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":57,"column":6,"nodeType":"513","endLine":57,"endColumn":8,"suggestions":"529"},{"ruleId":"506","severity":1,"message":"530","line":78,"column":6,"nodeType":"513","endLine":78,"endColumn":8,"suggestions":"531"},{"ruleId":"506","severity":1,"message":"532","line":27,"column":21,"nodeType":"508","endLine":27,"endColumn":36},{"ruleId":"506","severity":1,"message":"533","line":28,"column":21,"nodeType":"508","endLine":28,"endColumn":36},{"ruleId":"486","severity":1,"message":"534","line":3,"column":26,"nodeType":"488","messageId":"489","endLine":3,"endColumn":35},{"ruleId":"486","severity":1,"message":"535","line":3,"column":37,"nodeType":"488","messageId":"489","endLine":3,"endColumn":42},{"ruleId":"536","severity":1,"message":"537","line":21,"column":29,"nodeType":"538","endLine":21,"endColumn":389},{"ruleId":"506","severity":1,"message":"532","line":25,"column":21,"nodeType":"508","endLine":25,"endColumn":36},{"ruleId":"506","severity":1,"message":"533","line":26,"column":21,"nodeType":"508","endLine":26,"endColumn":36},{"ruleId":"486","severity":1,"message":"539","line":3,"column":38,"nodeType":"488","messageId":"489","endLine":3,"endColumn":43},{"ruleId":"506","severity":1,"message":"533","line":27,"column":21,"nodeType":"508","endLine":27,"endColumn":36},{"ruleId":"486","severity":1,"message":"540","line":4,"column":16,"nodeType":"488","messageId":"489","endLine":4,"endColumn":25},{"ruleId":"506","severity":1,"message":"507","line":36,"column":19,"nodeType":"508","endLine":36,"endColumn":32},{"ruleId":"486","severity":1,"message":"541","line":8,"column":10,"nodeType":"488","messageId":"489","endLine":8,"endColumn":21},{"ruleId":"486","severity":1,"message":"541","line":11,"column":10,"nodeType":"488","messageId":"489","endLine":11,"endColumn":21},{"ruleId":"486","severity":1,"message":"493","line":8,"column":5,"nodeType":"488","messageId":"489","endLine":8,"endColumn":11},{"ruleId":"486","severity":1,"message":"494","line":8,"column":29,"nodeType":"488","messageId":"489","endLine":8,"endColumn":33},{"ruleId":"486","severity":1,"message":"495","line":8,"column":35,"nodeType":"488","messageId":"489","endLine":8,"endColumn":46},{"ruleId":"486","severity":1,"message":"496","line":8,"column":48,"nodeType":"488","messageId":"489","endLine":8,"endColumn":51},{"ruleId":"486","severity":1,"message":"497","line":8,"column":53,"nodeType":"488","messageId":"489","endLine":8,"endColumn":59},{"ruleId":"486","severity":1,"message":"542","line":8,"column":66,"nodeType":"488","messageId":"489","endLine":8,"endColumn":71},{"ruleId":"486","severity":1,"message":"499","line":12,"column":16,"nodeType":"488","messageId":"489","endLine":12,"endColumn":34},{"ruleId":"486","severity":1,"message":"500","line":71,"column":10,"nodeType":"488","messageId":"489","endLine":71,"endColumn":14},{"ruleId":"486","severity":1,"message":"501","line":71,"column":16,"nodeType":"488","messageId":"489","endLine":71,"endColumn":23},{"ruleId":"486","severity":1,"message":"502","line":72,"column":9,"nodeType":"488","messageId":"489","endLine":72,"endColumn":23},{"ruleId":"486","severity":1,"message":"503","line":73,"column":9,"nodeType":"488","messageId":"489","endLine":73,"endColumn":35},{"ruleId":"486","severity":1,"message":"504","line":75,"column":9,"nodeType":"488","messageId":"489","endLine":75,"endColumn":14},{"ruleId":"486","severity":1,"message":"505","line":77,"column":9,"nodeType":"488","messageId":"489","endLine":77,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":81,"column":19,"nodeType":"508","endLine":81,"endColumn":32},{"ruleId":"486","severity":1,"message":"543","line":5,"column":18,"nodeType":"488","messageId":"489","endLine":5,"endColumn":27},{"ruleId":"486","severity":1,"message":"544","line":5,"column":42,"nodeType":"488","messageId":"489","endLine":5,"endColumn":45},{"ruleId":"486","severity":1,"message":"545","line":18,"column":10,"nodeType":"488","messageId":"489","endLine":18,"endColumn":17},{"ruleId":"486","severity":1,"message":"546","line":18,"column":19,"nodeType":"488","messageId":"489","endLine":18,"endColumn":29},{"ruleId":"506","severity":1,"message":"507","line":25,"column":19,"nodeType":"508","endLine":25,"endColumn":32},{"ruleId":"506","severity":1,"message":"515","line":42,"column":6,"nodeType":"513","endLine":42,"endColumn":8,"suggestions":"547"},{"ruleId":"517","severity":1,"message":"518","line":132,"column":46,"nodeType":"519","messageId":"520","endLine":132,"endColumn":47},{"ruleId":"517","severity":1,"message":"518","line":162,"column":46,"nodeType":"519","messageId":"520","endLine":162,"endColumn":47},{"ruleId":"517","severity":1,"message":"518","line":201,"column":38,"nodeType":"519","messageId":"520","endLine":201,"endColumn":39},{"ruleId":"517","severity":1,"message":"518","line":219,"column":46,"nodeType":"519","messageId":"520","endLine":219,"endColumn":47},{"ruleId":"486","severity":1,"message":"548","line":21,"column":5,"nodeType":"488","messageId":"489","endLine":21,"endColumn":15},{"ruleId":"486","severity":1,"message":"549","line":29,"column":25,"nodeType":"488","messageId":"489","endLine":29,"endColumn":41},{"ruleId":"486","severity":1,"message":"528","line":36,"column":9,"nodeType":"488","messageId":"489","endLine":36,"endColumn":19},{"ruleId":"506","severity":1,"message":"507","line":52,"column":19,"nodeType":"508","endLine":52,"endColumn":32},{"ruleId":"486","severity":1,"message":"540","line":6,"column":16,"nodeType":"488","messageId":"489","endLine":6,"endColumn":25},{"ruleId":"486","severity":1,"message":"550","line":2,"column":10,"nodeType":"488","messageId":"489","endLine":2,"endColumn":15},{"ruleId":"486","severity":1,"message":"498","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":14},{"ruleId":"486","severity":1,"message":"551","line":14,"column":20,"nodeType":"488","messageId":"489","endLine":14,"endColumn":31},{"ruleId":"506","severity":1,"message":"552","line":26,"column":6,"nodeType":"513","endLine":26,"endColumn":18,"suggestions":"553"},{"ruleId":"486","severity":1,"message":"554","line":2,"column":52,"nodeType":"488","messageId":"489","endLine":2,"endColumn":61},{"ruleId":"486","severity":1,"message":"555","line":7,"column":10,"nodeType":"488","messageId":"489","endLine":7,"endColumn":19},{"ruleId":"486","severity":1,"message":"551","line":35,"column":20,"nodeType":"488","messageId":"489","endLine":35,"endColumn":31},{"ruleId":"486","severity":1,"message":"556","line":37,"column":23,"nodeType":"488","messageId":"489","endLine":37,"endColumn":37},{"ruleId":"506","severity":1,"message":"557","line":100,"column":6,"nodeType":"513","endLine":100,"endColumn":18,"suggestions":"558"},{"ruleId":"506","severity":1,"message":"559","line":118,"column":6,"nodeType":"513","endLine":118,"endColumn":8,"suggestions":"560"},{"ruleId":"561","severity":1,"message":"562","line":168,"column":52,"nodeType":"563","messageId":"564","endLine":168,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":172,"column":56,"nodeType":"563","messageId":"564","endLine":172,"endColumn":58},{"ruleId":"486","severity":1,"message":"565","line":239,"column":9,"nodeType":"488","messageId":"489","endLine":239,"endColumn":24},{"ruleId":"486","severity":1,"message":"566","line":251,"column":9,"nodeType":"488","messageId":"489","endLine":251,"endColumn":22},{"ruleId":"486","severity":1,"message":"550","line":2,"column":10,"nodeType":"488","messageId":"489","endLine":2,"endColumn":15},{"ruleId":"486","severity":1,"message":"498","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":14},{"ruleId":"486","severity":1,"message":"551","line":14,"column":20,"nodeType":"488","messageId":"489","endLine":14,"endColumn":31},{"ruleId":"506","severity":1,"message":"552","line":21,"column":6,"nodeType":"513","endLine":21,"endColumn":18,"suggestions":"567"},{"ruleId":"486","severity":1,"message":"550","line":2,"column":10,"nodeType":"488","messageId":"489","endLine":2,"endColumn":15},{"ruleId":"486","severity":1,"message":"498","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":14},{"ruleId":"486","severity":1,"message":"551","line":14,"column":20,"nodeType":"488","messageId":"489","endLine":14,"endColumn":31},{"ruleId":"506","severity":1,"message":"552","line":22,"column":5,"nodeType":"513","endLine":22,"endColumn":17,"suggestions":"568"},{"ruleId":"486","severity":1,"message":"554","line":2,"column":52,"nodeType":"488","messageId":"489","endLine":2,"endColumn":61},{"ruleId":"486","severity":1,"message":"555","line":7,"column":10,"nodeType":"488","messageId":"489","endLine":7,"endColumn":19},{"ruleId":"486","severity":1,"message":"569","line":15,"column":3,"nodeType":"488","messageId":"489","endLine":15,"endColumn":8},{"ruleId":"486","severity":1,"message":"551","line":35,"column":20,"nodeType":"488","messageId":"489","endLine":35,"endColumn":31},{"ruleId":"486","severity":1,"message":"556","line":37,"column":23,"nodeType":"488","messageId":"489","endLine":37,"endColumn":37},{"ruleId":"486","severity":1,"message":"570","line":46,"column":10,"nodeType":"488","messageId":"489","endLine":46,"endColumn":21},{"ruleId":"486","severity":1,"message":"571","line":46,"column":23,"nodeType":"488","messageId":"489","endLine":46,"endColumn":37},{"ruleId":"506","severity":1,"message":"557","line":102,"column":6,"nodeType":"513","endLine":102,"endColumn":18,"suggestions":"572"},{"ruleId":"486","severity":1,"message":"573","line":112,"column":9,"nodeType":"488","messageId":"489","endLine":112,"endColumn":19},{"ruleId":"506","severity":1,"message":"559","line":118,"column":6,"nodeType":"513","endLine":118,"endColumn":8,"suggestions":"574"},{"ruleId":"486","severity":1,"message":"575","line":134,"column":9,"nodeType":"488","messageId":"489","endLine":134,"endColumn":24},{"ruleId":"486","severity":1,"message":"576","line":159,"column":9,"nodeType":"488","messageId":"489","endLine":159,"endColumn":25},{"ruleId":"561","severity":1,"message":"562","line":168,"column":52,"nodeType":"563","messageId":"564","endLine":168,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":172,"column":56,"nodeType":"563","messageId":"564","endLine":172,"endColumn":58},{"ruleId":"561","severity":1,"message":"562","line":198,"column":51,"nodeType":"563","messageId":"564","endLine":198,"endColumn":53},{"ruleId":"486","severity":1,"message":"577","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":13},{"ruleId":"486","severity":1,"message":"577","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":13},{"ruleId":"486","severity":1,"message":"577","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":13},"no-native-reassign",["578"],"no-negated-in-lhs",["579"],"@typescript-eslint/no-unused-vars","'ManageLessonPage' is defined but never used.","Identifier","unusedVar","'LessonListPage' is defined but never used.","'ProfilePage' is defined but never used.","'TakeExamPage' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Link' is defined but never used.","'UserIndexSignature' is defined but never used.","'user' is assigned a value but never used.","'getUser' is assigned a value but never used.","'userID' is defined but never used.","'showUser' is defined but never used.","'match' is assigned a value but never used.","'studentID' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'userAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'teacher' is assigned a value but never used.","'setTeacher' is assigned a value but never used.","'totalPageCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadStudentTable'. Either include it or remove the dependency array.","ArrayExpression",["580"],"React Hook useEffect has a missing dependency: 'getDataChart'. Either include it or remove the dependency array.",["581"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useLocation' is defined but never used.","'values' is defined but never used.","'StudentDashboardPageProps' is defined but never used.","'course' is assigned a value but never used.","'setCourse' is assigned a value but never used.","'courseList' is assigned a value but never used.","'setCourseList' is assigned a value but never used.","'param' is assigned a value but never used.",["582"],"React Hook useEffect has missing dependencies: 'courseAPI' and 'localStorageService'. Either include them or remove the dependency array.",["583"],"Assignments to the 'lessonAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'courseAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Jumbotron' is defined but never used.","'Media' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Image' is defined but never used.","'useParams' is defined but never used.","'textSpanEnd' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'student' is assigned a value but never used.","'setStudent' is assigned a value but never used.",["584"],"'Pagination' is defined but never used.","'setTotalRowCount' is assigned a value but never used.","'Class' is defined but never used.","'setPageSize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getListClass'. Either include it or remove the dependency array.",["585"],"'ReactNode' is defined but never used.","'SpareTime' is defined but never used.","'setSpareTimeID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getListTeacherSpareTime'. Either include it or remove the dependency array.",["586"],"React Hook useEffect has a missing dependency: 'getListCourse'. Either include it or remove the dependency array.",["587"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'deteleSpareTime' is assigned a value but never used.","'editSpareTime' is assigned a value but never used.",["588"],["589"],"'Input' is defined but never used.","'searchParam' is assigned a value but never used.","'setSearchParam' is assigned a value but never used.",["590"],"'searchName' is assigned a value but never used.",["591"],"'rejectSpareTime' is assigned a value but never used.","'approveSpareTime' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"594","fix":"596"},{"desc":"597","fix":"598"},{"desc":"594","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"600","fix":"606"},{"desc":"600","fix":"607"},{"desc":"602","fix":"608"},{"desc":"604","fix":"609"},"Update the dependencies array to be: [loadStudentTable]",{"range":"610","text":"611"},"Update the dependencies array to be: [getDataChart]",{"range":"612","text":"613"},{"range":"614","text":"613"},"Update the dependencies array to be: [courseAPI, localStorageService]",{"range":"615","text":"616"},{"range":"617","text":"613"},"Update the dependencies array to be: [getListClass, pageNumber]",{"range":"618","text":"619"},"Update the dependencies array to be: [getListTeacherSpareTime, pageNumber]",{"range":"620","text":"621"},"Update the dependencies array to be: [getListCourse]",{"range":"622","text":"623"},{"range":"624","text":"619"},{"range":"625","text":"619"},{"range":"626","text":"621"},{"range":"627","text":"623"},[2593,2595],"[loadStudentTable]",[956,958],"[getDataChart]",[1649,1651],[2181,2183],"[courseAPI, localStorageService]",[884,886],[1124,1136],"[getListClass, pageNumber]",[2862,2874],"[getListTeacherSpareTime, pageNumber]",[3307,3309],"[getListCourse]",[820,832],[847,859],[2972,2984],[3400,3402]]