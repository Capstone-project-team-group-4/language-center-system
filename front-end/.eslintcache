[{"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\index.tsx":"1","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\App.tsx":"3","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\LoggedInUser.tsx":"4","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\ViewProfilePage.tsx":"5","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditTeacherInfo.tsx":"6","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\DisableOrDeleteAccountPage.tsx":"7","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\CreateAccountPage.tsx":"8","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentPage.tsx":"9","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInCoursePage.tsx":"10","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageCoursePage.tsx":"11","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageLessonPage.tsx":"12","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentInCoursePage.tsx":"13","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\home_page\\HomePage.tsx":"14","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInExaminationPage.tsx":"15","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExaminationInCoursePage.tsx":"16","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\select_role_page\\SelectRolePage.tsx":"17","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherDashboardPage.tsx":"18","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\log_in_page\\LogInPage.tsx":"19","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentDashboardPage.tsx":"20","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExamQuestionInExaminationPage.tsx":"21","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonDetailPage.tsx":"22","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\sign_up_page\\SignUpPage.tsx":"23","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\contact_us_page\\ContactPage.tsx":"24","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonListlPage.tsx":"25","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\CourseDetailPage.tsx":"26","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\ManageExamQuestionPage.tsx":"27","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ProfilePage.tsx":"28","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ProtectedRoute.tsx":"29","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\Header.tsx":"30","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ModalDialog.tsx":"31","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PageHeader.tsx":"32","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\HomePageHeader.tsx":"33","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\PersistedStateHook.tsx":"34","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeGuard.tsx":"35","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LogOutAPI.tsx":"36","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeConvert.tsx":"37","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\DetailPage.tsx":"38","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditStudentInfo.tsx":"39","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminConsolePage.tsx":"40","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageTeacherPage.tsx":"41","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\User.tsx":"42","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RoleAPI.tsx":"43","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PagingSection.tsx":"44","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseAPI.tsx":"45","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RegisterFormAPI.tsx":"46","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseLevelAPI.tsx":"47","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseTypeAPI.tsx":"48","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Course.tsx":"49","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LocalStorageService.tsx":"50","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Quiz.tsx":"51","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\InputValidate.tsx":"52","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\QuestionOption.tsx":"53","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\QuizAPI.tsx":"54","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\MultipleChoiceQuestion.tsx":"55","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LessonAPI.tsx":"56","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationAPI.tsx":"57","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Lesson.tsx":"58","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\RegisterForm.tsx":"59","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\UserAPI.tsx":"60","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\student_sidebar\\StudentSidebar.tsx":"61","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\teacher_sidebar\\TeacherSidebar.tsx":"62","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx":"63","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ErrorHandle.tsx":"64","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Examination.tsx":"65","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseType.tsx":"66","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseLevel.tsx":"67"},{"size":664,"mtime":1614146355465,"results":"68","hashOfConfig":"69"},{"size":446,"mtime":1614146355508,"results":"70","hashOfConfig":"69"},{"size":16393,"mtime":1619339997261,"results":"71","hashOfConfig":"69"},{"size":543,"mtime":1614146355467,"results":"72","hashOfConfig":"69"},{"size":5807,"mtime":1619326752602,"results":"73","hashOfConfig":"69"},{"size":11771,"mtime":1618356940253,"results":"74","hashOfConfig":"69"},{"size":15630,"mtime":1619326752610,"results":"75","hashOfConfig":"69"},{"size":22456,"mtime":1619326752608,"results":"76","hashOfConfig":"69"},{"size":10092,"mtime":1619327396542,"results":"77","hashOfConfig":"69"},{"size":8956,"mtime":1619327396543,"results":"78","hashOfConfig":"69"},{"size":48247,"mtime":1619326752613,"results":"79","hashOfConfig":"69"},{"size":36622,"mtime":1619327396541,"results":"80","hashOfConfig":"69"},{"size":21207,"mtime":1619326752618,"results":"81","hashOfConfig":"69"},{"size":2923,"mtime":1619327396546,"results":"82","hashOfConfig":"69"},{"size":8289,"mtime":1619326752623,"results":"83","hashOfConfig":"69"},{"size":41641,"mtime":1619326752616,"results":"84","hashOfConfig":"69"},{"size":2885,"mtime":1619326752639,"results":"85","hashOfConfig":"69"},{"size":878,"mtime":1619326752659,"results":"86","hashOfConfig":"69"},{"size":10024,"mtime":1619327396547,"results":"87","hashOfConfig":"69"},{"size":5416,"mtime":1619327396552,"results":"88","hashOfConfig":"69"},{"size":35390,"mtime":1619326752614,"results":"89","hashOfConfig":"69"},{"size":4071,"mtime":1619327396549,"results":"90","hashOfConfig":"69"},{"size":16284,"mtime":1619326752648,"results":"91","hashOfConfig":"69"},{"size":1789,"mtime":1619327396545,"results":"92","hashOfConfig":"69"},{"size":3915,"mtime":1619327396550,"results":"93","hashOfConfig":"69"},{"size":3971,"mtime":1619327396548,"results":"94","hashOfConfig":"69"},{"size":62337,"mtime":1619326752654,"results":"95","hashOfConfig":"69"},{"size":21185,"mtime":1619327396551,"results":"96","hashOfConfig":"69"},{"size":5256,"mtime":1618356940071,"results":"97","hashOfConfig":"69"},{"size":2983,"mtime":1619327396528,"results":"98","hashOfConfig":"69"},{"size":3948,"mtime":1619327396526,"results":"99","hashOfConfig":"69"},{"size":2133,"mtime":1619327396527,"results":"100","hashOfConfig":"69"},{"size":5068,"mtime":1619327396529,"results":"101","hashOfConfig":"69"},{"size":956,"mtime":1619326752557,"results":"102","hashOfConfig":"69"},{"size":4557,"mtime":1619326752566,"results":"103","hashOfConfig":"69"},{"size":1278,"mtime":1618356940162,"results":"104","hashOfConfig":"69"},{"size":538,"mtime":1619326752565,"results":"105","hashOfConfig":"69"},{"size":7708,"mtime":1619339997265,"results":"106","hashOfConfig":"69"},{"size":10604,"mtime":1619342585367,"results":"107","hashOfConfig":"69"},{"size":9684,"mtime":1619339997273,"results":"108","hashOfConfig":"69"},{"size":23160,"mtime":1619339997275,"results":"109","hashOfConfig":"69"},{"size":2071,"mtime":1619335616926,"results":"110","hashOfConfig":"69"},{"size":1853,"mtime":1618356940176,"results":"111","hashOfConfig":"69"},{"size":4350,"mtime":1619326752541,"results":"112","hashOfConfig":"69"},{"size":8702,"mtime":1619326752552,"results":"113","hashOfConfig":"69"},{"size":4795,"mtime":1619326752560,"results":"114","hashOfConfig":"69"},{"size":2035,"mtime":1618356940134,"results":"115","hashOfConfig":"69"},{"size":1937,"mtime":1618356940139,"results":"116","hashOfConfig":"69"},{"size":1405,"mtime":1619326752576,"results":"117","hashOfConfig":"69"},{"size":302,"mtime":1619327396539,"results":"118","hashOfConfig":"69"},{"size":582,"mtime":1619326752596,"results":"119","hashOfConfig":"69"},{"size":2693,"mtime":1619326752555,"results":"120","hashOfConfig":"69"},{"size":1015,"mtime":1619326752591,"results":"121","hashOfConfig":"69"},{"size":7255,"mtime":1619326752559,"results":"122","hashOfConfig":"69"},{"size":1113,"mtime":1619326752587,"results":"123","hashOfConfig":"69"},{"size":6682,"mtime":1619327396538,"results":"124","hashOfConfig":"69"},{"size":7983,"mtime":1619326752553,"results":"125","hashOfConfig":"69"},{"size":1305,"mtime":1619326752583,"results":"126","hashOfConfig":"69"},{"size":1028,"mtime":1618356940244,"results":"127","hashOfConfig":"69"},{"size":19463,"mtime":1619339997263,"results":"128","hashOfConfig":"69"},{"size":5384,"mtime":1619327396537,"results":"129","hashOfConfig":"69"},{"size":1805,"mtime":1619326752550,"results":"130","hashOfConfig":"69"},{"size":553,"mtime":1614146355454,"results":"131","hashOfConfig":"69"},{"size":1882,"mtime":1619326681408,"results":"132","hashOfConfig":"69"},{"size":1246,"mtime":1619326752582,"results":"133","hashOfConfig":"69"},{"size":211,"mtime":1618356940216,"results":"134","hashOfConfig":"69"},{"size":381,"mtime":1618356940210,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1kndq42",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"138"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"138"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\index.tsx",[],["290","291"],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\App.tsx",["292"],"/* eslint-disable @typescript-eslint/no-array-constructor */\r\n// Import package members section:\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport { PageHeader } from './common/component/PageHeader';\r\nimport {\r\n  ModalDialog\r\n  , DialogControl\r\n} from './common/component/ModalDialog';\r\nimport {\r\n  HomePageHeader\r\n} from './common/component/home_page_header/HomePageHeader';\r\nimport {\r\n  ProtectedRoute\r\n  , SecurityContext\r\n} from './common/component/ProtectedRoute';\r\nimport { LogOutAPI } from './common/service/LogOutAPI';\r\nimport { TypeGuard } from './common/service/TypeGuard';\r\nimport { LoggedInUser } from './model/LoggedInUser';\r\nimport { AdminConsolePage } from './page/admin/AdminConsolePage';\r\nimport { CreateAccountPage } from './page/admin/CreateAccountPage';\r\nimport { HomePage } from './page/home_page/HomePage';\r\nimport { EditStudentInfo } from './page/EditStudentInfo';\r\nimport { LogInPage } from './page/log_in_page/LogInPage';\r\nimport { SelectRolePage } from './page/select_role_page/SelectRolePage';\r\nimport { SignUpPage } from './page/sign_up_page/SignUpPage';\r\nimport { History } from '../node_modules/@types/history';\r\nimport {\r\n  DisableOrDeleteAccountPage\r\n} from './page/admin/DisableOrDeleteAccountPage';\r\nimport { ManageCoursePage } from './page/admin/ManageCoursePage';\r\nimport {\r\n  ManageStudentInCoursePage\r\n} from './page/admin/ManageStudentInCoursePage';\r\nimport { ManageStudentPage } from './page/admin/ManageStudentPage';\r\nimport { TeacherDashboardPage } from './page/teacher/TeacherDashboardPage';\r\nimport { StudentDashboardPage } from './page/student/StudentDashboardPage';\r\nimport { EditTeacherInfo } from './page/EditTeacherInfo';\r\nimport { ViewProfilePage } from './page/ViewProfilePage';\r\nimport { DetailPage } from './page/DetailPage';\r\nimport { LessonDetailPage } from './page/student/LessonDetailPage';\r\nimport { ManageExamQuestionPage } from './page/teacher/ManageExamQuestionPage';\r\nimport { \r\n  ManageThingsInCoursePage \r\n} from './page/admin/ManageThingsInCoursePage';\r\nimport { \r\n  ManageExaminationInCoursePage \r\n} from './page/admin/ManageExaminationInCoursePage';\r\nimport { ManageLessonPage } from './page/admin/ManageLessonPage';\r\nimport { TypeConvert } from './common/service/TypeConvert';\r\nimport { \r\n  ManageThingsInExaminationPage \r\n} from './page/admin/ManageThingsInExaminationPage';\r\nimport { \r\n  ManageExamQuestionInExaminationPage \r\n} from './page/admin/ManageExamQuestionInExaminationPage';\r\nimport { DetailPages } from './page/DetailPages';\r\nimport { LessonListPage } from './page/student/LessonListlPage';\r\nimport { CourseDetailPage } from './page/student/CourseDetailPage';\r\nimport { ProfilePage } from './page/student/ProfilePage';\r\nimport { ManageTeacherPage } from './page/admin/ManageTeacherPage';\r\nimport { ContactUs } from './page/contact_us_page/ContactPage';\r\nimport { Header } from './common/component/home_page_header/Header';\r\nimport { useSessionState } from './common/service/PersistedStateHook';\r\n\r\nexport interface DataPage<T> {\r\n  totalRowCount: number;\r\n  pageDataHolder: T[];\r\n}\r\n\r\nexport function App(): ReactElement {\r\n\r\n  // Variables declaration:\r\n  let [showDialog, setShowDialog] = useState<boolean> (false);\r\n  let [dialogTitle, setDialogTitle] = useState<string> (\"\");\r\n  let [dialogBody, setDialogBody] = useState<string> (\"\");\r\n  let [dialogType, setDialogType] = useState<string> (\"\");\r\n  let modalDialog: ReactElement | undefined;\r\n  let [isAuthenticated, setIsAuthenticated] \r\n    = useSessionState<boolean> (\"isAuthenticated\", false);\r\n  let [loggedInUser, setLoggedInUser] = useSessionState<LoggedInUser> (\r\n    \"loggedInUser\"\r\n    , new LoggedInUser ()\r\n  );\r\n  let dialogController: DialogControl | undefined;\r\n  let acceptableRoleNameHolder: string[] | undefined;\r\n  let adminPageSecurity: SecurityContext | undefined;\r\n  let selectRolePageSecurity: SecurityContext | undefined;\r\n  let teacherPageSecurity: SecurityContext | undefined;  \r\n  let studentPageSecurity: SecurityContext | undefined;\r\n  let history: History<unknown>;\r\n  let [dialogIsConfirmed, setDialogIsConfirmed] = useState<boolean> (false);\r\n  let [typeGuardian] = useState<TypeGuard> (new TypeGuard ());\r\n  let [typeConverter] = useState<TypeConvert> (new TypeConvert ());\r\n\r\n  let [logOutAPI] = useState<LogOutAPI> (new LogOutAPI ());\r\n  history = useHistory ();\r\n\r\n  function handleCloseDialog (): void {\r\n    setShowDialog(false);\r\n  }\r\n\r\n  function handleConfirmDialog (): void {\r\n    setDialogIsConfirmed(true);\r\n    setShowDialog(false);\r\n  }\r\n\r\n  modalDialog =\r\n    <ModalDialog\r\n      showDialog = {showDialog}\r\n      dialogTitle = {dialogTitle}\r\n      dialogBody = {dialogBody}\r\n      dialogType = {dialogType}\r\n      handleCloseDialog = {handleCloseDialog}\r\n      handleConfirmDialog = {handleConfirmDialog}\r\n    />;\r\n  dialogController = new DialogControl (\r\n    setShowDialog\r\n    , setDialogTitle\r\n    , setDialogBody\r\n    , setDialogType\r\n    , setDialogIsConfirmed\r\n    , dialogIsConfirmed\r\n  );\r\n  acceptableRoleNameHolder = new Array (\"ROLE_ADMIN\");\r\n  adminPageSecurity = new SecurityContext (\r\n    isAuthenticated\r\n    , loggedInUser\r\n    , acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array (\"ROLE_TEACHER\");\r\n  teacherPageSecurity = new SecurityContext (\r\n    isAuthenticated\r\n    , loggedInUser\r\n    , acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array(\"ROLE_STUDENT\");\r\n  studentPageSecurity = new SecurityContext(\r\n    isAuthenticated\r\n    , loggedInUser\r\n    , acceptableRoleNameHolder\r\n  );\r\n  acceptableRoleNameHolder = new Array (\r\n    \"ROLE_ADMIN\"\r\n    , \"ROLE_TEACHER\"\r\n    , \"ROLE_STUDENT\"\r\n  );\r\n  selectRolePageSecurity = new SecurityContext (\r\n    isAuthenticated\r\n    , loggedInUser\r\n    , acceptableRoleNameHolder\r\n  );\r\n\r\n  async function logOut(): Promise<void> {\r\n    try {\r\n      await logOutAPI.logOut();\r\n      history.push(\"/\");\r\n      setIsAuthenticated(false);\r\n      setLoggedInUser(new LoggedInUser());\r\n    }\r\n    catch (apiError: unknown){\r\n      if (typeGuardian.isAxiosError(apiError)){\r\n        if (typeof apiError.code === \"string\"){\r\n          setDialogTitle (\r\n            `${apiError.code}: ${apiError.name}`\r\n          );\r\n        }\r\n        else {\r\n          setDialogTitle (apiError.name);\r\n        }\r\n        setDialogBody (apiError.message);\r\n        setDialogType (\"error\");\r\n        setShowDialog (true);\r\n      }\r\n      else {\r\n        throw new Error (\"This api error is not valid !\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path = \"/admin-console/editStudentInfo/:studentID\">\r\n        <EditStudentInfo />\r\n      </Route>\r\n      <Route exact = {true} path = \"/\">\r\n        <HomePageHeader />\r\n        <HomePage modalDialog = {modalDialog} />\r\n      </Route>\r\n      <Route path = \"/admin-console/manage-teacher-page\">\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/manage-student-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageStudentPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <Route exact path=\"/editStudentInfo/studentID\">\r\n        <EditStudentInfo />\r\n      </Route>\r\n\r\n      <Route path=\"/admin-console/view-student-detail\">\r\n        <ViewProfilePage />\r\n      </Route>\r\n\r\n      {/* <Route path = \"/admin-console/manage-teacher-page\">\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage />\r\n      </Route> */}\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/manage-teacher-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut}/>\r\n        <ManageTeacherPage/>\r\n      </ProtectedRoute>\r\n\r\n      <Route path = \"/sign-up-page\">\r\n        <SignUpPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </Route>\r\n\r\n      <Route path = \"/log-in-page\">\r\n        <LogInPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          setIsAuthenticated = {setIsAuthenticated}\r\n          setLoggedInUser = {setLoggedInUser}\r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </Route>\r\n\r\n      <Route path=\"/contact-us\">\r\n        <Header />\r\n        <ContactUs\r\n          modalDialog = {modalDialog}\r\n        />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/managa-teacher-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <DisableOrDeleteAccountPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <Route exact path = \"/editTeacherInfo/:teacherID\">\r\n        <EditTeacherInfo />\r\n      </Route>\r\n\r\n      <Route path = \"/user_view\">\r\n        <ViewProfilePage />\r\n      </Route>\r\n\r\n      <Route path = \"/user_detail/:studentID\">\r\n        <DetailPage />\r\n      </Route>\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/create-account-request-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <CreateAccountPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path = \"/admin-console/disable-or-delete-account-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <DisableOrDeleteAccountPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = {\r\n          \"/admin-console/manage-things-in-course-page\"\r\n          + \"/courses/:courseID/students\"\r\n        }\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageStudentInCoursePage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path = {\r\n          \"/admin-console/manage-things-in-course-page\"\r\n          + \"/courses/:courseID/examinations\"\r\n        }\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageExaminationInCoursePage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n          typeConverter = {typeConverter}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = \"/admin-console/manage-things-in-course-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageThingsInCoursePage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path = {\r\n          \"/admin-console/manage-things-in-examination-page\"\r\n          + \"/examinations/:examID/exam-questions\"\r\n        }\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageExamQuestionInExaminationPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path = \"/admin-console/manage-things-in-examination-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageThingsInExaminationPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = \"/admin-console/manage-course-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageCoursePage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n          typeGuardian = {typeGuardian}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = \"/admin-console/manage-lesson-page\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <ManageLessonPage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog} \r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path = \"/admin-console\"\r\n        securityContext = {adminPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <AdminConsolePage modalDialog = {modalDialog} />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path=\"/select-role-page\"\r\n        securityContext = {selectRolePageSecurity}\r\n        dialogController={dialogController}\r\n      >\r\n        <SelectRolePage\r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n        />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute\r\n        path = \"/teacher-dashboard/manage-exam-question-page\"\r\n        securityContext = {teacherPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <ManageExamQuestionPage \r\n          dialogController = {dialogController}\r\n          modalDialog = {modalDialog}\r\n          typeGuardian = {typeGuardian} \r\n        />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path = \"/teacher-dashboard\"\r\n        securityContext = {teacherPageSecurity}\r\n        dialogController = {dialogController} \r\n      >\r\n        <PageHeader logOut = {logOut} />\r\n        <TeacherDashboardPage modalDialog = {modalDialog} />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute \r\n        path=\"/student-dashboard\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <StudentDashboardPage modalDialog={modalDialog} />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path=\"/student-dashboards/:courseID\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <LessonListPage modalDialog={modalDialog} />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path=\"/student-dashboardz/:courseName/:lessonID\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <LessonDetailPage modalDialog={modalDialog} />\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path=\"/student-dashboardx/profile/:userID\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <ProfilePage modalDialog={modalDialog}/>\r\n      </ProtectedRoute>\r\n      \r\n      <ProtectedRoute \r\n        path=\"/course-detail/:courseID\"\r\n        securityContext = {studentPageSecurity}\r\n        dialogController = {dialogController}\r\n      >\r\n        <PageHeader logOut={logOut} />\r\n        <CourseDetailPage modalDialog={modalDialog}/>\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\LoggedInUser.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\ViewProfilePage.tsx",["293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, {\r\n    ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, FormControl, Nav, Navbar, Row, Table\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\nimport './ViewProfilePage.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction renderUserTable (\r\n    user: User\r\n    , index: number\r\n): ReactElement {\r\n    return (\r\n        <tr key={user.userID}>\r\n            <td>\r\n                {index + 1}\r\n            </td>\r\n            <td>\r\n                {user.firstName}\r\n            </td>\r\n            <td>\r\n                {user.middleName}\r\n            </td>\r\n            <td>\r\n                {user.lastName}\r\n            </td>\r\n            <td>\r\n                {user.phoneNumber}\r\n            </td>\r\n            <td>\r\n                {user.dob}\r\n            </td>\r\n            <td>\r\n                {user.email}\r\n            </td>\r\n            <td>\r\n                {user.gender}\r\n            </td>\r\n            <td>\r\n                {user.job}\r\n            </td>\r\n            <td>\r\n                {user.selfDescription}\r\n            </td>\r\n            <td>\r\n                {user.accountStatus}\r\n            </td>\r\n            <td>\r\n                {user.dateCreated}\r\n            </td>\r\n            <td>\r\n                {user.lastLogin}\r\n            </td>\r\n            <td>\r\n                {user.lastModified}\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nexport function ViewProfilePage (): ReactElement {\r\n\r\n    let [user, getUser] = useState<User>(new User());\r\n    let userID: number;\r\n    let showUser: User | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let match = useRouteMatch();\r\n    let param: any = useParams();\r\n    let studentID: number;\r\n    let [student, setStudent] = useState<User[]>([]);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.viewStudent(param.studentID).then(\r\n            (res) => {\r\n                setStudent(res.data);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(param.studentID);\r\n\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <Row className=\"bg-white\">\r\n                        <Col>\r\n                            <Table responsive=\"md\" hover={true}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            #\r\n                                            </th>\r\n                                        <th>\r\n                                            First Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Middle Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Name\r\n                                            </th>\r\n                                        <th>\r\n                                            Phone Number\r\n                                            </th>\r\n                                        <th>\r\n                                            Date of birth\r\n                                            </th>\r\n                                        <th>\r\n                                            Email\r\n                                            </th>\r\n                                        <th>\r\n                                            Gender\r\n                                            </th>\r\n                                        <th>\r\n                                            Job\r\n                                            </th>\r\n                                        <th>\r\n                                            Description\r\n                                            </th>\r\n                                        <th>\r\n                                            Status\r\n                                            </th>\r\n                                        <th>\r\n                                            Date Created\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Login\r\n                                            </th>\r\n                                        <th>\r\n                                            Last Modifiled\r\n                                            </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {student.map(\r\n                                        (\r\n                                            user\r\n                                            , index\r\n                                        ) => renderUserTable(\r\n                                            user\r\n                                            , index\r\n                                        )\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditTeacherInfo.tsx",["307","308","309"],"import React, {\r\n    ChangeEvent, FormEvent, ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, Row\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\n\r\nexport function EditTeacherInfo (): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let param: any = useParams();\r\n    let [teacher, setTeacher] = useState<User>(new User());\r\n    \r\n    useEffect (() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayTeacher(param.teacherID).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n    );\r\n    }, []);\r\n\r\n    \r\n    function handleUserChange (\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ){\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateTeacher (event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(user, userID);\r\n        console.log(userID);\r\n    }\r\n \r\n    console.log(param.teacherID);\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <h1>{param.teacherID}</h1>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form\r\n                                noValidate={false}\r\n                                onSubmit={(event) => {\r\n                                    updateTeacher(event, param.teacherID);\r\n                                }}\r\n                            >\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        User Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"userName\"\r\n                                        id=\"userName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        value = {user.userName}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        First Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"firstName\"\r\n                                        id=\"firstName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        value={user.firstName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Middle Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"middleName\"\r\n                                        id=\"middleName\"\r\n                                        pattern=\"^[a-z0-9_-]{3,15}$\"\r\n                                        value={user.middleName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Last Name:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"lastName\"\r\n                                        id=\"lastName\"\r\n                                        pattern=\"^[a-z0-9_-]{1,15}$\"\r\n                                        value={user.lastName}\r\n                                        required={true}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Email:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        value={user.email}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        DOB:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Phone:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        value={user.phoneNumber}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Gender\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={false}\r\n                                        name=\"gender\"\r\n                                        id=\"gender\"\r\n                                        value={user.gender}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Password:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        autoFocus={false}\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Your new password\"\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Account Status\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        autoComplete=\"on\"\r\n                                        autoFocus={true}\r\n                                        name=\"accountStatus\"\r\n                                        id=\"accountStatus\"\r\n                                        value={user.accountStatus}\r\n                                        required={false}\r\n                                        spellCheck={false}\r\n                                        onChange={handleUserChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button\r\n                                    variant=\"success\"\r\n                                    type=\"submit\"\r\n                                    block = {true}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\DisableOrDeleteAccountPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\CreateAccountPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentPage.tsx",["310","311"],"/* eslint-disable max-len */\r\nimport React, { ReactElement, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataPage } from \"../../App\";\r\nimport { DialogControl } from \"../../common/component/ModalDialog\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User } from \"../../model/User\";\r\nimport './ManageStudentPage.css';\r\n\r\ninterface ManageStudentPageProps {\r\n    dialogController: DialogControl;\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ManageStudentPage (props: ManageStudentPageProps): ReactElement {\r\n    let userAPI: UserAPI = new UserAPI();\r\n    let typeGuardian: TypeGuard;\r\n    let studentDataPage: DataPage<User> | undefined;\r\n    let [totalPageCount, setTotalPageCount] = useState<number>(0);\r\n    let [studentHolder, setStudentHolder] = useState<User[]>([]);\r\n    let [pageIndex] = useState<number>(0);\r\n    let [pageSize] = useState<number>(10);\r\n    // useEffect(() => {\r\n    //     userAPI.listUsers().then(\r\n    //         (res) => {\r\n    //             setUser(res.data);\r\n    //         }\r\n    //     )\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         });\r\n    // }, []);\r\n\r\n    async function loadStudentTable (): Promise<void> {\r\n        try {\r\n            studentDataPage = await userAPI.getAllStudents(\r\n                pageIndex\r\n                , pageSize\r\n            );\r\n            setTotalPageCount(studentDataPage.totalRowCount);\r\n            setStudentHolder(studentDataPage.pageDataHolder);\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        (): void => {\r\n            loadStudentTable().catch(\r\n                (error: unknown) => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n        }\r\n        , []\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\" id=\"grid\">\r\n            <div className=\"text-center\">\r\n                <h1>Manage All Students</h1>\r\n                <hr />\r\n            </div>\r\n            <div className=\"row\">\r\n                {/* <div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\"> */}\r\n                    {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                        <span className=\r\n                            \"fa fa-plus mr-5\">\r\n                        </span>\r\n                                Thêm học viên\r\n                </button> */}\r\n                    <div className=\"row mt-15\" id=\"table-cover\">\r\n                        <div className=\r\n                            \"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <table className=\r\n                                \"table table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"text-center\">ID</th>\r\n                                        <th className=\"text-center\">\r\n                                            User Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            First Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Middle Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Last Name</th>\r\n                                        <th className=\"text-center\">\r\n                                            Email\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Phone\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Status\r\n                                                </th>\r\n                                        <th className=\"text-center\">\r\n                                            Actions\r\n                                                </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {/* <tr>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                className=\"form-control\" />\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"form-control\">\r\n                                                <option value=\"-1\">\r\n                                                    Tất Cả\r\n                                                        </option>\r\n                                                <option value=\"0\">\r\n                                                    Ẩn\r\n                                                        </option>\r\n                                                <option value=\"1\">\r\n                                                    Kích Hoạt\r\n                                                        </option>\r\n                                            </select>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr> */}\r\n                                    {studentHolder.map((item, index) => <tr key={index}>\r\n                                        <td>{item[\"userID\"]}</td>\r\n                                        <td>{item[\"userName\"]}</td>\r\n                                        <td>{item[\"firstName\"]}</td>\r\n                                        <td>{item[\"middleName\"]}</td>\r\n                                        <td>{item[\"lastName\"]}</td>\r\n                                        <td>{item[\"email\"]}</td>\r\n                                        <td>{item[\"phoneNumber\"]}</td>\r\n                                        <td className=\"text-center\">\r\n                                            <span\r\n                                                className=\"label label-success\">\r\n                                                {item[\"accountStatus\"]}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"text-center\" id=\"action\">\r\n                                            <Link to={`/user_detail/${item[\"userID\"]}`}>\r\n                                                <button type=\"button\"\r\n                                                    className=\"btn btn-primary\" id=\"btn_details\">\r\n                                                    <span className=\r\n                                                        \"fa fa-pencil mr-5\">\r\n                                                            Details\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Link>\r\n                                        &nbsp;\r\n                                            <Link to=\"/editStudentInfo/studentID\">\r\n                                                <button type=\"button\"\r\n                                                    className=\"btn btn-success\" id=\"btn_edit\">\r\n                                                    <span className=\r\n                                                        \"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                    </span>\r\n                                                </button>\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                    )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        // </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageLessonPage.tsx",["312"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {\r\n    ChangeEvent, FormEvent, MouseEvent,\r\n    ReactElement, useEffect, useState\r\n} from \"react\";\r\nimport { Breadcrumb, Button, Col, Container, Form, Modal, Row, Table }\r\n    from \"react-bootstrap\";\r\nimport { Lesson } from '../../model/Lesson';\r\nimport { LessonAPI } from '../../common/service/LessonAPI';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataPage } from \"../../App\";\r\nimport { DialogControl } from \"../../common/component/ModalDialog\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\n\r\nfunction renderLessonTable (\r\n    lesson: Lesson\r\n    , index: number\r\n    , openViewDetailsDialog: (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ) => void\r\n    , openEditLessonForm: (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ) => void\r\n    , handleDeleteLesson: (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ) => void\r\n): ReactElement {\r\n    return (\r\n        <tr key={lesson.lessonID}>\r\n            <td>\r\n                {index + 1}\r\n            </td>\r\n            <td>\r\n                {lesson.lessonName}\r\n            </td>\r\n            <td>\r\n                {lesson.type}\r\n            </td>\r\n            <td>\r\n                {lesson.duration}\r\n            </td>\r\n            <td>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                    value={lesson.lessonID}\r\n                    onClick={\r\n                        (event) => {\r\n                            openViewDetailsDialog(event);\r\n                        }\r\n                    }\r\n                >\r\n                    Details\r\n            </Button>\r\n            &nbsp;\r\n                <Button\r\n                    variant=\"success\"\r\n                    type=\"button\"\r\n                    value={lesson.lessonID}\r\n                    onClick={\r\n                        (event) => {\r\n                            openEditLessonForm(event);\r\n                        }\r\n                    }\r\n                >\r\n                    Edit\r\n            </Button>\r\n            &nbsp;\r\n                <Button\r\n                    variant=\"danger\"\r\n                    type=\"button\"\r\n                    value={lesson.lessonID}\r\n                    onClick={\r\n                        (event) => {\r\n                            handleDeleteLesson(event);\r\n                        }\r\n                    }\r\n                >\r\n                    Delete\r\n            </Button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\ninterface ManageLessonPageProps {\r\n    dialogController: DialogControl;\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ManageLessonPage (props: ManageLessonPageProps): ReactElement {\r\n    // Variables declaration:\r\n    let typeGuardian: TypeGuard;\r\n    let [showCreateLessonForm, setShowCreateLessonForm]\r\n        = useState<boolean>(false);\r\n    let htmlElement:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let [lesson, setLesson] = useState<Lesson>(new Lesson());\r\n    let updatedLesson: Lesson | undefined;\r\n    let lessonAPI: LessonAPI;\r\n    let i: number | undefined;\r\n    let [pageIndex] = useState<number>(0);\r\n    let [pageSize] = useState<number>(10);\r\n    let [totalPageCount, setTotalPageCount] = useState<number>(0);\r\n    let lessonDataPage: DataPage<Lesson> | undefined;\r\n    let [lessonHolder, setLessonHolder] = useState<Lesson[]>([]);\r\n    let [showViewDetailDialog, setShowViewDetailDialog]\r\n        = useState<boolean>(false);\r\n    let button: HTMLButtonElement | undefined;\r\n    let lessonID: number | undefined;\r\n    let lessonSample: Lesson | undefined;\r\n    let [formattedLastModified, setFormattedLastModified]\r\n        = useState<string>(\"\");\r\n    let rawDate: Date | undefined;\r\n    let [formattedDateCreated, setFormattedDateCreated]\r\n        = useState<string>(\"\");\r\n    let [pendingLessonID, setPendingLessonID] = useState<number>(0);\r\n    let [showEditLessonForm, setShowEditLessonForm]\r\n        = useState<boolean>(false);\r\n\r\n    lessonAPI = new LessonAPI();\r\n    typeGuardian = new TypeGuard();\r\n\r\n    function handleDeleteLesson (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ): void {\r\n        button = event.target as HTMLButtonElement;\r\n        setPendingLessonID(Number(button.value));\r\n        props.dialogController.setDialogTitle(\"Confirm Delete Lesson\");\r\n        props.dialogController.setDialogBody(\r\n            \"Are you sure you want to delete this lesson ?\"\r\n        );\r\n        props.dialogController.setDialogType(\"confirm\");\r\n        props.dialogController.setShowDialog(true);\r\n    }\r\n\r\n    async function executeLessonDeletion (): Promise<void> {\r\n        try {\r\n            await lessonAPI.deleteLesson(pendingLessonID);\r\n            loadLessonTable();\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    function openViewDetailDialog (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ): void {\r\n        button = event.target as HTMLButtonElement;\r\n        lessonID = Number(button.value);\r\n        for (i = 0; i < lessonHolder.length; i++) {\r\n            lessonSample = lessonHolder[i];\r\n            if (lessonSample.lessonID === lessonID) {\r\n                setLesson(lessonSample);\r\n                rawDate = new Date(lessonSample.lastModified);\r\n                if (rawDate.toString() === new Date(0).toString()) {\r\n                    setFormattedLastModified(\"Has not been modified yet !\");\r\n                }\r\n                else {\r\n                    setFormattedLastModified(rawDate.toLocaleString());\r\n                }\r\n                rawDate = new Date(lessonSample.dateCreated);\r\n                setFormattedDateCreated(rawDate.toLocaleString());\r\n                break;\r\n            }\r\n        }\r\n        setShowViewDetailDialog(true);\r\n    }\r\n\r\n    function closeViewDetailDialog (): void {\r\n        setShowViewDetailDialog(false);\r\n    }\r\n\r\n    function openCreateLessonForm (): void {\r\n        setLesson(new Lesson());\r\n        setShowCreateLessonForm(true);\r\n    }\r\n\r\n    function closeCreateLessonForm (): void {\r\n        setShowCreateLessonForm(false);\r\n    }\r\n\r\n    function openEditLessonForm (\r\n        event: MouseEvent<HTMLElement, globalThis.MouseEvent>\r\n    ): void {\r\n        button = event.target as HTMLButtonElement;\r\n        lessonID = Number(button.value);\r\n        for (i = 0; i < lessonHolder.length; i++) {\r\n            lessonSample = lessonHolder[i];\r\n            if (lessonSample.lessonID === lessonID) {\r\n                setLesson(lessonSample);\r\n                break;\r\n            }\r\n        }\r\n        setShowEditLessonForm(true);\r\n    }\r\n\r\n    function closeEditLessonForm (): void {\r\n        setShowEditLessonForm(false);\r\n    }\r\n\r\n    function handleChange (\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ): void {\r\n        updatedLesson = new Lesson(lesson);\r\n        htmlElement = event.target;\r\n        console.log(htmlElement.name);\r\n        switch (htmlElement.name) {\r\n            default:\r\n                throw new Error(\"Unknown html element !\");\r\n\r\n            case \"lessonNameField\":\r\n                updatedLesson.lessonName = htmlElement.value;\r\n                break;\r\n\r\n            case \"lessonTypeField\":\r\n                updatedLesson.type = htmlElement.value;\r\n                break;\r\n\r\n            case \"descriptionTextarea\":\r\n                updatedLesson.description = htmlElement.value;\r\n                break;\r\n\r\n            case \"durationField\":\r\n                updatedLesson.duration = Number(htmlElement.value);\r\n                break;\r\n        }\r\n        setLesson(updatedLesson);\r\n    }\r\n\r\n    async function createLesson (\r\n        event: FormEvent<HTMLFormElement>\r\n    ): Promise<void> {\r\n        event.preventDefault();\r\n        try {\r\n            await lessonAPI.createNewLesson(lesson);\r\n            closeCreateLessonForm();\r\n            props.dialogController.setDialogTitle(\"Lesson Created !\");\r\n            props.dialogController.setDialogBody(\r\n                `The lesson [${lesson.lessonName}] \r\n            has been created successfully.`\r\n            );\r\n            props.dialogController.setDialogType(\"inform\");\r\n            props.dialogController.setShowDialog(true);\r\n            loadLessonTable();\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    async function editLesson (\r\n        event: FormEvent<HTMLFormElement>\r\n    ): Promise<void> {\r\n        event.preventDefault();\r\n        try {\r\n            await lessonAPI.updateLesson(lesson);\r\n            closeEditLessonForm();\r\n            props.dialogController.setDialogTitle(\"Lesson Saved !\");\r\n            props.dialogController.setDialogBody(\r\n                `The lesson [${lesson.lessonName}] \r\n            has been saved successfully.`\r\n            );\r\n            props.dialogController.setDialogType(\"inform\");\r\n            props.dialogController.setShowDialog(true);\r\n            loadLessonTable();\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    async function loadLessonTable (): Promise<void> {\r\n        try {\r\n            lessonDataPage = await lessonAPI.getAllLesson(\r\n                pageIndex\r\n                , pageSize\r\n            );\r\n            setTotalPageCount(lessonDataPage.totalRowCount);\r\n            setLessonHolder(lessonDataPage.pageDataHolder);\r\n            return Promise.resolve<undefined>(undefined);\r\n        }\r\n        catch (apiError: unknown) {\r\n            if (typeGuardian.isAxiosError(apiError)) {\r\n                if (typeof apiError.code === \"string\") {\r\n                    props.dialogController.setDialogTitle(\r\n                        `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle(apiError.name);\r\n                }\r\n                props.dialogController.setDialogBody(apiError.message);\r\n                props.dialogController.setDialogType(\"error\");\r\n                props.dialogController.setShowDialog(true);\r\n            }\r\n            return Promise.reject(apiError);\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        (): void => {\r\n            loadLessonTable().catch(\r\n                (error: unknown) => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n        }\r\n        , []\r\n    );\r\n\r\n    useEffect(\r\n        (): void => {\r\n            if (props.dialogController.dialogIsConfirmed === true) {\r\n                executeLessonDeletion().catch(\r\n                    (error: unknown) => {\r\n                        console.error(error);\r\n                    }\r\n                );\r\n                props.dialogController.setDialogIsConfirmed(false);\r\n            }\r\n        }\r\n        , [props.dialogController.dialogIsConfirmed]\r\n    );\r\n\r\n    // Modals\r\n    return (\r\n        <Container fluid={true}>\r\n            {props.modalDialog}\r\n            <Modal\r\n                show={showCreateLessonForm}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>New Lesson Information</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        id=\"CreateLessonForm\"\r\n                        className=\"pt-2 pr-5 pl-5 pb-0\"\r\n                        onSubmit={\r\n                            (event) => {\r\n                                createLesson(event).catch(\r\n                                    (error: unknown) => {\r\n                                        console.error(error);\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                    >\r\n                        <Form.Group controlId=\"LessonNameField\">\r\n                            <Form.Label>\r\n                                Lesson Name:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"lessonNameField\"\r\n                                pattern=\"^[a-zA-Z0-9\\+]*$\"\r\n                                placeholder=\"Name for the new lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                value={lesson.lessonName}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: no special character !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"LessonTypeField\">\r\n                            <Form.Label>\r\n                                Lesson Type:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"lessonTypeField\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                placeholder=\"Type for the new lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                value={lesson.type}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: no special character !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"DescriptionTextarea\">\r\n                            <Form.Label>\r\n                                Description:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus={false}\r\n                                name=\"descriptionTextarea\"\r\n                                placeholder=\"Description for the new lesson ?\"\r\n                                required={false}\r\n                                spellCheck={true}\r\n                                rows={5}\r\n                                value={lesson.description}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"durationField\">\r\n                            <Form.Label>\r\n                                Duration (minutes) :\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"durationField\"\r\n                                placeholder=\"Duration of the new lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                min={0}\r\n                                step={1}\r\n                                value={lesson.duration}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: numbers only !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        type=\"submit\"\r\n                        form=\"CreateLessonForm\"\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button\r\n                        variant=\"outline-secondary\"\r\n                        onClick={closeCreateLessonForm}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={showViewDetailDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Lesson Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        id=\"viewLessonForm\"\r\n                        className=\"pt-2 pr-5 pl-5 pb-0\"\r\n                    >\r\n                        <Form.Row>\r\n                            <Form.Group as={Row} controlId=\"LessonIDInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={5}\r\n                                >\r\n                                    + Lesson ID:\r\n                                </Form.Label>\r\n                                <Col md={7}>\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={lesson.lessonID}\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Row} controlId=\"LessonNameInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={5}\r\n                                >\r\n                                    + Lesson Name:\r\n                                </Form.Label>\r\n                                <Col md={7}>\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={lesson.lessonName}\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Row} controlId=\"LessonTypeInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={5}\r\n                                >\r\n                                    + Lesson Type:\r\n                                </Form.Label>\r\n                                <Col md={7}>\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={lesson.type}\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"DescriptionInfo\">\r\n                            <Form.Label>\r\n                                + Description:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                readOnly={true}\r\n                                rows={5}\r\n                                value={lesson.description}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Row} controlId=\"DurationInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={6}\r\n                                >\r\n                                    + Duration (minutes):\r\n                            </Form.Label>\r\n                                <Col\r\n                                    md={4}\r\n                                >\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={\r\n                                            `${lesson.duration.toLocaleString()\r\n                                            }`\r\n                                        }\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Row}\r\n                                controlId=\"LastModifiedInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={5}\r\n                                >\r\n                                    + Last Modified:\r\n                            </Form.Label>\r\n                                <Col md={7}>\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={formattedLastModified}\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Row}\r\n                                controlId=\"DateCreatedInfo\">\r\n                                <Form.Label\r\n                                    column={true}\r\n                                    md={5}\r\n                                >\r\n                                    + Date Created:\r\n                            </Form.Label>\r\n                                <Col md={7}>\r\n                                    <Form.Control\r\n                                        plaintext={true}\r\n                                        readOnly={true}\r\n                                        value={formattedDateCreated}\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"info\"\r\n                        onClick={closeViewDetailDialog}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={showEditLessonForm}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Edit Lesson</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        id=\"EditLessonForm\"\r\n                        className=\"pt-2 pr-5 pl-5 pb-0\"\r\n                        onSubmit={\r\n                            (event) => {\r\n                                editLesson(event).catch(\r\n                                    (error: unknown) => {\r\n                                        console.error(error);\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                    >\r\n                        <Form.Group controlId=\"LessonNameField\">\r\n                            <Form.Label>\r\n                                Lesson Name:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"lessonNameField\"\r\n                                pattern=\"^[a-zA-Z0-9\\+]*$\"\r\n                                placeholder=\"Name for the lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                value={lesson.lessonName}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: no special character !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"LessonTypeField\">\r\n                            <Form.Label>\r\n                                Lesson Type:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"lessonTypeField\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                placeholder=\"Type for the lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                value={lesson.type}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: no special character !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"DescriptionTextarea\">\r\n                            <Form.Label>\r\n                                Description:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus={false}\r\n                                name=\"descriptionTextarea\"\r\n                                placeholder=\"Description for the lesson ?\"\r\n                                required={false}\r\n                                spellCheck={true}\r\n                                rows={5}\r\n                                value={lesson.description}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"DurationField\">\r\n                            <Form.Label>\r\n                                Duration (minutes):\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"durationField\"\r\n                                placeholder=\"Duration of the lesson ?\"\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                min={0}\r\n                                step={1}\r\n                                value={lesson.duration}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        handleChange(event);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                format: numbers only !\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        type=\"submit\"\r\n                        form=\"EditLessonForm\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button\r\n                        variant=\"outline-secondary\"\r\n                        onClick={closeEditLessonForm}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <main>\r\n                <Container>\r\n                    <Row className=\"bg-white\">\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{\r\n                                        to:\r\n                                        \"/admin-console/manage-course-function\"\r\n                                    }}\r\n                                >\r\n                                    Admin Console\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item \r\n                                    linkAs = {Link}\r\n                                    linkProps = {\r\n                                        {\r\n                                            to: \"/admin-console\"\r\n                                            + \"/manage-things-in-course-page\"\r\n                                        }\r\n                                    }\r\n                                >\r\n                                    Manage Things In Course\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active>\r\n                                    Manage Lesson In Course\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <h1 className=\"mb-3\">\r\n                                <span className=\"mr-3\">\r\n                                    Manage Lessons\r\n                                </span>\r\n                                <Button\r\n                                    variant=\"success\"\r\n                                    type=\"button\"\r\n                                    onClick={openCreateLessonForm}\r\n                                >\r\n                                    Create New\r\n                                </Button>\r\n                            </h1>\r\n                            <Form>\r\n                                <Table responsive=\"md\" hover={true}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>\r\n                                                #\r\n                                            </th>\r\n                                            <th>\r\n                                                Lesson Name\r\n                                            </th>\r\n                                            <th>\r\n                                                Lesson Type\r\n                                            </th>\r\n                                            <th>\r\n                                                Duration (minutes)\r\n                                            </th>\r\n                                            <th>\r\n                                                Actions\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {lessonHolder.map(\r\n                                            (\r\n                                                lesson\r\n                                                , index\r\n                                            ) => renderLessonTable(\r\n                                                lesson\r\n                                                , index\r\n                                                , openViewDetailDialog\r\n                                                , openEditLessonForm\r\n                                                , handleDeleteLesson\r\n                                            )\r\n                                        )}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageStudentInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\home_page\\HomePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageThingsInExaminationPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExaminationInCoursePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\select_role_page\\SelectRolePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\TeacherDashboardPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\log_in_page\\LogInPage.tsx",["313","314"],"// Import package members section:\r\nimport React, { \r\n    ChangeEvent\r\n    , Dispatch, FormEvent\r\n    , ReactElement\r\n    , SetStateAction, useState \r\n} from 'react';\r\nimport { \r\n    Button, Container, Form, Row\r\n} from 'react-bootstrap';\r\nimport './LogInPage.css';\r\nimport { TypeGuard } from '../../common/service/TypeGuard';\r\nimport { DialogControl } from '../../common/component/ModalDialog';\r\nimport { UserAPI } from '../../common/service/UserAPI';\r\nimport { LoggedInUser } from '../../model/LoggedInUser';\r\nimport { Location, History } from \"history\";\r\nimport { Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { LocationState } from '../../common/component/ProtectedRoute';\r\nimport { Role } from '../../model/Role';\r\nimport { StudentDashboardPage } from '../student/StudentDashboardPage';\r\nimport { LocalStorageService } from '../../common/service/LocalStorageService';\r\n\r\nclass LoginSucceededLocation implements Location<unknown> {\r\n    public pathname: string;\r\n    public search: string;\r\n    public state: unknown;\r\n    public hash: string;\r\n    public key?: string | undefined;\r\n\r\n    public constructor (){\r\n        this.pathname = \"\";\r\n        this.search = \"\";\r\n        this.hash = \"\";\r\n    }\r\n}\r\n\r\ninterface LogInPageProps {\r\n    dialogController: DialogControl;\r\n    modalDialog: ReactElement;\r\n    setIsAuthenticated: Dispatch<SetStateAction<boolean>>;\r\n    setLoggedInUser: Dispatch<SetStateAction<LoggedInUser>>; \r\n    typeGuardian: TypeGuard;\r\n}\r\n\r\nexport function LogInPage (props: LogInPageProps): ReactElement {\r\n\r\n    // Variables declaration:\r\n    let [userName, setUserName] = useState<string> (\"\");\r\n    let [password, setPassword] = useState<string> (\"\");\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let currentLocation: Location<unknown>;\r\n    let locationState: LocationState | undefined;\r\n    let previousLocation: Location<unknown> | undefined;\r\n    let loginSucceededLocation: LoginSucceededLocation | undefined;\r\n    let history: History<unknown>;\r\n    let roleHolder: Role[] | undefined;\r\n    let role: Role | undefined;\r\n    let roleName: string | undefined;\r\n    let loggedInUser: LoggedInUser | undefined;\r\n    let localStorageService = new LocalStorageService();\r\n\r\n    let [userAPI] = useState<UserAPI> (new UserAPI ());\r\n    currentLocation = useLocation ();\r\n    history = useHistory ();\r\n\r\n    function handleChange (\r\n            event: ChangeEvent<\r\n                HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n            >\r\n    ): void {\r\n        inputField = event.target;\r\n        if (inputField.name === \"userNameField\"){\r\n            setUserName (inputField.value);\r\n        }\r\n        else if (inputField.name === \"passwordField\"){\r\n            setPassword (inputField.value);\r\n        }\r\n    }\r\n\r\n    async function logIn (event: FormEvent<HTMLFormElement>): Promise<void> {\r\n        event.preventDefault ();\r\n        try {\r\n            loggedInUser = await userAPI.getCurrentLoggedInUser (\r\n                    userName\r\n                    , password\r\n            );\r\n            props.setIsAuthenticated (true); \r\n            props.setLoggedInUser (loggedInUser);      \r\n            if (currentLocation.state instanceof LocationState){\r\n                locationState = currentLocation.state;\r\n                previousLocation = locationState.from;\r\n                history.replace (previousLocation);\r\n            } \r\n            else {\r\n                roleHolder = loggedInUser.roleHolder;\r\n                loginSucceededLocation = new LoginSucceededLocation ();\r\n                if (roleHolder.length === 1){\r\n                    role = roleHolder[0];\r\n                    roleName = role.roleName;\r\n                    switch (roleName){\r\n                        default:\r\n                            throw new Error (\"Unknown role name !\");\r\n\r\n                        case \"ROLE_ADMIN\":\r\n                            loginSucceededLocation.pathname = \"/admin-console\";\r\n                            break;\r\n\r\n                        case \"ROLE_TEACHER\":\r\n                            loginSucceededLocation.pathname\r\n                                = \"/teacher-dashboard\";\r\n                            break;\r\n\r\n                        case \"ROLE_STUDENT\":\r\n                            loginSucceededLocation.pathname\r\n                                = \"/student-dashboard\";\r\n                            localStorageService.setLoggedUserName(loggedInUser);\r\n                            // localStorage.setItem('account', JSON.stringify(loggedInUser));\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    loginSucceededLocation.pathname = \"/select-role-page\";\r\n                }\r\n                history.replace (loginSucceededLocation);\r\n            }\r\n            return Promise.resolve<undefined> (undefined);\r\n        }\r\n        catch (apiError: unknown){\r\n            if (props.typeGuardian.isAxiosError (apiError)){\r\n                if (typeof apiError.code === \"string\"){\r\n                    props.dialogController.setDialogTitle (\r\n                            `${apiError.code}: ${apiError.name}`\r\n                    );\r\n                    props.dialogController.setDialogBody (apiError.message);\r\n                }\r\n                else {\r\n                    props.dialogController.setDialogTitle (apiError.name);\r\n                    props.dialogController.setDialogBody (apiError.message);\r\n                }\r\n                props.dialogController.setDialogType (\"error\");\r\n                props.dialogController.setShowDialog (true);\r\n            }\r\n            return Promise.reject (apiError);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container \r\n            fluid = {true} \r\n            className = \"vh-100\"\r\n        >   \r\n            {props.modalDialog}\r\n            <header>\r\n            </header>\r\n            <nav>\r\n            </nav>\r\n            <main className = \"h-100\">\r\n                <Container \r\n                    fluid = {true} \r\n                    className = \"h-100\"\r\n                >\r\n                    <Row className = {\r\n                        `h-100 \r\n                        justify-content-center \r\n                        align-items-center`\r\n                    }>\r\n                        <Form\r\n                            id=\"LogInForm\"\r\n                            className=\"bg-white p-5 h-auto\"\r\n                            style={{borderRadius:10 + 'px'}}\r\n                            onSubmit={\r\n                                (event) => {\r\n                                    logIn (event).catch (\r\n                                            (error: unknown) => {\r\n                                                console.error (error);\r\n                                            }\r\n                                    );\r\n                                }\r\n                            }\r\n                        >\r\n                            <Form.Group>\r\n                                <Form.Label>\r\n                                    User Name:\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type = \"text\"\r\n                                    autoComplete = \"off\"\r\n                                    autoFocus = {true}\r\n                                    name = \"userNameField\"\r\n                                    id = \"UserNameField\"\r\n                                    placeholder = \"Your user name\"\r\n                                    required = {true}\r\n                                    spellCheck = {false}\r\n                                    value = {userName}\r\n                                    onChange = {\r\n                                        (event) => {\r\n                                            handleChange (event);\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>\r\n                                    Password:\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type = \"password\"\r\n                                    autoComplete = \"off\"\r\n                                    autoFocus = {false}\r\n                                    name = \"passwordField\"\r\n                                    id = \"PasswordField\"\r\n                                    placeholder = \"Your password\"\r\n                                    required = {true}\r\n                                    spellCheck = {false}\r\n                                    value = {password}\r\n                                    onChange = {\r\n                                        (event) => {\r\n                                            handleChange (event);\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <Button\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n                                block={true}\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                            <div>\r\n                                <a \r\n                                    href=\"/sign-up-page\"\r\n                                    style={{fontSize:11 + 'px'}}\r\n                                >\r\n                                    Don't have an account?\r\n                                </a>\r\n                            </div>\r\n                        </Form>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\StudentDashboardPage.tsx",["315","316","317","318","319"],"// Import package members section:\r\nimport React, { ReactElement, useState, useEffect } from \"react\";\r\nimport { Col, Container, Row, Card, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {\r\n    StudentSidebar\r\n} from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { values } from \"lodash\";\r\nimport { LocalStorageService } from \"../../common/service/LocalStorageService\";\r\n\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n    // LoginUser: any;\r\n}\r\n\r\nexport function StudentDashboardPage(\r\n    props: any\r\n): ReactElement {\r\n    let [myCourseList, setMyCourseList] = useState<Course[]>([]);\r\n    let courseAPI = new CourseAPI();\r\n    let localStorageService = new LocalStorageService();\r\n\r\n    useEffect(() => {\r\n        const name = localStorageService.getLoggedUserName();\r\n        courseAPI.getAllCoursesByCurrentUser(name).then(\r\n            (res) => {\r\n                setMyCourseList(res.data);\r\n            }\r\n        )\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"StudentDashboardPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active={true}>\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Row>\r\n                                {myCourseList.map((course) => {\r\n                                    return (\r\n                                        <Col md={3}>\r\n                                            <Card className=\"mb-3\">\r\n                                                <Card.Body>\r\n                                                    <Card.Title>\r\n                                                        {course.courseName}\r\n                                                        {/* {i.name} */}\r\n                                                    </Card.Title>\r\n                                                    <Card.Text>\r\n                                                        {course.description}\r\n                                                        {/* {i.age} */}\r\n                                                    </Card.Text>\r\n                                                    <Row>\r\n                                                        <Col>\r\n                                                            <Button \r\n                                                                style={{alignItems: 'stretch', backgroundColor: 'blueviolet', borderColor: 'blueviolet'}}\r\n                                                                block = {true}\r\n                                                                size=\"sm\"\r\n                                                                as = {Link}\r\n                                                                to = {\r\n                                                                    \"/course-detail/\" + course.courseID\r\n                                                                }\r\n                                                            >\r\n                                                                Detail\r\n                                                            </Button>\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Button \r\n                                                                    as = {Link}\r\n                                                                    to = {\r\n                                                                        \"/student-dashboards/\" + course.courseID\r\n                                                                    }\r\n                                                                    style={{ alignItems: 'stretch' }} \r\n                                                                    size=\"sm\" \r\n                                                                    block\r\n                                                            >\r\n                                                                Learn\r\n                                                        </Button>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main >\r\n        </Container >\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageExamQuestionInExaminationPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonDetailPage.tsx",["320","321"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { LessonAPI } from \"../../common/service/LessonAPI\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { Lesson } from \"../../model/Lesson\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function LessonDetailPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let param: any = useParams();\r\n    let [lesson, setLesson] = useState<Lesson>(new Lesson());\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n    let lessonAPI: LessonAPI | undefined;\r\n    let courseAPI: CourseAPI | undefined;\r\n\r\n    useEffect(() => {\r\n        lessonAPI = new LessonAPI();\r\n        courseAPI = new CourseAPI();\r\n        lessonAPI.getOne(param.lessonID).then(\r\n            (res) => {\r\n                setLesson(res.data);\r\n                console.log(res);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n\r\n        courseAPI.getCourseByName(param.courseName).then(\r\n            (res) => {\r\n                console.log(\"data: \", res.data);\r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboards/\" + course.courseID }}>\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active={true}>\r\n                                    {lesson.lessonName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Row style={{backgroundColor: 'white', borderRadius:10 + 'px'}}>\r\n                                <Col sm={8}>\r\n                                    <ReactPlayer\r\n                                        controls\r\n                                        url={lesson.contentURI}\r\n                                    />\r\n                                </Col>\r\n                                <Col sm={3}>\r\n                                    <div>\r\n                                        <br/>\r\n                                        <h4>Description</h4>\r\n                                        <p>{lesson.description}</p>\r\n                                        <h5>Time</h5>\r\n                                        {lesson.duration} minutes\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\sign_up_page\\SignUpPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\contact_us_page\\ContactPage.tsx",["322","323","324"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport { Col, Container, Jumbotron, Media, Row } from \"react-bootstrap\";\r\n\r\ninterface ContactUsProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ContactUs (props: ContactUsProps): ReactElement {\r\n    return (\r\n        <Container fluid = {true}>\r\n            {props.modalDialog}\r\n            <main>\r\n                <Container \r\n                    fluid = {true} \r\n                    className = \"px-0\"\r\n                    style={{backgroundColor:'silver'}}\r\n                >\r\n                    <Row>\r\n                        <Col>\r\n                            <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1478.0640045030577!2d105.52627793336553!3d21.013154039142645!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31345b465a4e65fb%3A0xaae6040cfabe8fe!2zVHLGsOG7nW5nIMSQ4bqhaSBI4buNYyBGUFQ!5e0!3m2!1svi!2s!4v1619044601505!5m2!1svi!2s\" width=\"700\" height=\"500\" style={{border:0}}  loading=\"lazy\"></iframe>\r\n                        </Col>\r\n                        <Col style={{marginTop:50}}>\r\n                            <h1>Language Center LCS</h1><br/>\r\n                            <p>Address: FPT University, Hoa Lac High Tech Park, Hanoi, Vietnam</p>\r\n                            <p>Tel: (+84) 0946531195</p>\r\n                            <p>Mail: <a href=\"mailto:languagecenter_lcs@gmail.com\">languagecenter_lcs@gmail.com</a></p>\r\n                            <b>Office Hours</b>\r\n                            <p>Monday- Friday: 8.00 a.m to 5.30 p.m (Hanoi time, GMT +7)</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\LessonListlPage.tsx",["325","326"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, ListGroup, Row, Tab } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { LessonAPI } from \"../../common/service/LessonAPI\";\r\nimport { Course } from \"../../model/Course\";\r\nimport { Lesson } from \"../../model/Lesson\";\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function LessonListPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let param: any = useParams();\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n    let [lessonList, setLessonList] = useState<Lesson[]>([]);\r\n    let lessonAPI: LessonAPI | undefined;\r\n    let courseAPI: CourseAPI | undefined;\r\n\r\n    useEffect(() => {\r\n        lessonAPI = new LessonAPI();\r\n        courseAPI = new CourseAPI();\r\n        lessonAPI.getAllLessonByCourse(param.courseID).then(\r\n            (res) => {\r\n                setLessonList(res.data);\r\n                // console.log(student.userName);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n        courseAPI.getOneCourse(param.courseID).then(\r\n            (res) => {\r\n                console.log(\"course\", res.data);\r\n                \r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [param.courseID]);\r\n\r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item active={true}>\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Tab.Container id=\"list-group-tabs-example\">\r\n                            {lessonList.map((lesson) => {\r\n                                return (\r\n\r\n                                        <ListGroup className=\"my-2\">\r\n                                            <ListGroup.Item action \r\n                                                            as = {Link}\r\n                                                            to = {\r\n                                                                \"/student-dashboardz/\" + course.courseName + \"/\" + lesson.lessonID\r\n                                                            }\r\n                                            >\r\n                                                {lesson.lessonName}\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                )\r\n                                })}                      \r\n                            </Tab.Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\CourseDetailPage.tsx",["327","328"],"import React, { useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Col, Container, Image, Row, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { CourseAPI } from \"../../common/service/CourseAPI\";\r\nimport { Course } from \"../../model/Course\";\r\n\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function CourseDetailPage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let courseAPI: CourseAPI | undefined;\r\n    let param: any = useParams();\r\n    let [course, setCourse] = useState<Course>(new Course());\r\n\r\n    const options = {\r\n        style:\"currency\",\r\n        currency: \"VND\"\r\n    }\r\n    \r\n    useEffect(() => {\r\n        courseAPI = new CourseAPI();\r\n        courseAPI.getOneCourse(param.courseID).then(\r\n            (res) => {\r\n                setCourse(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"CourseDetailPage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col style={{backgroundColor: 'white'}}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    active={true}\r\n                                >\r\n                                    {course.courseName}\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Course Name:</th>\r\n                                        <th>{course.courseName}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Description:</td>\r\n                                        <td>{course.description}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Course Type:</td>\r\n                                        <td>{course.courseType.typeName}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Course Level:</td>\r\n                                        <td>{course.courseLevel.levelName}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Tuition Fee:</td>                     \r\n                                        <td>{course.tuitionFee.toLocaleString(\"de-DE\", options)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\teacher\\ManageExamQuestionPage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\student\\ProfilePage.tsx",["329","330"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { ReactElement } from \"react\";\r\nimport { Breadcrumb, Button, Col, Container, Form, Image, Modal, Row, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { StudentSidebar } from \"../../common/component/student_sidebar/StudentSidebar\";\r\nimport { LocalStorageService } from \"../../common/service/LocalStorageService\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User, UserIndexSignature } from \"../../model/User\";\r\nimport AboutUs from './sda.png'\r\n\r\ninterface StudentDashboardPageProps {\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function ProfilePage(\r\n    props: StudentDashboardPageProps\r\n): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let localStorageService = new LocalStorageService();\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const name = localStorageService.getLoggedUserName();\r\n\r\n    const date = new Date(user.dob);\r\n    const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n    const month = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\r\n    const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayProfile(name).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateMyProfile(event: FormEvent<HTMLFormElement>, userName: any) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.updateProfile(user, userName);\r\n    }\r\n\r\n    return (\r\n        <Container id=\"ProfilePage\">\r\n            {props.modalDialog}\r\n            <main>\r\n                <StudentSidebar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col style={{ backgroundColor: 'white' }}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/\" }}\r\n                                >\r\n                                    Home\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    linkAs={Link}\r\n                                    linkProps={{ to: \"/student-dashboard\" }}\r\n                                >\r\n                                    Student Dashboard\r\n                                </Breadcrumb.Item>\r\n                                <Breadcrumb.Item\r\n                                    active={true}\r\n                                >\r\n                                    Profile\r\n                                </Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                            <h1 style={{ textAlign: 'center' }}>My Profile</h1>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Image src={AboutUs}\r\n                                                rounded\r\n                                                style={{ width: 280, height: 250, borderStyle: \"groove\" }} />\r\n                                        </Col>\r\n                                        <Col sm=\"12\" md={{ offset: 3 }}>\r\n                                            <Button style={{ marginTop: 20 }} onClick={handleShow}>Edit Profile</Button>\r\n\r\n                                            <Modal show={show} onHide={handleClose} size=\"lg\">\r\n                                                <Form\r\n                                                    noValidate={false}\r\n                                                    onSubmit={(event) => {\r\n                                                        updateMyProfile(event, name);\r\n                                                    }}\r\n                                                    className=\"wrapper\"\r\n                                                    \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                User Name:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={true}\r\n                                                                name=\"userName\"\r\n                                                                id=\"userName\"\r\n                                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                value={user.userName}\r\n                                                                required={true}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Row>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    First Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"firstName\"\r\n                                                                    id=\"firstName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.firstName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    Middle Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"middleName\"\r\n                                                                    id=\"middleName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.middleName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    // value = {user.userName}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                            <Form.Group as={Col}>\r\n                                                                <Form.Label>\r\n                                                                    Last Name:\r\n                                                            </Form.Label>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    autoComplete=\"on\"\r\n                                                                    autoFocus={true}\r\n                                                                    name=\"lastName\"\r\n                                                                    id=\"lastName\"\r\n                                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                    value={user.lastName}\r\n                                                                    required={true}\r\n                                                                    spellCheck={false}\r\n                                                                    // value = {user.userName}\r\n                                                                    onChange={handleUserChange}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                        </Form.Row>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Email:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"email\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"email\"\r\n                                                                id=\"email\"\r\n                                                                value={user.email}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                DOB:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"date\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"dob\"\r\n                                                                id=\"dob\"\r\n                                                                value={user.dob.toString()}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Phone:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"phoneNumber\"\r\n                                                                id=\"phoneNumber\"\r\n                                                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                                                value={user.phoneNumber}\r\n                                                                required={false}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Gender\r\n                                                        </Form.Label>\r\n                                                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                                                <option value=\"Male\">Male</option>\r\n                                                                <option value=\"Female\">Female</option>\r\n                                                                <option value=\"Bisexual\">Bisexual</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>\r\n                                                                Job:\r\n                                                        </Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                autoComplete=\"on\"\r\n                                                                autoFocus={false}\r\n                                                                name=\"job\"\r\n                                                                id=\"job\"\r\n                                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                                value={user.job}\r\n                                                                required={true}\r\n                                                                spellCheck={false}\r\n                                                                onChange={handleUserChange}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"primary\" onClick={handleClose} block={true} type=\"submit\">\r\n                                                            Save Changes\r\n                                                        </Button>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose} block={true}>\r\n                                                            Close\r\n                                                        </Button>\r\n                                                    </Modal.Footer>\r\n                                                </Form>\r\n                                            </Modal>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>User Name:</th>\r\n                                                <th>{user.userName}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>First Name:</td>\r\n                                                <td>{user.firstName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Middle Name:</td>\r\n                                                <td>{user.middleName}</td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Last Name:</td>\r\n                                                <td>{user.lastName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>DOB:</td>\r\n                                                <td>{day}-{month}-{year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email:</td>\r\n                                                <td>{user.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Phone Number:</td>\r\n                                                <td>{user.phoneNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender:</td>\r\n                                                <td>{user.gender}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Job:</td>\r\n                                                <td>{user.job}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Description</td>\r\n                                                <td>{user.selfDescription}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ProtectedRoute.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\Header.tsx",["331"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport {\r\n    Button, Card, Container, Form, FormControl, Nav, Navbar\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel1 from './Carousel-1.jpg';\r\nimport { textSpanEnd } from \"typescript\";\r\n\r\nexport function Header(): ReactElement {\r\n    return (\r\n        <Container\r\n            fluid={true}\r\n        >\r\n            <header>\r\n                <Card className=\"bg-dark text-white\">\r\n                    <Card.Img src={Carousel1} alt=\"Card image\" style={{height:300, opacity:0.3, borderStyle:'none'}}/>\r\n                    <Card.ImgOverlay>\r\n                        <Card.Title style={{fontSize:55, marginTop:80, marginLeft:50}}>Contact</Card.Title>\r\n                        <Card.Text style={{fontSize:25, marginLeft:50}}>\r\n                            Language Center LCS was established in 2021\r\n                        </Card.Text>\r\n                    </Card.ImgOverlay>\r\n                </Card>\r\n            </header>\r\n            <nav>\r\n                <Navbar\r\n                    bg=\"none\"\r\n                    fixed=\"top\"\r\n                    expand=\"md\"\r\n                    className=\"w-100 px-5\"\r\n                >\r\n                    <Navbar.Brand as={Link} to=\"/\"\r\n                        className=\"py-4\"\r\n                        style={{\r\n                            fontFamily: 'Calibri',\r\n                            fontWeight: 'bold',\r\n                            color: 'white',\r\n                        }}\r\n                    >\r\n                        <span style={{ fontSize: 40 + 'px', verticalAlign: 'top' }} >LCS</span>\r\n                        {/* <span style={{fontSize:10}}>Language Center System</span> */}\r\n\r\n                    </Navbar.Brand>\r\n                    <Nav\r\n                        id=\"NavLinkSection\"\r\n                        className={\r\n                            `d-md-inline-flex \r\n                            justify-content-around \r\n                            container-fluid`\r\n                        }\r\n                    >\r\n                        <Nav.Link as={Link} to=\"/sign-up-page\">\r\n                            Sign up\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/log-in-page\">\r\n                            Log in\r\n                        </Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/contact-us\">\r\n                            Contact us\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Form className=\"d-md-inline-flex\">\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            className=\"mr-md-2\"\r\n                        />\r\n                        <Button variant=\"success\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </nav>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\ModalDialog.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PageHeader.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\home_page_header\\HomePageHeader.tsx",["332"],"// Import package members section:\r\nimport React, { ReactElement } from \"react\";\r\nimport { \r\n    Button, Carousel, Container, Form, FormControl, Nav, Navbar \r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePageHeader.css';\r\nimport Carousel1 from './Carousel-1.jpg';\r\nimport Carousel2 from './Carousel-2.jpg';\r\nimport Carousel3 from './Carousel-3.jpg';\r\nimport { textSpanEnd } from \"typescript\";\r\n\r\nexport function HomePageHeader (): ReactElement {\r\n    return (\r\n        <Container \r\n            fluid = {true}\r\n        >\r\n            <header>\r\n                <Carousel id = \"HeaderCarousel\">\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel1}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1>Welcome to Language Center</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            LCS has a mission to help improve and improve foreign languages for employees, \r\n                            students easily get job opportunities and deeply integrate in the knowledge economy.\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel2}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1 style={{textAlign:'left'}}>Career Skills - Soft skills develop themselves at work</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            Giving learners 5 essential and important soft skills for employees: Study skills; \r\n                            Personal development skills; Communication skills; Speech skills; Leadership skills\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block\"\r\n                            src = {Carousel3}\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h1 style={{textAlign:'left'}}>JLPT certified Japanese for student and employee</h1>\r\n                            <p style={{textAlign:'left'}}>\r\n                            Expand your opportunities for personal development by Japanese-Language Proficiency Test - JLPT\r\n                            with a commitment to meeting the output standards with a minimum of N4\r\n                            </p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </header>\r\n            <nav>\r\n                <Navbar \r\n                    bg = \"none\" \r\n                    fixed=\"top\"\r\n                    expand = \"md\"\r\n                    className = \"w-100 px-5\"\r\n                >\r\n                    <Navbar.Brand as = {Link} to = \"/\" \r\n                                className = \"py-4\" \r\n                                style={{fontFamily: 'Calibri', \r\n                                        fontWeight: 'bold',\r\n                                        color: 'white',\r\n                                    }}\r\n                    >\r\n                        <span style={{fontSize: 40 + 'px', verticalAlign: 'top'}} >LCS</span>\r\n                        {/* <span style={{fontSize:10}}>Language Center System</span> */}\r\n                        \r\n                    </Navbar.Brand>\r\n                    <Nav \r\n                        id = \"NavLinkSection\" \r\n                        className = {\r\n                            `d-md-inline-flex \r\n                            justify-content-around \r\n                            container-fluid`\r\n                        }\r\n                    >\r\n                        <Nav.Link as = {Link} to = \"/sign-up-page\">\r\n                            Sign up\r\n                        </Nav.Link>\r\n                        <Nav.Link as = {Link} to = \"/log-in-page\">\r\n                            Log in\r\n                        </Nav.Link>\r\n                        <Nav.Link as = {Link} to = \"/contact-us\">\r\n                            Contact us\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Form className = \"d-md-inline-flex\">\r\n                        <FormControl \r\n                            type = \"text\" \r\n                            placeholder = \"Search\" \r\n                            className = \"mr-md-2\" \r\n                        />\r\n                        <Button variant = \"success\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </nav>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\PersistedStateHook.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeGuard.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LogOutAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\TypeConvert.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\DetailPage.tsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"/* eslint-disable prefer-template */\r\n/* eslint-disable max-len */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, {\r\n    ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, FormControl, Nav, Navbar, Row, Table\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\nimport './ViewProfilePage.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction renderUserTable (\r\n    user: User\r\n    // , index: number\r\n): ReactElement {\r\n    return (\r\n        <table key={user.userID} className=\"table table-bordered\">\r\n            <tr>\r\n                <th>Name</th>\r\n                <td>{user.firstName + \" \" + user.middleName + \" \" + user.lastName}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Phone</th>\r\n                <td>{user.phoneNumber}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>DoB</th>\r\n                <td>{user.dob.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Email</th>\r\n                <td>{user.email}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Gender</th>\r\n                <td>{user.gender}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Job</th>\r\n                <td>{user.job}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Self Description</th>\r\n                <td>{user.selfDescription}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Account Status</th>\r\n                <td>{user.accountStatus}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Date Created</th>\r\n                <td>{user.dateCreated.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Last Login</th>\r\n                <td>{user.lastLogin.toString()}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Last Modified</th>\r\n                <td>{user.lastModified.toString()}</td>\r\n            </tr>\r\n        </table>\r\n    );\r\n}\r\nexport function DetailPage (): ReactElement {\r\n\r\n    let [user, getUser] = useState<User>(new User());\r\n    let userID: number;\r\n    let showUser: User | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let match = useRouteMatch();\r\n    let param: any = useParams();\r\n    let studentID: number;\r\n    let [student, setStudent] = useState<User>(new User());\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayStudentbyID(param.studentID).then(\r\n            (res) => {\r\n                console.log(res);\r\n                setStudent(res.data);\r\n                console.log(student);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    console.log(param.studentID);\r\n\r\n    return (\r\n        <Container fluid={true} id=\"PageContentContainer\">\r\n            <Container fluid={true} id=\"PageHeaderContainer\">\r\n                <header>\r\n                </header>\r\n                <nav>\r\n                </nav>\r\n            </Container>\r\n            <main>\r\n                <Container id=\"PageBodyContainer\">\r\n                    <Row className=\"bg-white\">\r\n                        <Col>\r\n                            <div className=\"student-profile py-4\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-lg-4\">\r\n                                            <div className=\"card shadow-sm\">\r\n                                                <div className=\"card-header bg-transparent text-center\">\r\n                                                    <img key={user.userID} className=\"profile_img\" src=\"{user.photoURI}\" alt=\"\" />\r\n                                                    <h3>{user.firstName + \" \" + user.middleName + \" \" + user.lastName}</h3>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Student ID:</strong>{user.userID + 1}</p>\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Class:</strong>5</p>\r\n                                                    <p className=\"mb-0\"><strong className=\"pr-1\">Section:</strong>A</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card shadow-sm\">\r\n                                                <div className=\"card-header bg-transparent border-0\">\r\n                                                    <h3 className=\"mb-0\"><i className=\"far fa-clone pr-1\"></i>General Information</h3>\r\n                                                </div>\r\n                                                <div className=\"card-body pt-0\">\r\n                                                    <>\r\n                                                        {\r\n                                                            renderUserTable(student)\r\n                                                            // student.map((item, index) => (\r\n                                                            //     <li key={index}>{item}</li>\r\n                                                            // ))\r\n                                                        }\r\n                                                    </>\r\n                                                    {/* {student.map(\r\n                                                        (\r\n                                                            user\r\n                                                            , index\r\n                                                        ) => renderUserTable(\r\n                                                            user\r\n                                                            , index\r\n                                                        )\r\n                                                    )} */}\r\n                                                </div>\r\n                                                &nbsp;\r\n                                                    <Link to={\"/admin-console/manage-teacher-page\"}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-primary\" style={{\r\n                                                        marginLeft: '900px'\r\n                                                    }}>\r\n                                                        <span className=\"fa fa-pencil mr-5 text-center\" style={{\r\n                                                        marginLeft: '35px'\r\n                                                        }}>\r\n                                                            Close\r\n                                                            </span>\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\EditStudentInfo.tsx",["347","348","349","350","351"],"import React, {\r\n    ChangeEvent, FormEvent, ReactElement, useEffect, useState\r\n} from 'react';\r\nimport {\r\n    Button, Col, Container, Form, Modal, Row\r\n} from 'react-bootstrap';\r\nimport { UserAPI } from '../common/service/UserAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { User, UserIndexSignature } from '../model/User';\r\n\r\nexport function EditStudentInfo(): ReactElement {\r\n    let [user, setUser] = useState<User>(new User());\r\n    let updatedUser: User | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let userAPI: UserAPI | undefined;\r\n    let param: any = useParams();\r\n    let [student, setStudent] = useState<User>(new User());\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.displayStudent(param.studentID).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n                // console.log(student.userName);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(user);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setUser(updatedUser);\r\n    }\r\n\r\n    function updateStudent(event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(user, userID);\r\n    }\r\n    // console.log(student.userName);\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form\r\n                    noValidate={false}\r\n                    onSubmit={(event) => {\r\n                        updateStudent(event, param.userID);\r\n                    }}\r\n                    className=\"wrapper\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                User Name:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={true}\r\n                                name=\"userName\"\r\n                                id=\"userName\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                value={user.userName}\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                // value = {student.userName}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    First Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.firstName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    Middle Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.middleName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>\r\n                                    Last Name:\r\n                                                            </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    autoComplete=\"on\"\r\n                                    autoFocus={true}\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                    value={user.lastName}\r\n                                    required={true}\r\n                                    spellCheck={false}\r\n                                    // value = {user.userName}\r\n                                    onChange={handleUserChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Email:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                value={user.email}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                DOB:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"dob\"\r\n                                id=\"dob\"\r\n                                value={user.dob.toString()}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Phone:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"phoneNumber\"\r\n                                id=\"phoneNumber\"\r\n                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                value={user.phoneNumber}\r\n                                required={false}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Gender\r\n                                                        </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Bisexual\">Bisexual</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Job:\r\n                                                        </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoComplete=\"on\"\r\n                                autoFocus={false}\r\n                                name=\"job\"\r\n                                id=\"job\"\r\n                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                value={user.job}\r\n                                required={true}\r\n                                spellCheck={false}\r\n                                onChange={handleUserChange}\r\n                            />\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={handleClose} block={true}>\r\n                            Save Changes\r\n                                                        </Button>\r\n                        <Button variant=\"secondary\" onClick={handleClose} type=\"submit\" block={true}>\r\n                            Close\r\n                                                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\AdminConsolePage.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\page\\admin\\ManageTeacherPage.tsx",["352","353","354","355"],"/* eslint-disable no-await-in-loop */\r\n// Import package members section:\r\nimport React, {\r\n    ChangeEvent,\r\n    FormEvent,\r\n    ReactElement\r\n    , useEffect\r\n    , useState\r\n} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { UserAPI } from \"../../common/service/UserAPI\";\r\nimport { User, UserIndexSignature } from \"../../model/User\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.scss';\r\nimport './ManageTeacherPage.css';\r\nimport {\r\n    Button,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Pagination\r\n} from \"react-bootstrap\";\r\nimport { PagingSection } from \"../../common/component/PagingSection\";\r\n\r\nexport function ManageTeacherPage(): ReactElement {\r\n\r\n    let [pageIndex, setPageIndex] = useState<number>(0);\r\n    let [pageSize] = useState<number>(5);\r\n    let [totalRowCount, setTotalRowCount] = useState<number>(0);\r\n\r\n    let [user, setUser] = useState<User[]>([]);\r\n    let [teacher, setTeacher] = useState<User>(new User());\r\n    let userAPI: UserAPI | undefined;\r\n    let inputField:\r\n        HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | undefined;\r\n    let param: any = useParams();\r\n    let updatedUser: User | undefined;\r\n    let [item, setItem] = useState<User>(new User());\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item: any) => {\r\n        setShow(true);\r\n        setItem(item);\r\n        setTeacher(item);\r\n    }\r\n\r\n    totalRowCount = user.length;\r\n\r\n    useEffect(() => {\r\n        userAPI = new UserAPI();\r\n        userAPI.viewTeacher().then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        )\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [refreshKey]);\r\n\r\n    // function displayTeacherEdit() {\r\n    //     userAPI = new UserAPI();\r\n    //     userAPI.displayStudent(param.studentID).then(\r\n    //         (res) => {\r\n    //             setTeacher(res.data);\r\n    //             // console.log(student.userName);\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    function goToPage(destinationPageIndex: number): void {\r\n        setPageIndex(destinationPageIndex);\r\n    }\r\n\r\n    function handleUserChange(\r\n        event: ChangeEvent<\r\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n        >\r\n    ) {\r\n        updatedUser = new User(teacher);\r\n        inputField = event.target;\r\n        updatedUser[\r\n            inputField.name as keyof UserIndexSignature\r\n        ] = inputField.value;\r\n        setTeacher(updatedUser);\r\n    }\r\n\r\n    function updateStudent(event: FormEvent<HTMLFormElement>, userID: number) {\r\n        event.preventDefault();\r\n        userAPI = new UserAPI();\r\n        userAPI.update(teacher, userID).then((res: any) => {\r\n            setRefreshKey((number) => number + 1);\r\n        });\r\n    }\r\n    // function deleteTeacher(event: React.MouseEvent<HTMLButtonElement, MouseEvent>, userID: number) {\r\n    //     event.buttons;\r\n    //     userAPI = new UserAPI();\r\n    //     userAPI.deleteAnotherUser(userID);\r\n    //     console.log(userID);\r\n    // }\r\n\r\n    // console.log(param.userID);\r\n    return (\r\n\r\n        <div className=\"max-width\" id=\"grid\">\r\n\r\n            <div className=\"text-center\">\r\n                <h1>Manage teacher</h1>\r\n                <hr />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div>\r\n                    {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                        <span className=\"fa fa-plus mr-5 \">\r\n                        </span>\r\n                                Add teacher\r\n                </button> */}\r\n                    <div className=\"row mt-15\" id=\"table-cover\" style={{\r\n                        marginLeft: '300px'\r\n                    }}>\r\n\r\n                        <div className=\r\n                            \"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <table className=\"table table-responsive table-fit table-light table-striped table-bordered table-hover\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            ID\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            User name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            First name\r\n                                        </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Middle name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Last name\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Phone\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Account status\r\n                                    </th>\r\n\r\n                                        <th className=\"text-center text-nowrap\">\r\n                                            Action\r\n                                    </th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody >\r\n\r\n                                    {user.map((item) => {\r\n                                        return (\r\n                                            <tr className=\"text-center text-nowrap\">\r\n\r\n                                                <td>\r\n                                                    {item.userID}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.userName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.firstName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.middleName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.lastName}\r\n                                                </td>\r\n\r\n                                                <td>\r\n                                                    {item.phoneNumber}\r\n                                                </td>\r\n\r\n                                                <td className=\"text-center\">\r\n                                                    <span className=\"label label-success\">\r\n                                                        {item.accountStatus}\r\n                                                    </span>\r\n                                                </td>\r\n\r\n                                                <td className=\"text-center text-nowrap\" id=\"action\">\r\n                                                    <Link to={\"/user_detail/\" + item.userID}>\r\n                                                        <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                                            <span className=\"fa fa-pencil mr-5 text-center text-nowrap\">\r\n                                                                Detail\r\n                                                            </span>\r\n                                                        </button>\r\n                                                    </Link>\r\n                                                    &nbsp;\r\n                                                    {/* <Link to={\"/admin-console/editStudentInfo/\" + item.userID}>\r\n                                                    <button type=\"button\" className=\"btn btn-outline-primary\">\r\n                                                        <span className=\"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                            </span>\r\n                                                    </button>\r\n\r\n                                                    </Link> */}\r\n                                                    <Button variant=\"primary\" onClick={() => handleShow(item)} >\r\n                                                        Edit\r\n                                                    </Button>\r\n\r\n                                                    {/* <button type=\"button\" className=\"btn btn-outline-primary\" href={item.userID} onClick={handleShow}>\r\n                                                        <span className=\"fa fa-pencil mr-5\">\r\n                                                            Edit\r\n                                                            </span>\r\n                                                    </button> */}\r\n\r\n                                                    {/* &nbsp; */}\r\n                                                    {/* <Link to=\"/editTeacherInfo/:teacherID\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-danger\">\r\n                                                            <span className=\r\n                                                                \"fa fa-pencil mr-5\">\r\n                                                                Delete\r\n                                                    </span>\r\n                                                        </button>\r\n                                                    </Link> */}\r\n                                                    {/* <button type=\"button\" className=\"btn btn-outline-danger\"\r\n                                                        onClick={(event) => {\r\n                                                            deleteTeacher(event, param.userID);\r\n                                                        }}>\r\n                                                        <span className=\r\n                                                            \"fa fa-pencil mr-5\">\r\n                                                            Delete\r\n                                                    </span>\r\n                                                    </button> */}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                            <Modal show={show} onHide={handleClose}>\r\n                                <Form\r\n                                    noValidate={false}\r\n                                    onSubmit={(event) => {\r\n                                        updateStudent(event, item.userID);\r\n                                    }}\r\n                                    className=\"wrapper\"\r\n                                >\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit My Profile</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                User Name:\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={true}\r\n                                                name=\"userName\"\r\n                                                id=\"userName\"\r\n                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                defaultValue={item.userName}\r\n                                                required={true}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    First Name:\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"firstName\"\r\n                                                    id=\"firstName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.firstName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Middle Name:\r\n                                                                        </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"middleName\"\r\n                                                    id=\"middleName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.middleName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Label>\r\n                                                    Last Name:\r\n                                                                        </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    autoComplete=\"on\"\r\n                                                    autoFocus={true}\r\n                                                    name=\"lastName\"\r\n                                                    id=\"lastName\"\r\n                                                    pattern=\"^[\\p{L} .'-]+$\"\r\n                                                    defaultValue={item.lastName}\r\n                                                    required={true}\r\n                                                    spellCheck={false}\r\n                                                    onChange={handleUserChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Email:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"email\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                defaultValue={item.email}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                DOB:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"date\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"dob\"\r\n                                                id=\"dob\"\r\n                                                defaultValue={item.dob.toString()}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Phone:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"phoneNumber\"\r\n                                                id=\"phoneNumber\"\r\n                                                pattern=\"^(?:[0-9] ?){6,14}[0-9]$\"\r\n                                                defaultValue={item.phoneNumber}\r\n                                                required={false}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Gender\r\n                                                                    </Form.Label>\r\n                                            <Form.Control as=\"select\" id=\"gender\" name=\"gender\" onChange={handleUserChange}>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Bisexual\">Bisexual</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>\r\n                                                Job:\r\n                                                                    </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                autoComplete=\"on\"\r\n                                                autoFocus={false}\r\n                                                name=\"job\"\r\n                                                id=\"job\"\r\n                                                pattern=\"^[\\p{L} .'-]+$\"\r\n                                                defaultValue={item.job}\r\n                                                required={true}\r\n                                                spellCheck={false}\r\n                                                onChange={handleUserChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"primary\" onClick={handleClose} type=\"submit\" block={true}>\r\n                                            Save Changes\r\n                                                                </Button>\r\n                                        <Button variant=\"secondary\" onClick={handleClose} block={true}>\r\n                                            Close\r\n                                                                </Button>\r\n                                    </Modal.Footer>\r\n                                </Form>\r\n                            </Modal>\r\n                            <div>\r\n                                <Form.Group>\r\n                                    <Form.Row\r\n                                        className=\"justify-content-md-center\"\r\n                                    >\r\n                                        <PagingSection\r\n                                            pageIndex={pageIndex}\r\n                                            pageSize={pageSize}\r\n                                            totalRowCount={totalRowCount}\r\n                                            goToPage={goToPage}\r\n                                        />\r\n                                    </Form.Row>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\User.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RoleAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\PagingSection.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\RegisterFormAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseLevelAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\CourseTypeAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Course.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LocalStorageService.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Quiz.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\InputValidate.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\QuestionOption.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\QuizAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\MultipleChoiceQuestion.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\LessonAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ExaminationAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Lesson.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\RegisterForm.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\UserAPI.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\student_sidebar\\StudentSidebar.tsx",["356","357"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Accordion, Button, Card, ListGroup } from \"react-bootstrap\";\r\nimport './StudentSidebar.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { CourseAPI } from \"../../service/CourseAPI\";\r\nimport { Course } from \"../../../model/Course\";\r\nimport { LocalStorageService } from \"../../service/LocalStorageService\";\r\nimport { UserAPI } from \"../../service/UserAPI\";\r\nimport { User } from \"../../../model/User\";\r\n\r\nexport function StudentSidebar(): ReactElement {\r\n\r\n    // Variables declaration:\r\n    let courseAPI = new CourseAPI();\r\n    let userAPI = new UserAPI();\r\n    let [user, setUser] = useState<User>(new User());\r\n    let [sideBarActivated, setSideBarActivated]\r\n        = useState<string>(\"\");\r\n    let localStorageService = new LocalStorageService();\r\n    let [myCourseList, setMyCourseList] = useState<Course[]>([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const name = localStorageService.getLoggedUserName();\r\n        courseAPI.getAllCoursesByCurrentUser(name).then(\r\n            (res) => {\r\n                setMyCourseList(res.data);\r\n            }\r\n        )\r\n        userAPI.displayProfile(name).then(\r\n            (res) => {\r\n                setUser(res.data);\r\n            }\r\n        ) \r\n    }, []);\r\n\r\n\r\n    function toggleSideBar(): void {\r\n        if (sideBarActivated !== \"activated\") {\r\n            setSideBarActivated(\"activated\");\r\n        }\r\n        else {\r\n            setSideBarActivated(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id=\"SideBarButton\"\r\n                className={\r\n                    `Side_Bar_Button_Z_Index \r\n                    ${sideBarActivated}`\r\n                }\r\n                onClick={toggleSideBar}\r\n            >\r\n                <div id=\"Top\"></div>\r\n                <div id=\"Middle\"></div>\r\n                <div id=\"Bottom\"></div>\r\n            </div>\r\n            <nav\r\n                id=\"SideBar\"\r\n                className={`Side_Bar_Z_Index ${sideBarActivated}`}\r\n            >\r\n                <span style={{color:'white', textAlign:'start'}}>Hi {user.userName}!</span>\r\n                <ListGroup >\r\n                    <ListGroup.Item action={true} \r\n                                    as = {Link}\r\n                                    to = {\r\n                                        \"/student-dashboard\"\r\n                                    }\r\n                                    style={{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                                    className=\"btt\"\r\n                    >\r\n                        Dashboard\r\n                    </ListGroup.Item >\r\n                    <Accordion style={{backgroundColor: '#242424'}}>\r\n                        <Card style={{backgroundColor: '#242424'}} className=\"btt\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" style={{color:'#e6ccb3'}}>\r\n                                Course\r\n                            </Accordion.Toggle>\r\n                            {myCourseList.map((course) => {\r\n                                return (\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body>\r\n                                            <Button\r\n                                                className=\"btt\"\r\n                                                as = {Link}\r\n                                                size=\"sm\"\r\n                                                to = {\r\n                                                    \"/student-dashboards/\" + course.courseID\r\n                                                }\r\n                                                style={{backgroundColor: \"#242424\",\r\n                                                        borderColor: \"#242424\",\r\n                                                        padding: \"0 30 0 30\",\r\n                                                        \r\n                                                        }}\r\n                                            >\r\n                                                {course.courseName}\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                )\r\n                            })}\r\n                        </Card>\r\n                    </Accordion>\r\n                    <ListGroup.Item action={true} \r\n                                    as = {Link}\r\n                                    to = {\r\n                                        \"/student-dashboardx/profile/\" + user.userID\r\n                                    }\r\n                                    style={{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                                    className=\"btt\"\r\n                    >\r\n                        Profile\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item action={true}\r\n                                    style={{backgroundColor: '#242424', color:'#e6ccb3'}}\r\n                                    className=\"btt\"\r\n                    >\r\n                        Test\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </nav>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\component\\teacher_sidebar\\TeacherSidebar.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\common\\service\\ErrorHandle.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\Examination.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseType.tsx",[],"C:\\Users\\Phan Lam\\OneDrive\\Documents\\Capstone Projects\\LanguageCenterSystem\\front-end\\src\\model\\CourseLevel.tsx",[],["358","359"],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":58,"column":10,"nodeType":"366","messageId":"367","endLine":58,"endColumn":21},{"ruleId":"364","severity":1,"message":"368","line":6,"column":5,"nodeType":"366","messageId":"367","endLine":6,"endColumn":11},{"ruleId":"364","severity":1,"message":"369","line":6,"column":29,"nodeType":"366","messageId":"367","endLine":6,"endColumn":33},{"ruleId":"364","severity":1,"message":"370","line":6,"column":35,"nodeType":"366","messageId":"367","endLine":6,"endColumn":46},{"ruleId":"364","severity":1,"message":"371","line":6,"column":48,"nodeType":"366","messageId":"367","endLine":6,"endColumn":51},{"ruleId":"364","severity":1,"message":"372","line":6,"column":53,"nodeType":"366","messageId":"367","endLine":6,"endColumn":59},{"ruleId":"364","severity":1,"message":"373","line":9,"column":10,"nodeType":"366","messageId":"367","endLine":9,"endColumn":14},{"ruleId":"364","severity":1,"message":"374","line":10,"column":16,"nodeType":"366","messageId":"367","endLine":10,"endColumn":34},{"ruleId":"364","severity":1,"message":"375","line":67,"column":10,"nodeType":"366","messageId":"367","endLine":67,"endColumn":14},{"ruleId":"364","severity":1,"message":"376","line":67,"column":16,"nodeType":"366","messageId":"367","endLine":67,"endColumn":23},{"ruleId":"364","severity":1,"message":"377","line":68,"column":9,"nodeType":"366","messageId":"367","endLine":68,"endColumn":23},{"ruleId":"364","severity":1,"message":"378","line":69,"column":9,"nodeType":"366","messageId":"367","endLine":69,"endColumn":35},{"ruleId":"364","severity":1,"message":"379","line":71,"column":9,"nodeType":"366","messageId":"367","endLine":71,"endColumn":14},{"ruleId":"364","severity":1,"message":"380","line":73,"column":9,"nodeType":"366","messageId":"367","endLine":73,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":77,"column":19,"nodeType":"383","endLine":77,"endColumn":32},{"ruleId":"364","severity":1,"message":"384","line":18,"column":10,"nodeType":"366","messageId":"367","endLine":18,"endColumn":17},{"ruleId":"364","severity":1,"message":"385","line":18,"column":19,"nodeType":"366","messageId":"367","endLine":18,"endColumn":29},{"ruleId":"381","severity":1,"message":"382","line":21,"column":19,"nodeType":"383","endLine":21,"endColumn":32},{"ruleId":"364","severity":1,"message":"386","line":20,"column":10,"nodeType":"366","messageId":"367","endLine":20,"endColumn":24},{"ruleId":"381","severity":1,"message":"387","line":71,"column":11,"nodeType":"388","endLine":71,"endColumn":13,"suggestions":"389"},{"ruleId":"364","severity":1,"message":"386","line":104,"column":10,"nodeType":"366","messageId":"367","endLine":104,"endColumn":24},{"ruleId":"364","severity":1,"message":"390","line":17,"column":10,"nodeType":"366","messageId":"367","endLine":17,"endColumn":15},{"ruleId":"364","severity":1,"message":"391","line":20,"column":10,"nodeType":"366","messageId":"367","endLine":20,"endColumn":30},{"ruleId":"364","severity":1,"message":"392","line":7,"column":16,"nodeType":"366","messageId":"367","endLine":7,"endColumn":27},{"ruleId":"364","severity":1,"message":"393","line":7,"column":29,"nodeType":"366","messageId":"367","endLine":7,"endColumn":38},{"ruleId":"364","severity":1,"message":"394","line":10,"column":10,"nodeType":"366","messageId":"367","endLine":10,"endColumn":16},{"ruleId":"364","severity":1,"message":"395","line":14,"column":11,"nodeType":"366","messageId":"367","endLine":14,"endColumn":36},{"ruleId":"381","severity":1,"message":"396","line":33,"column":8,"nodeType":"388","endLine":33,"endColumn":10,"suggestions":"397"},{"ruleId":"381","severity":1,"message":"398","line":27,"column":21,"nodeType":"383","endLine":27,"endColumn":36},{"ruleId":"381","severity":1,"message":"399","line":28,"column":21,"nodeType":"383","endLine":28,"endColumn":36},{"ruleId":"364","severity":1,"message":"400","line":3,"column":26,"nodeType":"366","messageId":"367","endLine":3,"endColumn":35},{"ruleId":"364","severity":1,"message":"401","line":3,"column":37,"nodeType":"366","messageId":"367","endLine":3,"endColumn":42},{"ruleId":"402","severity":1,"message":"403","line":21,"column":29,"nodeType":"404","endLine":21,"endColumn":389},{"ruleId":"381","severity":1,"message":"398","line":25,"column":21,"nodeType":"383","endLine":25,"endColumn":36},{"ruleId":"381","severity":1,"message":"399","line":26,"column":21,"nodeType":"383","endLine":26,"endColumn":36},{"ruleId":"364","severity":1,"message":"405","line":3,"column":38,"nodeType":"366","messageId":"367","endLine":3,"endColumn":43},{"ruleId":"381","severity":1,"message":"399","line":27,"column":21,"nodeType":"383","endLine":27,"endColumn":36},{"ruleId":"364","severity":1,"message":"393","line":4,"column":16,"nodeType":"366","messageId":"367","endLine":4,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":36,"column":19,"nodeType":"383","endLine":36,"endColumn":32},{"ruleId":"364","severity":1,"message":"406","line":8,"column":10,"nodeType":"366","messageId":"367","endLine":8,"endColumn":21},{"ruleId":"364","severity":1,"message":"406","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":21},{"ruleId":"364","severity":1,"message":"368","line":8,"column":5,"nodeType":"366","messageId":"367","endLine":8,"endColumn":11},{"ruleId":"364","severity":1,"message":"369","line":8,"column":29,"nodeType":"366","messageId":"367","endLine":8,"endColumn":33},{"ruleId":"364","severity":1,"message":"370","line":8,"column":35,"nodeType":"366","messageId":"367","endLine":8,"endColumn":46},{"ruleId":"364","severity":1,"message":"371","line":8,"column":48,"nodeType":"366","messageId":"367","endLine":8,"endColumn":51},{"ruleId":"364","severity":1,"message":"372","line":8,"column":53,"nodeType":"366","messageId":"367","endLine":8,"endColumn":59},{"ruleId":"364","severity":1,"message":"407","line":8,"column":66,"nodeType":"366","messageId":"367","endLine":8,"endColumn":71},{"ruleId":"364","severity":1,"message":"374","line":12,"column":16,"nodeType":"366","messageId":"367","endLine":12,"endColumn":34},{"ruleId":"364","severity":1,"message":"375","line":71,"column":10,"nodeType":"366","messageId":"367","endLine":71,"endColumn":14},{"ruleId":"364","severity":1,"message":"376","line":71,"column":16,"nodeType":"366","messageId":"367","endLine":71,"endColumn":23},{"ruleId":"364","severity":1,"message":"377","line":72,"column":9,"nodeType":"366","messageId":"367","endLine":72,"endColumn":23},{"ruleId":"364","severity":1,"message":"378","line":73,"column":9,"nodeType":"366","messageId":"367","endLine":73,"endColumn":35},{"ruleId":"364","severity":1,"message":"379","line":75,"column":9,"nodeType":"366","messageId":"367","endLine":75,"endColumn":14},{"ruleId":"364","severity":1,"message":"380","line":77,"column":9,"nodeType":"366","messageId":"367","endLine":77,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":81,"column":19,"nodeType":"383","endLine":81,"endColumn":32},{"ruleId":"364","severity":1,"message":"408","line":5,"column":18,"nodeType":"366","messageId":"367","endLine":5,"endColumn":27},{"ruleId":"364","severity":1,"message":"409","line":5,"column":42,"nodeType":"366","messageId":"367","endLine":5,"endColumn":45},{"ruleId":"364","severity":1,"message":"410","line":18,"column":10,"nodeType":"366","messageId":"367","endLine":18,"endColumn":17},{"ruleId":"364","severity":1,"message":"411","line":18,"column":19,"nodeType":"366","messageId":"367","endLine":18,"endColumn":29},{"ruleId":"381","severity":1,"message":"382","line":25,"column":19,"nodeType":"383","endLine":25,"endColumn":32},{"ruleId":"364","severity":1,"message":"412","line":21,"column":5,"nodeType":"366","messageId":"367","endLine":21,"endColumn":15},{"ruleId":"364","severity":1,"message":"413","line":29,"column":25,"nodeType":"366","messageId":"367","endLine":29,"endColumn":41},{"ruleId":"364","severity":1,"message":"414","line":36,"column":9,"nodeType":"366","messageId":"367","endLine":36,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":52,"column":19,"nodeType":"383","endLine":52,"endColumn":32},{"ruleId":"364","severity":1,"message":"393","line":5,"column":16,"nodeType":"366","messageId":"367","endLine":5,"endColumn":25},{"ruleId":"381","severity":1,"message":"415","line":36,"column":8,"nodeType":"388","endLine":36,"endColumn":10,"suggestions":"416"},{"ruleId":"360","replacedBy":"417"},{"ruleId":"362","replacedBy":"418"},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],"@typescript-eslint/no-unused-vars","'DetailPages' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Link' is defined but never used.","'UserIndexSignature' is defined but never used.","'user' is assigned a value but never used.","'getUser' is assigned a value but never used.","'userID' is defined but never used.","'showUser' is defined but never used.","'match' is assigned a value but never used.","'studentID' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'userAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'teacher' is assigned a value but never used.","'setTeacher' is assigned a value but never used.","'totalPageCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadStudentTable'. Either include it or remove the dependency array.","ArrayExpression",["421"],"'Route' is defined but never used.","'StudentDashboardPage' is defined but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'values' is defined but never used.","'StudentDashboardPageProps' is defined but never used.","React Hook useEffect has missing dependencies: 'courseAPI' and 'localStorageService'. Either include them or remove the dependency array.",["422"],"Assignments to the 'lessonAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'courseAPI' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Jumbotron' is defined but never used.","'Media' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Image' is defined but never used.","'textSpanEnd' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'student' is assigned a value but never used.","'setStudent' is assigned a value but never used.","'Pagination' is defined but never used.","'setTotalRowCount' is assigned a value but never used.","'param' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseAPI', 'localStorageService', and 'userAPI'. Either include them or remove the dependency array.",["423"],["419"],["420"],"no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [loadStudentTable]",{"range":"430","text":"431"},"Update the dependencies array to be: [courseAPI, localStorageService]",{"range":"432","text":"433"},"Update the dependencies array to be: [courseAPI, localStorageService, userAPI]",{"range":"434","text":"435"},[2593,2595],"[loadStudentTable]",[1156,1158],"[courseAPI, localStorageService]",[1330,1332],"[courseAPI, localStorageService, userAPI]"]