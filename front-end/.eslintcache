[{"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\index.tsx":"1","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\reportWebVitals.ts":"2","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\App.tsx":"3","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\SignupPage.tsx":"4","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\HomePage.tsx":"5","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\admin\\AdminConsolePage.tsx":"6","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\admin\\CreateAccountPage.tsx":"7","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\AdminPageHeader.tsx":"8","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\ModalDialog.tsx":"9","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\PageHeader.tsx":"10","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\TypeGuard.tsx":"11","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\model\\NewUser.tsx":"12","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\NewUserAPI.tsx":"13","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx":"14","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\ErrorHandle.tsx":"15","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\ManageStudentPage.tsx":"16","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\UserAPI.tsx":"17"},{"size":664,"mtime":1612694135022,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1611982232790,"results":"20","hashOfConfig":"19"},{"size":2581,"mtime":1614087613615,"results":"21","hashOfConfig":"19"},{"size":11545,"mtime":1612694135028,"results":"22","hashOfConfig":"19"},{"size":3677,"mtime":1612694135025,"results":"23","hashOfConfig":"19"},{"size":2944,"mtime":1612694135029,"results":"24","hashOfConfig":"19"},{"size":2543,"mtime":1612694135029,"results":"25","hashOfConfig":"19"},{"size":1077,"mtime":1612694135006,"results":"26","hashOfConfig":"19"},{"size":1737,"mtime":1612694135014,"results":"27","hashOfConfig":"19"},{"size":3773,"mtime":1612694135018,"results":"28","hashOfConfig":"19"},{"size":728,"mtime":1612694135020,"results":"29","hashOfConfig":"19"},{"size":647,"mtime":1612694135022,"results":"30","hashOfConfig":"19"},{"size":2267,"mtime":1612694704478,"results":"31","hashOfConfig":"19"},{"size":499,"mtime":1612694135019,"results":"32","hashOfConfig":"19"},{"size":1937,"mtime":1612694135019,"results":"33","hashOfConfig":"19"},{"size":11928,"mtime":1614087477850,"results":"34","hashOfConfig":"19"},{"size":3066,"mtime":1612762574086,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1b8gpek",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\index.tsx",[],["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90"],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\reportWebVitals.ts",["91"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\App.tsx",["92"],"// Import package members section:\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport { AdminPageHeader } from './common/component/AdminPageHeader';\r\nimport { ModalDialog } from './common/component/ModalDialog';\r\nimport { PageHeader } from './common/component/PageHeader';\r\nimport { AdminConsolePage } from './page/admin/AdminConsolePage';\r\nimport { CreateAccountPage } from './page/admin/CreateAccountPage';\r\nimport { HomePage } from './page/HomePage';\r\nimport { SignUpPage } from './page/SignupPage';\r\nimport {ManageStudentPage} from './page/ManageStudentPage';\r\n\r\nexport function App (): ReactElement {\r\n  \r\n  // Variables declaration:\r\n  let [showDialog, setShowDialog] = useState<boolean> (false);\r\n  let [dialogTitle, setDialogTitle] = useState<string> (\"\");\r\n  let [dialogBody, setDialogBody] = useState<string> (\"\");\r\n  let [dialogType, setDialogType] = useState<string> (\"\");\r\n  let modalDialog: ReactElement | undefined;\r\n\r\n  function handleCloseDialog (): void {\r\n    setShowDialog (false);\r\n  }\r\n\r\n  modalDialog =    \r\n    <ModalDialog \r\n      showDialog = {showDialog}\r\n      dialogTitle = {dialogTitle}\r\n      dialogBody = {dialogBody}\r\n      dialogType = {dialogType}\r\n      handleCloseDialog = {handleCloseDialog}\r\n    />;      \r\n        \r\n  /*\r\n   * function deleteUser (event: MouseEvent<HTMLButtonElement>){\r\n   *   event.preventDefault ();\r\n   *   userAPI = new UserAPI ();\r\n   *   userID = user.userID;\r\n   *   userAPI.deleteUser (userID);\r\n   * }\r\n   */\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact = {true} path=\"/\">\r\n        <PageHeader />\r\n        <HomePage />\r\n      </Route>\r\n      <Route path = \"/sign-up\">\r\n        <SignUpPage \r\n          setShowDialog = {setShowDialog}\r\n          setDialogTitle = {setDialogTitle}\r\n          setDialogBody = {setDialogBody}\r\n          setDialogType = {setDialogType}\r\n          handleCloseDialog = {handleCloseDialog}\r\n          modalDialog = {modalDialog} \r\n        />\r\n      </Route>\r\n      <Route path = \"/admin-console\">\r\n        <AdminPageHeader />\r\n        <AdminConsolePage />\r\n      </Route>\r\n      <Route path = \"/create-account-requests\">\r\n        <AdminPageHeader />\r\n        <CreateAccountPage \r\n          setShowDialog = {setShowDialog}\r\n          setDialogTitle = {setDialogTitle}\r\n          setDialogBody = {setDialogBody}\r\n          setDialogType = {setDialogType}\r\n          handleCloseDialog = {handleCloseDialog}\r\n          modalDialog = {modalDialog} \r\n        />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\n","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\SignupPage.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\HomePage.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\admin\\AdminConsolePage.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\admin\\CreateAccountPage.tsx",["93"],"// Import package members section:\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { NewUserAPI } from \"../../common/service/NewUserAPI\";\r\nimport { TypeGuard } from \"../../common/service/TypeGuard\";\r\nimport { NewUser } from \"../../model/NewUser\";\r\n\r\ninterface CreateAccountPageProps {\r\n    setShowDialog (showDialog: boolean): void;\r\n    setDialogTitle (dialogTitle: string): void;\r\n    setDialogBody (dialogBody: string): void;\r\n    setDialogType (dialogType: string): void;\r\n    handleCloseDialog (): void;\r\n    modalDialog: ReactElement;\r\n}\r\n\r\nexport function CreateAccountPage (\r\n    props: CreateAccountPageProps\r\n): ReactElement {\r\n\r\n    // Variables declaration:\r\n    let [newUserHolder, setNewUserHolder] = useState<NewUser[]> ([]);\r\n    let newUserAPI: NewUserAPI;\r\n    let typeGuardian: TypeGuard;\r\n\r\n    newUserAPI = new NewUserAPI ();\r\n    typeGuardian = new TypeGuard ();\r\n    \r\n    async function getAllCreateAccountRequests (): Promise<void> {\r\n        try {\r\n            setNewUserHolder (await newUserAPI.getAllNewUser ());\r\n        }\r\n        catch (apiError: unknown){\r\n            if (typeGuardian.isAxiosError (apiError)){\r\n                if (typeof apiError.code === \"string\"){\r\n                    props.setDialogTitle (`${apiError.code}: ${apiError.name}`);\r\n                }\r\n                else {\r\n                    props.setDialogTitle (apiError.name);\r\n                }\r\n                props.setDialogBody (apiError.message);\r\n                props.setDialogType (\"error\");\r\n                props.setShowDialog (true);\r\n            }\r\n            else {\r\n                throw new Error (\"This api error is not valid !\");\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect (\r\n        function fetchTableData (): void {\r\n            getAllCreateAccountRequests ();\r\n        }\r\n    , []\r\n    );\r\n\r\n    return (\r\n        <Container fluid = {true}>\r\n            <main>\r\n                <Container>\r\n                    <Row className = \"bg-white\">\r\n                        <Col>\r\n                            <h1>\r\n                                Create Account Requests\r\n                            </h1>\r\n                            <hr/>\r\n                            <Table responsive = \"md\">\r\n\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n            <footer>\r\n            </footer>\r\n        </Container>\r\n    );\r\n}","D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\AdminPageHeader.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\ModalDialog.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\component\\PageHeader.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\TypeGuard.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\model\\NewUser.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\NewUserAPI.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\AxiosInstanceGet.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\ErrorHandle.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\page\\ManageStudentPage.tsx",[],"D:\\Capstone\\Source code\\Language Center System\\language-center-system\\front-end\\src\\common\\service\\UserAPI.tsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":25,"nodeType":"130","messageId":"131","endLine":3,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":12,"column":9,"nodeType":"134","messageId":"135","endLine":12,"endColumn":26},{"ruleId":"132","severity":1,"message":"136","line":22,"column":10,"nodeType":"134","messageId":"135","endLine":22,"endColumn":23},"callback-return",[],"global-require",[],"handle-callback-err",[],"id-blacklist",["137"],"lines-around-directive",["138"],"no-buffer-constructor",[],"no-catch-shadow",["139"],"no-mixed-requires",[],"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-new-require",[],"no-path-concat",[],"no-process-env",[],"no-process-exit",[],"no-restricted-modules",[],"no-sync",[],"prefer-reflect",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'ManageStudentPage' is defined but never used.","Identifier","unusedVar","'newUserHolder' is assigned a value but never used.","id-denylist","padding-line-between-statements","no-shadow","no-global-assign","no-unsafe-negation"]